// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.8.21                         -- www.JsonSchema42.org
import * as types from "./types.js";
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#
export function isSchema20210928(value: unknown): value is types.Schema20210928 {
if(!_isMapSchema20210928(value)) {
return false;
}
return true;
}
function _isMapSchema20210928(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("openapi" in value)) {
return false;
}
if(!("info" in value)) {
return false;
}
if(!("paths" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "openapi":
if(!isOpenapi(propertyValue)) {
return false;
}
continue;
case "info":
if(!isPropertiesInfo(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isSchema20210928ExternalDocs(propertyValue)) {
return false;
}
continue;
case "servers":
if(!isSchema20210928Servers(propertyValue)) {
return false;
}
continue;
case "security":
if(!isSchema20210928Security(propertyValue)) {
return false;
}
continue;
case "tags":
if(!isSchema20210928Tags(propertyValue)) {
return false;
}
continue;
case "paths":
if(!isPropertiesPaths(propertyValue)) {
return false;
}
continue;
case "components":
if(!isPropertiesComponents(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isSchema20210928X(propertyValue)) {
return false;
}
continue;
}
if(!isSchema20210928AdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Reference
export function isReference(value: unknown): value is types.Reference {
if(!_isMapReference(value)) {
return false;
}
return true;
}
function _isMapReference(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^\\$ref$").test(propertyName)) {
if(!isPatternPropertiesRef(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info
export function isDefinitionsInfo(value: unknown): value is types.DefinitionsInfo {
if(!_isMapDefinitionsInfo(value)) {
return false;
}
return true;
}
function _isMapDefinitionsInfo(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("title" in value)) {
return false;
}
if(!("version" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "title":
if(!isInfoTitle(propertyValue)) {
return false;
}
continue;
case "description":
if(!isInfoDescription(propertyValue)) {
return false;
}
continue;
case "termsOfService":
if(!isTermsOfService(propertyValue)) {
return false;
}
continue;
case "contact":
if(!isPropertiesContact(propertyValue)) {
return false;
}
continue;
case "license":
if(!isPropertiesLicense(propertyValue)) {
return false;
}
continue;
case "version":
if(!isVersion(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isInfoX(propertyValue)) {
return false;
}
continue;
}
if(!isInfoAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact
export function isDefinitionsContact(value: unknown): value is types.DefinitionsContact {
if(!_isMapDefinitionsContact(value)) {
return false;
}
return true;
}
function _isMapDefinitionsContact(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isContactName(propertyValue)) {
return false;
}
continue;
case "url":
if(!isContactUrl(propertyValue)) {
return false;
}
continue;
case "email":
if(!isEmail(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isContactX(propertyValue)) {
return false;
}
continue;
}
if(!isContactAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/License
export function isDefinitionsLicense(value: unknown): value is types.DefinitionsLicense {
if(!_isMapDefinitionsLicense(value)) {
return false;
}
return true;
}
function _isMapDefinitionsLicense(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isLicenseName(propertyValue)) {
return false;
}
continue;
case "url":
if(!isLicenseUrl(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isLicenseX(propertyValue)) {
return false;
}
continue;
}
if(!isLicenseAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server
export function isDefinitionsServer(value: unknown): value is types.DefinitionsServer {
if(!_isMapDefinitionsServer(value)) {
return false;
}
return true;
}
function _isMapDefinitionsServer(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("url" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "url":
if(!isServerUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isServerDescription(propertyValue)) {
return false;
}
continue;
case "variables":
if(!isVariables(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isServerX(propertyValue)) {
return false;
}
continue;
}
if(!isServerAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable
export function isServerVariable(value: unknown): value is types.ServerVariable {
if(!_isMapServerVariable(value)) {
return false;
}
return true;
}
function _isMapServerVariable(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("default" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "enum":
if(!isServerVariableEnum(propertyValue)) {
return false;
}
continue;
case "default":
if(!isServerVariableDefault(propertyValue)) {
return false;
}
continue;
case "description":
if(!isServerVariableDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isServerVariableX(propertyValue)) {
return false;
}
continue;
}
if(!isServerVariableAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components
export function isDefinitionsComponents(value: unknown): value is types.DefinitionsComponents {
if(!_isMapDefinitionsComponents(value)) {
return false;
}
return true;
}
function _isMapDefinitionsComponents(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "schemas":
if(!isSchemas(propertyValue)) {
return false;
}
continue;
case "responses":
if(!isComponentsPropertiesResponses(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isComponentsParameters(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isComponentsExamples(propertyValue)) {
return false;
}
continue;
case "requestBodies":
if(!isRequestBodies(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isComponentsHeaders(propertyValue)) {
return false;
}
continue;
case "securitySchemes":
if(!isSecuritySchemes(propertyValue)) {
return false;
}
continue;
case "links":
if(!isComponentsLinks(propertyValue)) {
return false;
}
continue;
case "callbacks":
if(!isComponentsCallbacks(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isComponentsX(propertyValue)) {
return false;
}
continue;
}
if(!isComponentsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema
export function isDefinitionsSchema(value: unknown): value is types.DefinitionsSchema {
if(!_isMapDefinitionsSchema(value)) {
return false;
}
return true;
}
function _isMapDefinitionsSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "title":
if(!isSchemaTitle(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isMultipleOf(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isUniqueItems(propertyValue)) {
return false;
}
continue;
case "maxProperties":
if(!isMaxProperties(propertyValue)) {
return false;
}
continue;
case "minProperties":
if(!isMinProperties(propertyValue)) {
return false;
}
continue;
case "required":
if(!isSchemaRequired(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isSchemaEnum(propertyValue)) {
return false;
}
continue;
case "type":
if(!isSchemaType(propertyValue)) {
return false;
}
continue;
case "not":
if(!isPropertiesNot(propertyValue)) {
return false;
}
continue;
case "allOf":
if(!isAllOf(propertyValue)) {
return false;
}
continue;
case "oneOf":
if(!isOneOf(propertyValue)) {
return false;
}
continue;
case "anyOf":
if(!isAnyOf(propertyValue)) {
return false;
}
continue;
case "items":
if(!isPropertiesItems(propertyValue)) {
return false;
}
continue;
case "properties":
if(!isProperties(propertyValue)) {
return false;
}
continue;
case "additionalProperties":
if(!isSchemaPropertiesAdditionalProperties(propertyValue)) {
return false;
}
continue;
case "description":
if(!isSchemaDescription(propertyValue)) {
return false;
}
continue;
case "format":
if(!isFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isSchemaDefault(propertyValue)) {
return false;
}
continue;
case "nullable":
if(!isNullable(propertyValue)) {
return false;
}
continue;
case "discriminator":
if(!isPropertiesDiscriminator(propertyValue)) {
return false;
}
continue;
case "readOnly":
if(!isReadOnly(propertyValue)) {
return false;
}
continue;
case "writeOnly":
if(!isWriteOnly(propertyValue)) {
return false;
}
continue;
case "example":
if(!isSchemaPropertiesExample(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isSchemaExternalDocs(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isSchemaDeprecated(propertyValue)) {
return false;
}
continue;
case "xml":
if(!isPropertiesXml(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator
export function isDefinitionsDiscriminator(value: unknown): value is types.DefinitionsDiscriminator {
if(!_isMapDefinitionsDiscriminator(value)) {
return false;
}
return true;
}
function _isMapDefinitionsDiscriminator(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("propertyName" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "propertyName":
if(!isPropertyName(propertyValue)) {
return false;
}
continue;
case "mapping":
if(!isMapping(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML
export function isDefinitionsXml(value: unknown): value is types.DefinitionsXml {
if(!_isMapDefinitionsXml(value)) {
return false;
}
return true;
}
function _isMapDefinitionsXml(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isXmlName(propertyValue)) {
return false;
}
continue;
case "namespace":
if(!isNamespace(propertyValue)) {
return false;
}
continue;
case "prefix":
if(!isPrefix(propertyValue)) {
return false;
}
continue;
case "attribute":
if(!isAttribute(propertyValue)) {
return false;
}
continue;
case "wrapped":
if(!isWrapped(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isXmlX(propertyValue)) {
return false;
}
continue;
}
if(!isXmlAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response
export function isResponse(value: unknown): value is types.Response {
if(!_isMapResponse(value)) {
return false;
}
return true;
}
function _isMapResponse(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("description" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isResponseDescription(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isResponseHeaders(propertyValue)) {
return false;
}
continue;
case "content":
if(!isResponseContent(propertyValue)) {
return false;
}
continue;
case "links":
if(!isResponseLinks(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isResponseX(propertyValue)) {
return false;
}
continue;
}
if(!isResponseAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType
export function isMediaType(value: unknown): value is types.MediaType {
if(!_isMapMediaType(value)) {
return false;
}
if(!_isAllOfMediaType(value)) {
return false;
}
return true;
}
function _isMapMediaType(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "schema":
if(!isMediaTypePropertiesSchema(propertyValue)) {
return false;
}
continue;
case "example":
if(!isMediaTypePropertiesExample(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isMediaTypeExamples(propertyValue)) {
return false;
}
continue;
case "encoding":
if(!isPropertiesEncoding(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isMediaTypeX(propertyValue)) {
return false;
}
continue;
}
if(!isMediaTypeAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
function _isAllOfMediaType(value: unknown): value is unknown {
if(!isMediaTypeAllOf0(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example
export function isDefinitionsExample(value: unknown): value is types.DefinitionsExample {
if(!_isMapDefinitionsExample(value)) {
return false;
}
return true;
}
function _isMapDefinitionsExample(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "summary":
if(!isExampleSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isExampleDescription(propertyValue)) {
return false;
}
continue;
case "value":
if(!isValue(propertyValue)) {
return false;
}
continue;
case "externalValue":
if(!isExternalValue(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isExampleX(propertyValue)) {
return false;
}
continue;
}
if(!isExampleAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header
export function isHeader(value: unknown): value is types.Header {
if(!_isMapHeader(value)) {
return false;
}
if(!_isAllOfHeader(value)) {
return false;
}
return true;
}
function _isMapHeader(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isHeaderDescription(propertyValue)) {
return false;
}
continue;
case "required":
if(!isHeaderRequired(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isHeaderDeprecated(propertyValue)) {
return false;
}
continue;
case "allowEmptyValue":
if(!isHeaderAllowEmptyValue(propertyValue)) {
return false;
}
continue;
case "style":
if(!isHeaderStyle(propertyValue)) {
return false;
}
continue;
case "explode":
if(!isHeaderExplode(propertyValue)) {
return false;
}
continue;
case "allowReserved":
if(!isHeaderAllowReserved(propertyValue)) {
return false;
}
continue;
case "schema":
if(!isHeaderPropertiesSchema(propertyValue)) {
return false;
}
continue;
case "content":
if(!isHeaderContent(propertyValue)) {
return false;
}
continue;
case "example":
if(!isHeaderPropertiesExample(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isHeaderExamples(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isHeaderX(propertyValue)) {
return false;
}
continue;
}
if(!isHeaderAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
function _isAllOfHeader(value: unknown): value is unknown {
if(!isHeaderAllOf0(value)) {
return false;
}
if(!isHeaderAllOf1(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Paths
export function isDefinitionsPaths(value: unknown): value is types.DefinitionsPaths {
if(!_isMapDefinitionsPaths(value)) {
return false;
}
return true;
}
function _isMapDefinitionsPaths(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^\\/").test(propertyName)) {
if(!isPatternProperties(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isPathsX(propertyValue)) {
return false;
}
continue;
}
if(!isPathsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem
export function isPathItem(value: unknown): value is types.PathItem {
if(!_isMapPathItem(value)) {
return false;
}
return true;
}
function _isMapPathItem(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "$ref":
if(!isPropertiesRef(propertyValue)) {
return false;
}
continue;
case "summary":
if(!isPathItemSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isPathItemDescription(propertyValue)) {
return false;
}
continue;
case "servers":
if(!isPathItemServers(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isPathItemParameters(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^(get|put|post|delete|options|head|patch|trace)$").test(propertyName)) {
if(!isGetPutPostDeleteOptionsHeadPatchTrace(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isPathItemX(propertyValue)) {
return false;
}
continue;
}
if(!isPathItemAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation
export function isOperation(value: unknown): value is types.Operation {
if(!_isMapOperation(value)) {
return false;
}
return true;
}
function _isMapOperation(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("responses" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tags":
if(!isOperationTags(propertyValue)) {
return false;
}
continue;
case "summary":
if(!isOperationSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOperationDescription(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isOperationExternalDocs(propertyValue)) {
return false;
}
continue;
case "operationId":
if(!isOperationOperationId(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isOperationParameters(propertyValue)) {
return false;
}
continue;
case "requestBody":
if(!isOperationPropertiesRequestBody(propertyValue)) {
return false;
}
continue;
case "responses":
if(!isOperationPropertiesResponses(propertyValue)) {
return false;
}
continue;
case "callbacks":
if(!isOperationCallbacks(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isOperationDeprecated(propertyValue)) {
return false;
}
continue;
case "security":
if(!isOperationSecurity(propertyValue)) {
return false;
}
continue;
case "servers":
if(!isOperationServers(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOperationX(propertyValue)) {
return false;
}
continue;
}
if(!isOperationAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses
export function isDefinitionsResponses(value: unknown): value is types.DefinitionsResponses {
if(!_isMapDefinitionsResponses(value)) {
return false;
}
return true;
}
function _isMapDefinitionsResponses(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "default":
if(!isResponsesDefault(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^[1-5](?:\\d{2}|XX)$").test(propertyName)) {
if(!isPatternProperties15D2Xx(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isResponsesX(propertyValue)) {
return false;
}
continue;
}
if(!isResponsesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
if(propertyCount < 1) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityRequirement
export function isSecurityRequirement(value: unknown): value is types.SecurityRequirement {
if(!_isMapSecurityRequirement(value)) {
return false;
}
return true;
}
function _isMapSecurityRequirement(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isSecurityRequirementAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag
export function isTag(value: unknown): value is types.Tag {
if(!_isMapTag(value)) {
return false;
}
return true;
}
function _isMapTag(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isTagName(propertyValue)) {
return false;
}
continue;
case "description":
if(!isTagDescription(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isTagExternalDocs(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isTagX(propertyValue)) {
return false;
}
continue;
}
if(!isTagAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExternalDocumentation
export function isExternalDocumentation(value: unknown): value is types.ExternalDocumentation {
if(!_isMapExternalDocumentation(value)) {
return false;
}
return true;
}
function _isMapExternalDocumentation(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("url" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isExternalDocumentationDescription(propertyValue)) {
return false;
}
continue;
case "url":
if(!isExternalDocumentationUrl(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isExternalDocumentationX(propertyValue)) {
return false;
}
continue;
}
if(!isExternalDocumentationAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExampleXORExamples
export function isExampleXorExamples(value: unknown): value is types.ExampleXorExamples {
if(!_isNotExampleXorExamples(value)) {
return false;
}
return true;
}
function _isNotExampleXorExamples(value: unknown): value is unknown {
if(isExampleXorExamplesNot(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent
export function isSchemaXorContent(value: unknown): value is types.SchemaXorContent {
if(!_isOneOfSchemaXorContent(value) || !_isNotSchemaXorContent(value)) {
return false;
}
return true;
}
function _isOneOfSchemaXorContent(value: unknown): value is unknown {
let validCounter = 0;
if(isSchemaXorContentOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSchemaXorContentOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
function _isNotSchemaXorContent(value: unknown): value is unknown {
if(isSchemaXorContentNot(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter
export function isParameter(value: unknown): value is types.Parameter {
if(!_isMapParameter(value)) {
return false;
}
if(!_isAllOfParameter(value)) {
return false;
}
return true;
}
function _isMapParameter(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isParameterName(propertyValue)) {
return false;
}
continue;
case "in":
if(!isParameterIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isParameterDescription(propertyValue)) {
return false;
}
continue;
case "required":
if(!isParameterRequired(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isParameterDeprecated(propertyValue)) {
return false;
}
continue;
case "allowEmptyValue":
if(!isParameterAllowEmptyValue(propertyValue)) {
return false;
}
continue;
case "style":
if(!isParameterStyle(propertyValue)) {
return false;
}
continue;
case "explode":
if(!isParameterExplode(propertyValue)) {
return false;
}
continue;
case "allowReserved":
if(!isParameterAllowReserved(propertyValue)) {
return false;
}
continue;
case "schema":
if(!isParameterPropertiesSchema(propertyValue)) {
return false;
}
continue;
case "content":
if(!isParameterContent(propertyValue)) {
return false;
}
continue;
case "example":
if(!isParameterPropertiesExample(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isParameterExamples(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isParameterX(propertyValue)) {
return false;
}
continue;
}
if(!isParameterAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
function _isAllOfParameter(value: unknown): value is unknown {
if(!isParameterAllOf0(value)) {
return false;
}
if(!isParameterAllOf1(value)) {
return false;
}
if(!isParameterAllOf2(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation
export function isParameterLocation(value: unknown): value is types.ParameterLocation {
if(!_isOneOfParameterLocation(value)) {
return false;
}
return true;
}
function _isOneOfParameterLocation(value: unknown): value is unknown {
let validCounter = 0;
if(isParameterLocationOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterLocationOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterLocationOneOf2(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterLocationOneOf3(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody
export function isDefinitionsRequestBody(value: unknown): value is types.DefinitionsRequestBody {
if(!_isMapDefinitionsRequestBody(value)) {
return false;
}
return true;
}
function _isMapDefinitionsRequestBody(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("content" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isRequestBodyDescription(propertyValue)) {
return false;
}
continue;
case "content":
if(!isRequestBodyContent(propertyValue)) {
return false;
}
continue;
case "required":
if(!isRequestBodyRequired(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isRequestBodyX(propertyValue)) {
return false;
}
continue;
}
if(!isRequestBodyAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityScheme
export function isSecurityScheme(value: unknown): value is types.SecurityScheme {
if(!_isOneOfSecurityScheme(value)) {
return false;
}
return true;
}
function _isOneOfSecurityScheme(value: unknown): value is unknown {
let validCounter = 0;
if(isSecuritySchemeOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSecuritySchemeOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSecuritySchemeOneOf2(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSecuritySchemeOneOf3(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme
export function isApiKeySecurityScheme(value: unknown): value is types.ApiKeySecurityScheme {
if(!_isMapApiKeySecurityScheme(value)) {
return false;
}
return true;
}
function _isMapApiKeySecurityScheme(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isApiKeySecuritySchemeType(propertyValue)) {
return false;
}
continue;
case "name":
if(!isApiKeySecuritySchemeName(propertyValue)) {
return false;
}
continue;
case "in":
if(!isApiKeySecuritySchemeIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isApiKeySecuritySchemeDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isApiKeySecuritySchemeX(propertyValue)) {
return false;
}
continue;
}
if(!isApiKeySecuritySchemeAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme
export function isHttpSecurityScheme(value: unknown): value is types.HttpSecurityScheme {
if(!_isMapHttpSecurityScheme(value)) {
return false;
}
if(!_isOneOfHttpSecurityScheme(value)) {
return false;
}
return true;
}
function _isMapHttpSecurityScheme(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("scheme" in value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "scheme":
if(!isHttpSecuritySchemeScheme(propertyValue)) {
return false;
}
continue;
case "bearerFormat":
if(!isBearerFormat(propertyValue)) {
return false;
}
continue;
case "description":
if(!isHttpSecuritySchemeDescription(propertyValue)) {
return false;
}
continue;
case "type":
if(!isHttpSecuritySchemeType(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isHttpSecuritySchemeX(propertyValue)) {
return false;
}
continue;
}
if(!isHttpSecuritySchemeAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
function _isOneOfHttpSecurityScheme(value: unknown): value is unknown {
let validCounter = 0;
if(isHttpSecuritySchemeOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isHttpSecuritySchemeOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme
export function isOauth2SecurityScheme(value: unknown): value is types.Oauth2SecurityScheme {
if(!_isMapOauth2SecurityScheme(value)) {
return false;
}
return true;
}
function _isMapOauth2SecurityScheme(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("flows" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isOauth2SecuritySchemeType(propertyValue)) {
return false;
}
continue;
case "flows":
if(!isFlows(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOauth2SecuritySchemeDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOauth2SecuritySchemeX(propertyValue)) {
return false;
}
continue;
}
if(!isOauth2SecuritySchemeAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme
export function isOpenIdConnectSecurityScheme(value: unknown): value is types.OpenIdConnectSecurityScheme {
if(!_isMapOpenIdConnectSecurityScheme(value)) {
return false;
}
return true;
}
function _isMapOpenIdConnectSecurityScheme(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("openIdConnectUrl" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isOpenIdConnectSecuritySchemeType(propertyValue)) {
return false;
}
continue;
case "openIdConnectUrl":
if(!isOpenIdConnectUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOpenIdConnectSecuritySchemeDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOpenIdConnectSecuritySchemeX(propertyValue)) {
return false;
}
continue;
}
if(!isOpenIdConnectSecuritySchemeAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows
export function isOauthFlows(value: unknown): value is types.OauthFlows {
if(!_isMapOauthFlows(value)) {
return false;
}
return true;
}
function _isMapOauthFlows(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "implicit":
if(!isImplicit(propertyValue)) {
return false;
}
continue;
case "password":
if(!isPassword(propertyValue)) {
return false;
}
continue;
case "clientCredentials":
if(!isClientCredentials(propertyValue)) {
return false;
}
continue;
case "authorizationCode":
if(!isAuthorizationCode(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOauthFlowsX(propertyValue)) {
return false;
}
continue;
}
if(!isOauthFlowsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow
export function isImplicitOauthFlow(value: unknown): value is types.ImplicitOauthFlow {
if(!_isMapImplicitOauthFlow(value)) {
return false;
}
return true;
}
function _isMapImplicitOauthFlow(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("authorizationUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "authorizationUrl":
if(!isImplicitOauthFlowAuthorizationUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isImplicitOauthFlowRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isImplicitOauthFlowScopes(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isImplicitOauthFlowX(propertyValue)) {
return false;
}
continue;
}
if(!isImplicitOauthFlowAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow
export function isPasswordOauthFlow(value: unknown): value is types.PasswordOauthFlow {
if(!_isMapPasswordOauthFlow(value)) {
return false;
}
return true;
}
function _isMapPasswordOauthFlow(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tokenUrl":
if(!isPasswordOauthFlowTokenUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isPasswordOauthFlowRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isPasswordOauthFlowScopes(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isPasswordOauthFlowX(propertyValue)) {
return false;
}
continue;
}
if(!isPasswordOauthFlowAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow
export function isClientCredentialsFlow(value: unknown): value is types.ClientCredentialsFlow {
if(!_isMapClientCredentialsFlow(value)) {
return false;
}
return true;
}
function _isMapClientCredentialsFlow(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tokenUrl":
if(!isClientCredentialsFlowTokenUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isClientCredentialsFlowRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isClientCredentialsFlowScopes(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isClientCredentialsFlowX(propertyValue)) {
return false;
}
continue;
}
if(!isClientCredentialsFlowAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow
export function isAuthorizationCodeOauthFlow(value: unknown): value is types.AuthorizationCodeOauthFlow {
if(!_isMapAuthorizationCodeOauthFlow(value)) {
return false;
}
return true;
}
function _isMapAuthorizationCodeOauthFlow(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("authorizationUrl" in value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "authorizationUrl":
if(!isAuthorizationCodeOauthFlowAuthorizationUrl(propertyValue)) {
return false;
}
continue;
case "tokenUrl":
if(!isAuthorizationCodeOauthFlowTokenUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isAuthorizationCodeOauthFlowRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isAuthorizationCodeOauthFlowScopes(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isAuthorizationCodeOauthFlowX(propertyValue)) {
return false;
}
continue;
}
if(!isAuthorizationCodeOauthFlowAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link
export function isLink(value: unknown): value is types.Link {
if(!_isMapLink(value)) {
return false;
}
if(!_isNotLink(value)) {
return false;
}
return true;
}
function _isMapLink(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "operationId":
if(!isLinkOperationId(propertyValue)) {
return false;
}
continue;
case "operationRef":
if(!isOperationRef(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isLinkParameters(propertyValue)) {
return false;
}
continue;
case "requestBody":
if(!isLinkPropertiesRequestBody(propertyValue)) {
return false;
}
continue;
case "description":
if(!isLinkDescription(propertyValue)) {
return false;
}
continue;
case "server":
if(!isPropertiesServer(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isLinkX(propertyValue)) {
return false;
}
continue;
}
if(!isLinkAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
function _isNotLink(value: unknown): value is unknown {
if(isLinkNot(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Callback
export function isCallback(value: unknown): value is types.Callback {
if(!_isMapCallback(value)) {
return false;
}
return true;
}
function _isMapCallback(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^x-").test(propertyName)) {
if(!isCallbackX(propertyValue)) {
return false;
}
continue;
}
if(!isCallbackAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding
export function isDefinitionsEncoding(value: unknown): value is types.DefinitionsEncoding {
if(!_isMapDefinitionsEncoding(value)) {
return false;
}
return true;
}
function _isMapDefinitionsEncoding(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "contentType":
if(!isContentType(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isEncodingHeaders(propertyValue)) {
return false;
}
continue;
case "style":
if(!isEncodingStyle(propertyValue)) {
return false;
}
continue;
case "explode":
if(!isEncodingExplode(propertyValue)) {
return false;
}
continue;
case "allowReserved":
if(!isEncodingAllowReserved(propertyValue)) {
return false;
}
continue;
}
if(!isDefinitionsEncodingAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/openapi
export function isOpenapi(value: unknown): value is types.Openapi {
if(!_isStringOpenapi(value)) {
return false;
}
return true;
}
function _isStringOpenapi(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^3\\.0\\.\\d(-.+)?$").test(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/info
export function isPropertiesInfo(value: unknown): value is types.PropertiesInfo {
if(!_isReferencePropertiesInfo(value)) {
return false;
}
return true;
}
function _isReferencePropertiesInfo(value: unknown): value is unknown {
if(!isDefinitionsInfo(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/externalDocs
export function isSchema20210928ExternalDocs(value: unknown): value is types.Schema20210928ExternalDocs {
if(!_isReferenceSchema20210928ExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceSchema20210928ExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/servers
export function isSchema20210928Servers(value: unknown): value is types.Schema20210928Servers {
if(!_isArraySchema20210928Servers(value)) {
return false;
}
return true;
}
function _isArraySchema20210928Servers(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isSchema20210928ServersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/security
export function isSchema20210928Security(value: unknown): value is types.Schema20210928Security {
if(!_isArraySchema20210928Security(value)) {
return false;
}
return true;
}
function _isArraySchema20210928Security(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isSchema20210928SecurityItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/tags
export function isSchema20210928Tags(value: unknown): value is types.Schema20210928Tags {
if(!_isArraySchema20210928Tags(value)) {
return false;
}
return true;
}
function _isArraySchema20210928Tags(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isSchema20210928TagsItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/paths
export function isPropertiesPaths(value: unknown): value is types.PropertiesPaths {
if(!_isReferencePropertiesPaths(value)) {
return false;
}
return true;
}
function _isReferencePropertiesPaths(value: unknown): value is unknown {
if(!isDefinitionsPaths(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/components
export function isPropertiesComponents(value: unknown): value is types.PropertiesComponents {
if(!_isReferencePropertiesComponents(value)) {
return false;
}
return true;
}
function _isReferencePropertiesComponents(value: unknown): value is unknown {
if(!isDefinitionsComponents(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/additionalProperties
export function isSchema20210928AdditionalProperties(value: unknown): value is types.Schema20210928AdditionalProperties {
if(!_isNeverSchema20210928AdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverSchema20210928AdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/patternProperties/^x-
export function isSchema20210928X(value: unknown): value is types.Schema20210928X {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Reference/patternProperties/^\$ref$
export function isPatternPropertiesRef(value: unknown): value is types.PatternPropertiesRef {
if(!_isStringPatternPropertiesRef(value)) {
return false;
}
return true;
}
function _isStringPatternPropertiesRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/title
export function isInfoTitle(value: unknown): value is types.InfoTitle {
if(!_isStringInfoTitle(value)) {
return false;
}
return true;
}
function _isStringInfoTitle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/description
export function isInfoDescription(value: unknown): value is types.InfoDescription {
if(!_isStringInfoDescription(value)) {
return false;
}
return true;
}
function _isStringInfoDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/termsOfService
export function isTermsOfService(value: unknown): value is types.TermsOfService {
if(!_isStringTermsOfService(value)) {
return false;
}
return true;
}
function _isStringTermsOfService(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/contact
export function isPropertiesContact(value: unknown): value is types.PropertiesContact {
if(!_isReferencePropertiesContact(value)) {
return false;
}
return true;
}
function _isReferencePropertiesContact(value: unknown): value is unknown {
if(!isDefinitionsContact(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/license
export function isPropertiesLicense(value: unknown): value is types.PropertiesLicense {
if(!_isReferencePropertiesLicense(value)) {
return false;
}
return true;
}
function _isReferencePropertiesLicense(value: unknown): value is unknown {
if(!isDefinitionsLicense(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/version
export function isVersion(value: unknown): value is types.Version {
if(!_isStringVersion(value)) {
return false;
}
return true;
}
function _isStringVersion(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/additionalProperties
export function isInfoAdditionalProperties(value: unknown): value is types.InfoAdditionalProperties {
if(!_isNeverInfoAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverInfoAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/patternProperties/^x-
export function isInfoX(value: unknown): value is types.InfoX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact/properties/name
export function isContactName(value: unknown): value is types.ContactName {
if(!_isStringContactName(value)) {
return false;
}
return true;
}
function _isStringContactName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact/properties/url
export function isContactUrl(value: unknown): value is types.ContactUrl {
if(!_isStringContactUrl(value)) {
return false;
}
return true;
}
function _isStringContactUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact/properties/email
export function isEmail(value: unknown): value is types.Email {
if(!_isStringEmail(value)) {
return false;
}
return true;
}
function _isStringEmail(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact/additionalProperties
export function isContactAdditionalProperties(value: unknown): value is types.ContactAdditionalProperties {
if(!_isNeverContactAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverContactAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact/patternProperties/^x-
export function isContactX(value: unknown): value is types.ContactX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/License/properties/name
export function isLicenseName(value: unknown): value is types.LicenseName {
if(!_isStringLicenseName(value)) {
return false;
}
return true;
}
function _isStringLicenseName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/License/properties/url
export function isLicenseUrl(value: unknown): value is types.LicenseUrl {
if(!_isStringLicenseUrl(value)) {
return false;
}
return true;
}
function _isStringLicenseUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/License/additionalProperties
export function isLicenseAdditionalProperties(value: unknown): value is types.LicenseAdditionalProperties {
if(!_isNeverLicenseAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverLicenseAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/License/patternProperties/^x-
export function isLicenseX(value: unknown): value is types.LicenseX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/properties/url
export function isServerUrl(value: unknown): value is types.ServerUrl {
if(!_isStringServerUrl(value)) {
return false;
}
return true;
}
function _isStringServerUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/properties/description
export function isServerDescription(value: unknown): value is types.ServerDescription {
if(!_isStringServerDescription(value)) {
return false;
}
return true;
}
function _isStringServerDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/properties/variables
export function isVariables(value: unknown): value is types.Variables {
if(!_isMapVariables(value)) {
return false;
}
return true;
}
function _isMapVariables(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isVariablesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/additionalProperties
export function isServerAdditionalProperties(value: unknown): value is types.ServerAdditionalProperties {
if(!_isNeverServerAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverServerAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/patternProperties/^x-
export function isServerX(value: unknown): value is types.ServerX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/enum
export function isServerVariableEnum(value: unknown): value is types.ServerVariableEnum {
if(!_isArrayServerVariableEnum(value)) {
return false;
}
return true;
}
function _isArrayServerVariableEnum(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isServerVariableEnumItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/default
export function isServerVariableDefault(value: unknown): value is types.ServerVariableDefault {
if(!_isStringServerVariableDefault(value)) {
return false;
}
return true;
}
function _isStringServerVariableDefault(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/description
export function isServerVariableDescription(value: unknown): value is types.ServerVariableDescription {
if(!_isStringServerVariableDescription(value)) {
return false;
}
return true;
}
function _isStringServerVariableDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/additionalProperties
export function isServerVariableAdditionalProperties(value: unknown): value is types.ServerVariableAdditionalProperties {
if(!_isNeverServerVariableAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverServerVariableAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/patternProperties/^x-
export function isServerVariableX(value: unknown): value is types.ServerVariableX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/schemas
export function isSchemas(value: unknown): value is types.Schemas {
if(!_isMapSchemas(value)) {
return false;
}
return true;
}
function _isMapSchemas(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isSchemasAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/responses
export function isComponentsPropertiesResponses(value: unknown): value is types.ComponentsPropertiesResponses {
if(!_isMapComponentsPropertiesResponses(value)) {
return false;
}
return true;
}
function _isMapComponentsPropertiesResponses(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isResponsesAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/parameters
export function isComponentsParameters(value: unknown): value is types.ComponentsParameters {
if(!_isMapComponentsParameters(value)) {
return false;
}
return true;
}
function _isMapComponentsParameters(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isParametersAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/examples
export function isComponentsExamples(value: unknown): value is types.ComponentsExamples {
if(!_isMapComponentsExamples(value)) {
return false;
}
return true;
}
function _isMapComponentsExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isExamplesAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/requestBodies
export function isRequestBodies(value: unknown): value is types.RequestBodies {
if(!_isMapRequestBodies(value)) {
return false;
}
return true;
}
function _isMapRequestBodies(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isRequestBodiesAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/headers
export function isComponentsHeaders(value: unknown): value is types.ComponentsHeaders {
if(!_isMapComponentsHeaders(value)) {
return false;
}
return true;
}
function _isMapComponentsHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isHeadersAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/securitySchemes
export function isSecuritySchemes(value: unknown): value is types.SecuritySchemes {
if(!_isMapSecuritySchemes(value)) {
return false;
}
return true;
}
function _isMapSecuritySchemes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isSecuritySchemesAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/links
export function isComponentsLinks(value: unknown): value is types.ComponentsLinks {
if(!_isMapComponentsLinks(value)) {
return false;
}
return true;
}
function _isMapComponentsLinks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isLinksAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/callbacks
export function isComponentsCallbacks(value: unknown): value is types.ComponentsCallbacks {
if(!_isMapComponentsCallbacks(value)) {
return false;
}
return true;
}
function _isMapComponentsCallbacks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^[a-zA-Z0-9\\.\\-_]+$").test(propertyName)) {
if(!isCallbacksAZAZ09(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/additionalProperties
export function isComponentsAdditionalProperties(value: unknown): value is types.ComponentsAdditionalProperties {
if(!_isNeverComponentsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverComponentsAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/patternProperties/^x-
export function isComponentsX(value: unknown): value is types.ComponentsX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/title
export function isSchemaTitle(value: unknown): value is types.SchemaTitle {
if(!_isStringSchemaTitle(value)) {
return false;
}
return true;
}
function _isStringSchemaTitle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/multipleOf
export function isMultipleOf(value: unknown): value is types.MultipleOf {
if(!_isNumberMultipleOf(value)) {
return false;
}
return true;
}
function _isNumberMultipleOf(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value) || value % 1 !== 0) {
return false;
}
if(value <= 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maximum
export function isMaximum(value: unknown): value is types.Maximum {
if(!_isNumberMaximum(value)) {
return false;
}
return true;
}
function _isNumberMaximum(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value) || value % 1 !== 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/exclusiveMaximum
export function isExclusiveMaximum(value: unknown): value is types.ExclusiveMaximum {
if(!_isBooleanExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isBooleanExclusiveMaximum(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minimum
export function isMinimum(value: unknown): value is types.Minimum {
if(!_isNumberMinimum(value)) {
return false;
}
return true;
}
function _isNumberMinimum(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value) || value % 1 !== 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/exclusiveMinimum
export function isExclusiveMinimum(value: unknown): value is types.ExclusiveMinimum {
if(!_isBooleanExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isBooleanExclusiveMinimum(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maxLength
export function isMaxLength(value: unknown): value is types.MaxLength {
if(!_isIntegerMaxLength(value)) {
return false;
}
return true;
}
function _isIntegerMaxLength(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minLength
export function isMinLength(value: unknown): value is types.MinLength {
if(!_isIntegerMinLength(value)) {
return false;
}
return true;
}
function _isIntegerMinLength(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/pattern
export function isPattern(value: unknown): value is types.Pattern {
if(!_isStringPattern(value)) {
return false;
}
return true;
}
function _isStringPattern(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maxItems
export function isMaxItems(value: unknown): value is types.MaxItems {
if(!_isIntegerMaxItems(value)) {
return false;
}
return true;
}
function _isIntegerMaxItems(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minItems
export function isMinItems(value: unknown): value is types.MinItems {
if(!_isIntegerMinItems(value)) {
return false;
}
return true;
}
function _isIntegerMinItems(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/uniqueItems
export function isUniqueItems(value: unknown): value is types.UniqueItems {
if(!_isBooleanUniqueItems(value)) {
return false;
}
return true;
}
function _isBooleanUniqueItems(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maxProperties
export function isMaxProperties(value: unknown): value is types.MaxProperties {
if(!_isIntegerMaxProperties(value)) {
return false;
}
return true;
}
function _isIntegerMaxProperties(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minProperties
export function isMinProperties(value: unknown): value is types.MinProperties {
if(!_isIntegerMinProperties(value)) {
return false;
}
return true;
}
function _isIntegerMinProperties(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/required
export function isSchemaRequired(value: unknown): value is types.SchemaRequired {
if(!_isArraySchemaRequired(value)) {
return false;
}
return true;
}
function _isArraySchemaRequired(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isRequiredItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/enum
export function isSchemaEnum(value: unknown): value is types.SchemaEnum {
if(!_isArraySchemaEnum(value)) {
return false;
}
return true;
}
function _isArraySchemaEnum(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isSchemaEnumItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/type
export function isSchemaType(value: unknown): value is types.SchemaType {
if(!_isStringSchemaType(value)) {
return false;
}
return true;
}
function _isStringSchemaType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "array" && value !== "boolean" && value !== "integer" && value !== "number" && value !== "object" && value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/not
export function isPropertiesNot(value: unknown): value is types.PropertiesNot {
if(!_isOneOfPropertiesNot(value)) {
return false;
}
return true;
}
function _isOneOfPropertiesNot(value: unknown): value is unknown {
let validCounter = 0;
if(isNotOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isNotOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/allOf
export function isAllOf(value: unknown): value is types.AllOf {
if(!_isArrayAllOf(value)) {
return false;
}
return true;
}
function _isArrayAllOf(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isAllOfItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/oneOf
export function isOneOf(value: unknown): value is types.OneOf {
if(!_isArrayOneOf(value)) {
return false;
}
return true;
}
function _isArrayOneOf(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOneOfItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/anyOf
export function isAnyOf(value: unknown): value is types.AnyOf {
if(!_isArrayAnyOf(value)) {
return false;
}
return true;
}
function _isArrayAnyOf(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isAnyOfItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/items
export function isPropertiesItems(value: unknown): value is types.PropertiesItems {
if(!_isOneOfPropertiesItems(value)) {
return false;
}
return true;
}
function _isOneOfPropertiesItems(value: unknown): value is unknown {
let validCounter = 0;
if(isPropertiesItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isPropertiesItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/properties
export function isProperties(value: unknown): value is types.Properties {
if(!_isMapProperties(value)) {
return false;
}
return true;
}
function _isMapProperties(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isPropertiesPropertiesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/additionalProperties
export function isSchemaPropertiesAdditionalProperties(value: unknown): value is types.SchemaPropertiesAdditionalProperties {
if(!_isOneOfSchemaPropertiesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfSchemaPropertiesAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isSchemaPropertiesAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSchemaPropertiesAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isAdditionalPropertiesOneOf2(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/description
export function isSchemaDescription(value: unknown): value is types.SchemaDescription {
if(!_isStringSchemaDescription(value)) {
return false;
}
return true;
}
function _isStringSchemaDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/format
export function isFormat(value: unknown): value is types.Format {
if(!_isStringFormat(value)) {
return false;
}
return true;
}
function _isStringFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/default
export function isSchemaDefault(value: unknown): value is types.SchemaDefault {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/nullable
export function isNullable(value: unknown): value is types.Nullable {
if(!_isBooleanNullable(value)) {
return false;
}
return true;
}
function _isBooleanNullable(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/discriminator
export function isPropertiesDiscriminator(value: unknown): value is types.PropertiesDiscriminator {
if(!_isReferencePropertiesDiscriminator(value)) {
return false;
}
return true;
}
function _isReferencePropertiesDiscriminator(value: unknown): value is unknown {
if(!isDefinitionsDiscriminator(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/readOnly
export function isReadOnly(value: unknown): value is types.ReadOnly {
if(!_isBooleanReadOnly(value)) {
return false;
}
return true;
}
function _isBooleanReadOnly(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/writeOnly
export function isWriteOnly(value: unknown): value is types.WriteOnly {
if(!_isBooleanWriteOnly(value)) {
return false;
}
return true;
}
function _isBooleanWriteOnly(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/example
export function isSchemaPropertiesExample(value: unknown): value is types.SchemaPropertiesExample {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/externalDocs
export function isSchemaExternalDocs(value: unknown): value is types.SchemaExternalDocs {
if(!_isReferenceSchemaExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceSchemaExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/deprecated
export function isSchemaDeprecated(value: unknown): value is types.SchemaDeprecated {
if(!_isBooleanSchemaDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanSchemaDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/xml
export function isPropertiesXml(value: unknown): value is types.PropertiesXml {
if(!_isReferencePropertiesXml(value)) {
return false;
}
return true;
}
function _isReferencePropertiesXml(value: unknown): value is unknown {
if(!isDefinitionsXml(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/additionalProperties
export function isSchemaAdditionalProperties(value: unknown): value is types.SchemaAdditionalProperties {
if(!_isNeverSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/patternProperties/^x-
export function isSchemaX(value: unknown): value is types.SchemaX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator/properties/propertyName
export function isPropertyName(value: unknown): value is types.PropertyName {
if(!_isStringPropertyName(value)) {
return false;
}
return true;
}
function _isStringPropertyName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator/properties/mapping
export function isMapping(value: unknown): value is types.Mapping {
if(!_isMapMapping(value)) {
return false;
}
return true;
}
function _isMapMapping(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isMappingAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/name
export function isXmlName(value: unknown): value is types.XmlName {
if(!_isStringXmlName(value)) {
return false;
}
return true;
}
function _isStringXmlName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/namespace
export function isNamespace(value: unknown): value is types.Namespace {
if(!_isStringNamespace(value)) {
return false;
}
return true;
}
function _isStringNamespace(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/prefix
export function isPrefix(value: unknown): value is types.Prefix {
if(!_isStringPrefix(value)) {
return false;
}
return true;
}
function _isStringPrefix(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/attribute
export function isAttribute(value: unknown): value is types.Attribute {
if(!_isBooleanAttribute(value)) {
return false;
}
return true;
}
function _isBooleanAttribute(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/wrapped
export function isWrapped(value: unknown): value is types.Wrapped {
if(!_isBooleanWrapped(value)) {
return false;
}
return true;
}
function _isBooleanWrapped(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/additionalProperties
export function isXmlAdditionalProperties(value: unknown): value is types.XmlAdditionalProperties {
if(!_isNeverXmlAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverXmlAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/patternProperties/^x-
export function isXmlX(value: unknown): value is types.XmlX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/description
export function isResponseDescription(value: unknown): value is types.ResponseDescription {
if(!_isStringResponseDescription(value)) {
return false;
}
return true;
}
function _isStringResponseDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/headers
export function isResponseHeaders(value: unknown): value is types.ResponseHeaders {
if(!_isMapResponseHeaders(value)) {
return false;
}
return true;
}
function _isMapResponseHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isResponseHeadersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/content
export function isResponseContent(value: unknown): value is types.ResponseContent {
if(!_isMapResponseContent(value)) {
return false;
}
return true;
}
function _isMapResponseContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isResponseContentAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/links
export function isResponseLinks(value: unknown): value is types.ResponseLinks {
if(!_isMapResponseLinks(value)) {
return false;
}
return true;
}
function _isMapResponseLinks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isLinksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/additionalProperties
export function isResponseAdditionalProperties(value: unknown): value is types.ResponseAdditionalProperties {
if(!_isNeverResponseAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverResponseAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/patternProperties/^x-
export function isResponseX(value: unknown): value is types.ResponseX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/schema
export function isMediaTypePropertiesSchema(value: unknown): value is types.MediaTypePropertiesSchema {
if(!_isOneOfMediaTypePropertiesSchema(value)) {
return false;
}
return true;
}
function _isOneOfMediaTypePropertiesSchema(value: unknown): value is unknown {
let validCounter = 0;
if(isMediaTypeSchemaOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isMediaTypeSchemaOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/example
export function isMediaTypePropertiesExample(value: unknown): value is types.MediaTypePropertiesExample {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/examples
export function isMediaTypeExamples(value: unknown): value is types.MediaTypeExamples {
if(!_isMapMediaTypeExamples(value)) {
return false;
}
return true;
}
function _isMapMediaTypeExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isMediaTypeExamplesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/encoding
export function isPropertiesEncoding(value: unknown): value is types.PropertiesEncoding {
if(!_isMapPropertiesEncoding(value)) {
return false;
}
return true;
}
function _isMapPropertiesEncoding(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isPropertiesEncodingAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/additionalProperties
export function isMediaTypeAdditionalProperties(value: unknown): value is types.MediaTypeAdditionalProperties {
if(!_isNeverMediaTypeAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverMediaTypeAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/patternProperties/^x-
export function isMediaTypeX(value: unknown): value is types.MediaTypeX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/allOf/0
export function isMediaTypeAllOf0(value: unknown): value is types.MediaTypeAllOf0 {
if(!_isReferenceMediaTypeAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeAllOf0(value: unknown): value is unknown {
if(!isExampleXorExamples(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/properties/summary
export function isExampleSummary(value: unknown): value is types.ExampleSummary {
if(!_isStringExampleSummary(value)) {
return false;
}
return true;
}
function _isStringExampleSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/properties/description
export function isExampleDescription(value: unknown): value is types.ExampleDescription {
if(!_isStringExampleDescription(value)) {
return false;
}
return true;
}
function _isStringExampleDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/properties/value
export function isValue(value: unknown): value is types.Value {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/properties/externalValue
export function isExternalValue(value: unknown): value is types.ExternalValue {
if(!_isStringExternalValue(value)) {
return false;
}
return true;
}
function _isStringExternalValue(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/additionalProperties
export function isExampleAdditionalProperties(value: unknown): value is types.ExampleAdditionalProperties {
if(!_isNeverExampleAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverExampleAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/patternProperties/^x-
export function isExampleX(value: unknown): value is types.ExampleX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/description
export function isHeaderDescription(value: unknown): value is types.HeaderDescription {
if(!_isStringHeaderDescription(value)) {
return false;
}
return true;
}
function _isStringHeaderDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/required
export function isHeaderRequired(value: unknown): value is types.HeaderRequired {
if(!_isBooleanHeaderRequired(value)) {
return false;
}
return true;
}
function _isBooleanHeaderRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/deprecated
export function isHeaderDeprecated(value: unknown): value is types.HeaderDeprecated {
if(!_isBooleanHeaderDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanHeaderDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/allowEmptyValue
export function isHeaderAllowEmptyValue(value: unknown): value is types.HeaderAllowEmptyValue {
if(!_isBooleanHeaderAllowEmptyValue(value)) {
return false;
}
return true;
}
function _isBooleanHeaderAllowEmptyValue(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/style
export function isHeaderStyle(value: unknown): value is types.HeaderStyle {
if(!_isStringHeaderStyle(value)) {
return false;
}
return true;
}
function _isStringHeaderStyle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "simple") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/explode
export function isHeaderExplode(value: unknown): value is types.HeaderExplode {
if(!_isBooleanHeaderExplode(value)) {
return false;
}
return true;
}
function _isBooleanHeaderExplode(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/allowReserved
export function isHeaderAllowReserved(value: unknown): value is types.HeaderAllowReserved {
if(!_isBooleanHeaderAllowReserved(value)) {
return false;
}
return true;
}
function _isBooleanHeaderAllowReserved(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/schema
export function isHeaderPropertiesSchema(value: unknown): value is types.HeaderPropertiesSchema {
if(!_isOneOfHeaderPropertiesSchema(value)) {
return false;
}
return true;
}
function _isOneOfHeaderPropertiesSchema(value: unknown): value is unknown {
let validCounter = 0;
if(isHeaderSchemaOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isHeaderSchemaOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/content
export function isHeaderContent(value: unknown): value is types.HeaderContent {
if(!_isMapHeaderContent(value)) {
return false;
}
return true;
}
function _isMapHeaderContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
if(!isHeaderContentAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
if(propertyCount < 1) {
return false;
}
if(propertyCount > 1) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/example
export function isHeaderPropertiesExample(value: unknown): value is types.HeaderPropertiesExample {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/examples
export function isHeaderExamples(value: unknown): value is types.HeaderExamples {
if(!_isMapHeaderExamples(value)) {
return false;
}
return true;
}
function _isMapHeaderExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isHeaderExamplesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/additionalProperties
export function isHeaderAdditionalProperties(value: unknown): value is types.HeaderAdditionalProperties {
if(!_isNeverHeaderAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverHeaderAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/patternProperties/^x-
export function isHeaderX(value: unknown): value is types.HeaderX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/allOf/0
export function isHeaderAllOf0(value: unknown): value is types.HeaderAllOf0 {
if(!_isReferenceHeaderAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceHeaderAllOf0(value: unknown): value is unknown {
if(!isExampleXorExamples(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/allOf/1
export function isHeaderAllOf1(value: unknown): value is types.HeaderAllOf1 {
if(!_isReferenceHeaderAllOf1(value)) {
return false;
}
return true;
}
function _isReferenceHeaderAllOf1(value: unknown): value is unknown {
if(!isSchemaXorContent(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Paths/additionalProperties
export function isPathsAdditionalProperties(value: unknown): value is types.PathsAdditionalProperties {
if(!_isNeverPathsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPathsAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Paths/patternProperties/^\/
export function isPatternProperties(value: unknown): value is types.PatternProperties {
if(!_isReferencePatternProperties(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties(value: unknown): value is unknown {
if(!isPathItem(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Paths/patternProperties/^x-
export function isPathsX(value: unknown): value is types.PathsX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/$ref
export function isPropertiesRef(value: unknown): value is types.PropertiesRef {
if(!_isStringPropertiesRef(value)) {
return false;
}
return true;
}
function _isStringPropertiesRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/summary
export function isPathItemSummary(value: unknown): value is types.PathItemSummary {
if(!_isStringPathItemSummary(value)) {
return false;
}
return true;
}
function _isStringPathItemSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/description
export function isPathItemDescription(value: unknown): value is types.PathItemDescription {
if(!_isStringPathItemDescription(value)) {
return false;
}
return true;
}
function _isStringPathItemDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/servers
export function isPathItemServers(value: unknown): value is types.PathItemServers {
if(!_isArrayPathItemServers(value)) {
return false;
}
return true;
}
function _isArrayPathItemServers(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isPathItemServersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/parameters
export function isPathItemParameters(value: unknown): value is types.PathItemParameters {
if(!_isArrayPathItemParameters(value)) {
return false;
}
return true;
}
function _isArrayPathItemParameters(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isPathItemParametersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/additionalProperties
export function isPathItemAdditionalProperties(value: unknown): value is types.PathItemAdditionalProperties {
if(!_isNeverPathItemAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPathItemAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/patternProperties/^(get|put|post|delete|options|head|patch|trace)$
export function isGetPutPostDeleteOptionsHeadPatchTrace(value: unknown): value is types.GetPutPostDeleteOptionsHeadPatchTrace {
if(!_isReferenceGetPutPostDeleteOptionsHeadPatchTrace(value)) {
return false;
}
return true;
}
function _isReferenceGetPutPostDeleteOptionsHeadPatchTrace(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/patternProperties/^x-
export function isPathItemX(value: unknown): value is types.PathItemX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/tags
export function isOperationTags(value: unknown): value is types.OperationTags {
if(!_isArrayOperationTags(value)) {
return false;
}
return true;
}
function _isArrayOperationTags(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationTagsItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/summary
export function isOperationSummary(value: unknown): value is types.OperationSummary {
if(!_isStringOperationSummary(value)) {
return false;
}
return true;
}
function _isStringOperationSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/description
export function isOperationDescription(value: unknown): value is types.OperationDescription {
if(!_isStringOperationDescription(value)) {
return false;
}
return true;
}
function _isStringOperationDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/externalDocs
export function isOperationExternalDocs(value: unknown): value is types.OperationExternalDocs {
if(!_isReferenceOperationExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceOperationExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/operationId
export function isOperationOperationId(value: unknown): value is types.OperationOperationId {
if(!_isStringOperationOperationId(value)) {
return false;
}
return true;
}
function _isStringOperationOperationId(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/parameters
export function isOperationParameters(value: unknown): value is types.OperationParameters {
if(!_isArrayOperationParameters(value)) {
return false;
}
return true;
}
function _isArrayOperationParameters(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isOperationParametersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/requestBody
export function isOperationPropertiesRequestBody(value: unknown): value is types.OperationPropertiesRequestBody {
if(!_isOneOfOperationPropertiesRequestBody(value)) {
return false;
}
return true;
}
function _isOneOfOperationPropertiesRequestBody(value: unknown): value is unknown {
let validCounter = 0;
if(isRequestBodyOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isRequestBodyOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/responses
export function isOperationPropertiesResponses(value: unknown): value is types.OperationPropertiesResponses {
if(!_isReferenceOperationPropertiesResponses(value)) {
return false;
}
return true;
}
function _isReferenceOperationPropertiesResponses(value: unknown): value is unknown {
if(!isDefinitionsResponses(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/callbacks
export function isOperationCallbacks(value: unknown): value is types.OperationCallbacks {
if(!_isMapOperationCallbacks(value)) {
return false;
}
return true;
}
function _isMapOperationCallbacks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isCallbacksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/deprecated
export function isOperationDeprecated(value: unknown): value is types.OperationDeprecated {
if(!_isBooleanOperationDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanOperationDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/security
export function isOperationSecurity(value: unknown): value is types.OperationSecurity {
if(!_isArrayOperationSecurity(value)) {
return false;
}
return true;
}
function _isArrayOperationSecurity(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationSecurityItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/servers
export function isOperationServers(value: unknown): value is types.OperationServers {
if(!_isArrayOperationServers(value)) {
return false;
}
return true;
}
function _isArrayOperationServers(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationServersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/additionalProperties
export function isOperationAdditionalProperties(value: unknown): value is types.OperationAdditionalProperties {
if(!_isNeverOperationAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOperationAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/patternProperties/^x-
export function isOperationX(value: unknown): value is types.OperationX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/properties/default
export function isResponsesDefault(value: unknown): value is types.ResponsesDefault {
if(!_isOneOfResponsesDefault(value)) {
return false;
}
return true;
}
function _isOneOfResponsesDefault(value: unknown): value is unknown {
let validCounter = 0;
if(isDefaultOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isDefaultOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/additionalProperties
export function isResponsesAdditionalProperties(value: unknown): value is types.ResponsesAdditionalProperties {
if(!_isNeverResponsesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverResponsesAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/patternProperties/^[1-5](?:\d{2}|XX)$
export function isPatternProperties15D2Xx(value: unknown): value is types.PatternProperties15D2Xx {
if(!_isOneOfPatternProperties15D2Xx(value)) {
return false;
}
return true;
}
function _isOneOfPatternProperties15D2Xx(value: unknown): value is unknown {
let validCounter = 0;
if(isPatternProperties15D2XxOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isPatternProperties15D2XxOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/patternProperties/^x-
export function isResponsesX(value: unknown): value is types.ResponsesX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityRequirement/additionalProperties
export function isSecurityRequirementAdditionalProperties(value: unknown): value is types.SecurityRequirementAdditionalProperties {
if(!_isArraySecurityRequirementAdditionalProperties(value)) {
return false;
}
return true;
}
function _isArraySecurityRequirementAdditionalProperties(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isAdditionalPropertiesItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/properties/name
export function isTagName(value: unknown): value is types.TagName {
if(!_isStringTagName(value)) {
return false;
}
return true;
}
function _isStringTagName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/properties/description
export function isTagDescription(value: unknown): value is types.TagDescription {
if(!_isStringTagDescription(value)) {
return false;
}
return true;
}
function _isStringTagDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/properties/externalDocs
export function isTagExternalDocs(value: unknown): value is types.TagExternalDocs {
if(!_isReferenceTagExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceTagExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/additionalProperties
export function isTagAdditionalProperties(value: unknown): value is types.TagAdditionalProperties {
if(!_isNeverTagAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverTagAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/patternProperties/^x-
export function isTagX(value: unknown): value is types.TagX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExternalDocumentation/properties/description
export function isExternalDocumentationDescription(value: unknown): value is types.ExternalDocumentationDescription {
if(!_isStringExternalDocumentationDescription(value)) {
return false;
}
return true;
}
function _isStringExternalDocumentationDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExternalDocumentation/properties/url
export function isExternalDocumentationUrl(value: unknown): value is types.ExternalDocumentationUrl {
if(!_isStringExternalDocumentationUrl(value)) {
return false;
}
return true;
}
function _isStringExternalDocumentationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExternalDocumentation/additionalProperties
export function isExternalDocumentationAdditionalProperties(value: unknown): value is types.ExternalDocumentationAdditionalProperties {
if(!_isNeverExternalDocumentationAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverExternalDocumentationAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExternalDocumentation/patternProperties/^x-
export function isExternalDocumentationX(value: unknown): value is types.ExternalDocumentationX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExampleXORExamples/not
export function isExampleXorExamplesNot(value: unknown): value is types.ExampleXorExamplesNot {
if(!_isMapExampleXorExamplesNot(value)) {
return false;
}
return true;
}
function _isMapExampleXorExamplesNot(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("example" in value)) {
return false;
}
if(!("examples" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/0
export function isSchemaXorContentOneOf0(value: unknown): value is types.SchemaXorContentOneOf0 {
if(!_isMapSchemaXorContentOneOf0(value)) {
return false;
}
return true;
}
function _isMapSchemaXorContentOneOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("schema" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1
export function isSchemaXorContentOneOf1(value: unknown): value is types.SchemaXorContentOneOf1 {
if(!_isMapSchemaXorContentOneOf1(value)) {
return false;
}
if(!_isAllOfSchemaXorContentOneOf1(value)) {
return false;
}
return true;
}
function _isMapSchemaXorContentOneOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("content" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
function _isAllOfSchemaXorContentOneOf1(value: unknown): value is unknown {
if(!isOneOf1AllOf0(value)) {
return false;
}
if(!isOneOf1AllOf1(value)) {
return false;
}
if(!isOneOf1AllOf2(value)) {
return false;
}
if(!isAllOf3(value)) {
return false;
}
if(!isAllOf4(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/not
export function isSchemaXorContentNot(value: unknown): value is types.SchemaXorContentNot {
if(!_isMapSchemaXorContentNot(value)) {
return false;
}
return true;
}
function _isMapSchemaXorContentNot(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("schema" in value)) {
return false;
}
if(!("content" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/name
export function isParameterName(value: unknown): value is types.ParameterName {
if(!_isStringParameterName(value)) {
return false;
}
return true;
}
function _isStringParameterName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/in
export function isParameterIn(value: unknown): value is types.ParameterIn {
if(!_isStringParameterIn(value)) {
return false;
}
return true;
}
function _isStringParameterIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/description
export function isParameterDescription(value: unknown): value is types.ParameterDescription {
if(!_isStringParameterDescription(value)) {
return false;
}
return true;
}
function _isStringParameterDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/required
export function isParameterRequired(value: unknown): value is types.ParameterRequired {
if(!_isBooleanParameterRequired(value)) {
return false;
}
return true;
}
function _isBooleanParameterRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/deprecated
export function isParameterDeprecated(value: unknown): value is types.ParameterDeprecated {
if(!_isBooleanParameterDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanParameterDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/allowEmptyValue
export function isParameterAllowEmptyValue(value: unknown): value is types.ParameterAllowEmptyValue {
if(!_isBooleanParameterAllowEmptyValue(value)) {
return false;
}
return true;
}
function _isBooleanParameterAllowEmptyValue(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/style
export function isParameterStyle(value: unknown): value is types.ParameterStyle {
if(!_isStringParameterStyle(value)) {
return false;
}
return true;
}
function _isStringParameterStyle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/explode
export function isParameterExplode(value: unknown): value is types.ParameterExplode {
if(!_isBooleanParameterExplode(value)) {
return false;
}
return true;
}
function _isBooleanParameterExplode(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/allowReserved
export function isParameterAllowReserved(value: unknown): value is types.ParameterAllowReserved {
if(!_isBooleanParameterAllowReserved(value)) {
return false;
}
return true;
}
function _isBooleanParameterAllowReserved(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/schema
export function isParameterPropertiesSchema(value: unknown): value is types.ParameterPropertiesSchema {
if(!_isOneOfParameterPropertiesSchema(value)) {
return false;
}
return true;
}
function _isOneOfParameterPropertiesSchema(value: unknown): value is unknown {
let validCounter = 0;
if(isParameterSchemaOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterSchemaOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/content
export function isParameterContent(value: unknown): value is types.ParameterContent {
if(!_isMapParameterContent(value)) {
return false;
}
return true;
}
function _isMapParameterContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
if(!isParameterContentAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
if(propertyCount < 1) {
return false;
}
if(propertyCount > 1) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/example
export function isParameterPropertiesExample(value: unknown): value is types.ParameterPropertiesExample {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/examples
export function isParameterExamples(value: unknown): value is types.ParameterExamples {
if(!_isMapParameterExamples(value)) {
return false;
}
return true;
}
function _isMapParameterExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isParameterExamplesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/additionalProperties
export function isParameterAdditionalProperties(value: unknown): value is types.ParameterAdditionalProperties {
if(!_isNeverParameterAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverParameterAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/patternProperties/^x-
export function isParameterX(value: unknown): value is types.ParameterX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/allOf/0
export function isParameterAllOf0(value: unknown): value is types.ParameterAllOf0 {
if(!_isReferenceParameterAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceParameterAllOf0(value: unknown): value is unknown {
if(!isExampleXorExamples(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/allOf/1
export function isParameterAllOf1(value: unknown): value is types.ParameterAllOf1 {
if(!_isReferenceParameterAllOf1(value)) {
return false;
}
return true;
}
function _isReferenceParameterAllOf1(value: unknown): value is unknown {
if(!isSchemaXorContent(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/allOf/2
export function isParameterAllOf2(value: unknown): value is types.ParameterAllOf2 {
if(!_isReferenceParameterAllOf2(value)) {
return false;
}
return true;
}
function _isReferenceParameterAllOf2(value: unknown): value is unknown {
if(!isParameterLocation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/0
export function isParameterLocationOneOf0(value: unknown): value is types.ParameterLocationOneOf0 {
if(!_isMapParameterLocationOneOf0(value)) {
return false;
}
return true;
}
function _isMapParameterLocationOneOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("required" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "in":
if(!isOneOf0In(propertyValue)) {
return false;
}
continue;
case "style":
if(!isOneOf0Style(propertyValue)) {
return false;
}
continue;
case "required":
if(!isOneOf0Required(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/1
export function isParameterLocationOneOf1(value: unknown): value is types.ParameterLocationOneOf1 {
if(!_isMapParameterLocationOneOf1(value)) {
return false;
}
return true;
}
function _isMapParameterLocationOneOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "in":
if(!isOneOf1In(propertyValue)) {
return false;
}
continue;
case "style":
if(!isOneOf1Style(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/2
export function isParameterLocationOneOf2(value: unknown): value is types.ParameterLocationOneOf2 {
if(!_isMapParameterLocationOneOf2(value)) {
return false;
}
return true;
}
function _isMapParameterLocationOneOf2(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "in":
if(!isOneOf2In(propertyValue)) {
return false;
}
continue;
case "style":
if(!isOneOf2Style(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/3
export function isParameterLocationOneOf3(value: unknown): value is types.ParameterLocationOneOf3 {
if(!_isMapParameterLocationOneOf3(value)) {
return false;
}
return true;
}
function _isMapParameterLocationOneOf3(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "in":
if(!isOneOf3In(propertyValue)) {
return false;
}
continue;
case "style":
if(!isOneOf3Style(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/properties/description
export function isRequestBodyDescription(value: unknown): value is types.RequestBodyDescription {
if(!_isStringRequestBodyDescription(value)) {
return false;
}
return true;
}
function _isStringRequestBodyDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/properties/content
export function isRequestBodyContent(value: unknown): value is types.RequestBodyContent {
if(!_isMapRequestBodyContent(value)) {
return false;
}
return true;
}
function _isMapRequestBodyContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isRequestBodyContentAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/properties/required
export function isRequestBodyRequired(value: unknown): value is types.RequestBodyRequired {
if(!_isBooleanRequestBodyRequired(value)) {
return false;
}
return true;
}
function _isBooleanRequestBodyRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/additionalProperties
export function isRequestBodyAdditionalProperties(value: unknown): value is types.RequestBodyAdditionalProperties {
if(!_isNeverRequestBodyAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverRequestBodyAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/patternProperties/^x-
export function isRequestBodyX(value: unknown): value is types.RequestBodyX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityScheme/oneOf/0
export function isSecuritySchemeOneOf0(value: unknown): value is types.SecuritySchemeOneOf0 {
if(!_isReferenceSecuritySchemeOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeOneOf0(value: unknown): value is unknown {
if(!isApiKeySecurityScheme(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityScheme/oneOf/1
export function isSecuritySchemeOneOf1(value: unknown): value is types.SecuritySchemeOneOf1 {
if(!_isReferenceSecuritySchemeOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeOneOf1(value: unknown): value is unknown {
if(!isHttpSecurityScheme(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityScheme/oneOf/2
export function isSecuritySchemeOneOf2(value: unknown): value is types.SecuritySchemeOneOf2 {
if(!_isReferenceSecuritySchemeOneOf2(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeOneOf2(value: unknown): value is unknown {
if(!isOauth2SecurityScheme(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityScheme/oneOf/3
export function isSecuritySchemeOneOf3(value: unknown): value is types.SecuritySchemeOneOf3 {
if(!_isReferenceSecuritySchemeOneOf3(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeOneOf3(value: unknown): value is unknown {
if(!isOpenIdConnectSecurityScheme(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/type
export function isApiKeySecuritySchemeType(value: unknown): value is types.ApiKeySecuritySchemeType {
if(!_isStringApiKeySecuritySchemeType(value)) {
return false;
}
return true;
}
function _isStringApiKeySecuritySchemeType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "apiKey") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/name
export function isApiKeySecuritySchemeName(value: unknown): value is types.ApiKeySecuritySchemeName {
if(!_isStringApiKeySecuritySchemeName(value)) {
return false;
}
return true;
}
function _isStringApiKeySecuritySchemeName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/in
export function isApiKeySecuritySchemeIn(value: unknown): value is types.ApiKeySecuritySchemeIn {
if(!_isStringApiKeySecuritySchemeIn(value)) {
return false;
}
return true;
}
function _isStringApiKeySecuritySchemeIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "header" && value !== "query" && value !== "cookie") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/description
export function isApiKeySecuritySchemeDescription(value: unknown): value is types.ApiKeySecuritySchemeDescription {
if(!_isStringApiKeySecuritySchemeDescription(value)) {
return false;
}
return true;
}
function _isStringApiKeySecuritySchemeDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/additionalProperties
export function isApiKeySecuritySchemeAdditionalProperties(value: unknown): value is types.ApiKeySecuritySchemeAdditionalProperties {
if(!_isNeverApiKeySecuritySchemeAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverApiKeySecuritySchemeAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/patternProperties/^x-
export function isApiKeySecuritySchemeX(value: unknown): value is types.ApiKeySecuritySchemeX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/scheme
export function isHttpSecuritySchemeScheme(value: unknown): value is types.HttpSecuritySchemeScheme {
if(!_isStringHttpSecuritySchemeScheme(value)) {
return false;
}
return true;
}
function _isStringHttpSecuritySchemeScheme(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/bearerFormat
export function isBearerFormat(value: unknown): value is types.BearerFormat {
if(!_isStringBearerFormat(value)) {
return false;
}
return true;
}
function _isStringBearerFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/description
export function isHttpSecuritySchemeDescription(value: unknown): value is types.HttpSecuritySchemeDescription {
if(!_isStringHttpSecuritySchemeDescription(value)) {
return false;
}
return true;
}
function _isStringHttpSecuritySchemeDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/type
export function isHttpSecuritySchemeType(value: unknown): value is types.HttpSecuritySchemeType {
if(!_isStringHttpSecuritySchemeType(value)) {
return false;
}
return true;
}
function _isStringHttpSecuritySchemeType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "http") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/additionalProperties
export function isHttpSecuritySchemeAdditionalProperties(value: unknown): value is types.HttpSecuritySchemeAdditionalProperties {
if(!_isNeverHttpSecuritySchemeAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverHttpSecuritySchemeAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/patternProperties/^x-
export function isHttpSecuritySchemeX(value: unknown): value is types.HttpSecuritySchemeX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/oneOf/0
export function isHttpSecuritySchemeOneOf0(value: unknown): value is types.HttpSecuritySchemeOneOf0 {
if(!_isMapHttpSecuritySchemeOneOf0(value)) {
return false;
}
return true;
}
function _isMapHttpSecuritySchemeOneOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "scheme":
if(!isOneOf0Scheme(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/oneOf/1
export function isHttpSecuritySchemeOneOf1(value: unknown): value is types.HttpSecuritySchemeOneOf1 {
if(!_isMapHttpSecuritySchemeOneOf1(value)) {
return false;
}
if(!_isNotHttpSecuritySchemeOneOf1(value)) {
return false;
}
return true;
}
function _isMapHttpSecuritySchemeOneOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "scheme":
if(!isOneOf1Scheme(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isNotHttpSecuritySchemeOneOf1(value: unknown): value is unknown {
if(isOneOf1Not(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/properties/type
export function isOauth2SecuritySchemeType(value: unknown): value is types.Oauth2SecuritySchemeType {
if(!_isStringOauth2SecuritySchemeType(value)) {
return false;
}
return true;
}
function _isStringOauth2SecuritySchemeType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "oauth2") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/properties/flows
export function isFlows(value: unknown): value is types.Flows {
if(!_isReferenceFlows(value)) {
return false;
}
return true;
}
function _isReferenceFlows(value: unknown): value is unknown {
if(!isOauthFlows(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/properties/description
export function isOauth2SecuritySchemeDescription(value: unknown): value is types.Oauth2SecuritySchemeDescription {
if(!_isStringOauth2SecuritySchemeDescription(value)) {
return false;
}
return true;
}
function _isStringOauth2SecuritySchemeDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/additionalProperties
export function isOauth2SecuritySchemeAdditionalProperties(value: unknown): value is types.Oauth2SecuritySchemeAdditionalProperties {
if(!_isNeverOauth2SecuritySchemeAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOauth2SecuritySchemeAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/patternProperties/^x-
export function isOauth2SecuritySchemeX(value: unknown): value is types.Oauth2SecuritySchemeX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/properties/type
export function isOpenIdConnectSecuritySchemeType(value: unknown): value is types.OpenIdConnectSecuritySchemeType {
if(!_isStringOpenIdConnectSecuritySchemeType(value)) {
return false;
}
return true;
}
function _isStringOpenIdConnectSecuritySchemeType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "openIdConnect") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/properties/openIdConnectUrl
export function isOpenIdConnectUrl(value: unknown): value is types.OpenIdConnectUrl {
if(!_isStringOpenIdConnectUrl(value)) {
return false;
}
return true;
}
function _isStringOpenIdConnectUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/properties/description
export function isOpenIdConnectSecuritySchemeDescription(value: unknown): value is types.OpenIdConnectSecuritySchemeDescription {
if(!_isStringOpenIdConnectSecuritySchemeDescription(value)) {
return false;
}
return true;
}
function _isStringOpenIdConnectSecuritySchemeDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/additionalProperties
export function isOpenIdConnectSecuritySchemeAdditionalProperties(value: unknown): value is types.OpenIdConnectSecuritySchemeAdditionalProperties {
if(!_isNeverOpenIdConnectSecuritySchemeAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOpenIdConnectSecuritySchemeAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/patternProperties/^x-
export function isOpenIdConnectSecuritySchemeX(value: unknown): value is types.OpenIdConnectSecuritySchemeX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows/properties/implicit
export function isImplicit(value: unknown): value is types.Implicit {
if(!_isReferenceImplicit(value)) {
return false;
}
return true;
}
function _isReferenceImplicit(value: unknown): value is unknown {
if(!isImplicitOauthFlow(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows/properties/password
export function isPassword(value: unknown): value is types.Password {
if(!_isReferencePassword(value)) {
return false;
}
return true;
}
function _isReferencePassword(value: unknown): value is unknown {
if(!isPasswordOauthFlow(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows/properties/clientCredentials
export function isClientCredentials(value: unknown): value is types.ClientCredentials {
if(!_isReferenceClientCredentials(value)) {
return false;
}
return true;
}
function _isReferenceClientCredentials(value: unknown): value is unknown {
if(!isClientCredentialsFlow(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows/properties/authorizationCode
export function isAuthorizationCode(value: unknown): value is types.AuthorizationCode {
if(!_isReferenceAuthorizationCode(value)) {
return false;
}
return true;
}
function _isReferenceAuthorizationCode(value: unknown): value is unknown {
if(!isAuthorizationCodeOauthFlow(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows/additionalProperties
export function isOauthFlowsAdditionalProperties(value: unknown): value is types.OauthFlowsAdditionalProperties {
if(!_isNeverOauthFlowsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOauthFlowsAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuthFlows/patternProperties/^x-
export function isOauthFlowsX(value: unknown): value is types.OauthFlowsX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/properties/authorizationUrl
export function isImplicitOauthFlowAuthorizationUrl(value: unknown): value is types.ImplicitOauthFlowAuthorizationUrl {
if(!_isStringImplicitOauthFlowAuthorizationUrl(value)) {
return false;
}
return true;
}
function _isStringImplicitOauthFlowAuthorizationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/properties/refreshUrl
export function isImplicitOauthFlowRefreshUrl(value: unknown): value is types.ImplicitOauthFlowRefreshUrl {
if(!_isStringImplicitOauthFlowRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringImplicitOauthFlowRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/properties/scopes
export function isImplicitOauthFlowScopes(value: unknown): value is types.ImplicitOauthFlowScopes {
if(!_isMapImplicitOauthFlowScopes(value)) {
return false;
}
return true;
}
function _isMapImplicitOauthFlowScopes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isImplicitOauthFlowScopesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/additionalProperties
export function isImplicitOauthFlowAdditionalProperties(value: unknown): value is types.ImplicitOauthFlowAdditionalProperties {
if(!_isNeverImplicitOauthFlowAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverImplicitOauthFlowAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/patternProperties/^x-
export function isImplicitOauthFlowX(value: unknown): value is types.ImplicitOauthFlowX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/properties/tokenUrl
export function isPasswordOauthFlowTokenUrl(value: unknown): value is types.PasswordOauthFlowTokenUrl {
if(!_isStringPasswordOauthFlowTokenUrl(value)) {
return false;
}
return true;
}
function _isStringPasswordOauthFlowTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/properties/refreshUrl
export function isPasswordOauthFlowRefreshUrl(value: unknown): value is types.PasswordOauthFlowRefreshUrl {
if(!_isStringPasswordOauthFlowRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringPasswordOauthFlowRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/properties/scopes
export function isPasswordOauthFlowScopes(value: unknown): value is types.PasswordOauthFlowScopes {
if(!_isMapPasswordOauthFlowScopes(value)) {
return false;
}
return true;
}
function _isMapPasswordOauthFlowScopes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isPasswordOauthFlowScopesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/additionalProperties
export function isPasswordOauthFlowAdditionalProperties(value: unknown): value is types.PasswordOauthFlowAdditionalProperties {
if(!_isNeverPasswordOauthFlowAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPasswordOauthFlowAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/patternProperties/^x-
export function isPasswordOauthFlowX(value: unknown): value is types.PasswordOauthFlowX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/properties/tokenUrl
export function isClientCredentialsFlowTokenUrl(value: unknown): value is types.ClientCredentialsFlowTokenUrl {
if(!_isStringClientCredentialsFlowTokenUrl(value)) {
return false;
}
return true;
}
function _isStringClientCredentialsFlowTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/properties/refreshUrl
export function isClientCredentialsFlowRefreshUrl(value: unknown): value is types.ClientCredentialsFlowRefreshUrl {
if(!_isStringClientCredentialsFlowRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringClientCredentialsFlowRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/properties/scopes
export function isClientCredentialsFlowScopes(value: unknown): value is types.ClientCredentialsFlowScopes {
if(!_isMapClientCredentialsFlowScopes(value)) {
return false;
}
return true;
}
function _isMapClientCredentialsFlowScopes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isClientCredentialsFlowScopesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/additionalProperties
export function isClientCredentialsFlowAdditionalProperties(value: unknown): value is types.ClientCredentialsFlowAdditionalProperties {
if(!_isNeverClientCredentialsFlowAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverClientCredentialsFlowAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/patternProperties/^x-
export function isClientCredentialsFlowX(value: unknown): value is types.ClientCredentialsFlowX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/authorizationUrl
export function isAuthorizationCodeOauthFlowAuthorizationUrl(value: unknown): value is types.AuthorizationCodeOauthFlowAuthorizationUrl {
if(!_isStringAuthorizationCodeOauthFlowAuthorizationUrl(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeOauthFlowAuthorizationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/tokenUrl
export function isAuthorizationCodeOauthFlowTokenUrl(value: unknown): value is types.AuthorizationCodeOauthFlowTokenUrl {
if(!_isStringAuthorizationCodeOauthFlowTokenUrl(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeOauthFlowTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/refreshUrl
export function isAuthorizationCodeOauthFlowRefreshUrl(value: unknown): value is types.AuthorizationCodeOauthFlowRefreshUrl {
if(!_isStringAuthorizationCodeOauthFlowRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeOauthFlowRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/scopes
export function isAuthorizationCodeOauthFlowScopes(value: unknown): value is types.AuthorizationCodeOauthFlowScopes {
if(!_isMapAuthorizationCodeOauthFlowScopes(value)) {
return false;
}
return true;
}
function _isMapAuthorizationCodeOauthFlowScopes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isAuthorizationCodeOauthFlowScopesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/additionalProperties
export function isAuthorizationCodeOauthFlowAdditionalProperties(value: unknown): value is types.AuthorizationCodeOauthFlowAdditionalProperties {
if(!_isNeverAuthorizationCodeOauthFlowAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverAuthorizationCodeOauthFlowAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/patternProperties/^x-
export function isAuthorizationCodeOauthFlowX(value: unknown): value is types.AuthorizationCodeOauthFlowX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/operationId
export function isLinkOperationId(value: unknown): value is types.LinkOperationId {
if(!_isStringLinkOperationId(value)) {
return false;
}
return true;
}
function _isStringLinkOperationId(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/operationRef
export function isOperationRef(value: unknown): value is types.OperationRef {
if(!_isStringOperationRef(value)) {
return false;
}
return true;
}
function _isStringOperationRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/parameters
export function isLinkParameters(value: unknown): value is types.LinkParameters {
if(!_isMapLinkParameters(value)) {
return false;
}
return true;
}
function _isMapLinkParameters(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isParametersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/requestBody
export function isLinkPropertiesRequestBody(value: unknown): value is types.LinkPropertiesRequestBody {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/description
export function isLinkDescription(value: unknown): value is types.LinkDescription {
if(!_isStringLinkDescription(value)) {
return false;
}
return true;
}
function _isStringLinkDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/server
export function isPropertiesServer(value: unknown): value is types.PropertiesServer {
if(!_isReferencePropertiesServer(value)) {
return false;
}
return true;
}
function _isReferencePropertiesServer(value: unknown): value is unknown {
if(!isDefinitionsServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/additionalProperties
export function isLinkAdditionalProperties(value: unknown): value is types.LinkAdditionalProperties {
if(!_isNeverLinkAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverLinkAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/patternProperties/^x-
export function isLinkX(value: unknown): value is types.LinkX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/not
export function isLinkNot(value: unknown): value is types.LinkNot {
if(!_isMapLinkNot(value)) {
return false;
}
return true;
}
function _isMapLinkNot(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("operationId" in value)) {
return false;
}
if(!("operationRef" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Callback/additionalProperties
export function isCallbackAdditionalProperties(value: unknown): value is types.CallbackAdditionalProperties {
if(!_isReferenceCallbackAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceCallbackAdditionalProperties(value: unknown): value is unknown {
if(!isPathItem(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Callback/patternProperties/^x-
export function isCallbackX(value: unknown): value is types.CallbackX {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/contentType
export function isContentType(value: unknown): value is types.ContentType {
if(!_isStringContentType(value)) {
return false;
}
return true;
}
function _isStringContentType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/headers
export function isEncodingHeaders(value: unknown): value is types.EncodingHeaders {
if(!_isMapEncodingHeaders(value)) {
return false;
}
return true;
}
function _isMapEncodingHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isEncodingHeadersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/style
export function isEncodingStyle(value: unknown): value is types.EncodingStyle {
if(!_isStringEncodingStyle(value)) {
return false;
}
return true;
}
function _isStringEncodingStyle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "form" && value !== "spaceDelimited" && value !== "pipeDelimited" && value !== "deepObject") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/explode
export function isEncodingExplode(value: unknown): value is types.EncodingExplode {
if(!_isBooleanEncodingExplode(value)) {
return false;
}
return true;
}
function _isBooleanEncodingExplode(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/allowReserved
export function isEncodingAllowReserved(value: unknown): value is types.EncodingAllowReserved {
if(!_isBooleanEncodingAllowReserved(value)) {
return false;
}
return true;
}
function _isBooleanEncodingAllowReserved(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/additionalProperties
export function isDefinitionsEncodingAdditionalProperties(value: unknown): value is types.DefinitionsEncodingAdditionalProperties {
if(!_isNeverDefinitionsEncodingAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverDefinitionsEncodingAdditionalProperties(value: unknown): value is unknown {
return false;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/servers/items
export function isSchema20210928ServersItems(value: unknown): value is types.Schema20210928ServersItems {
if(!_isReferenceSchema20210928ServersItems(value)) {
return false;
}
return true;
}
function _isReferenceSchema20210928ServersItems(value: unknown): value is unknown {
if(!isDefinitionsServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/security/items
export function isSchema20210928SecurityItems(value: unknown): value is types.Schema20210928SecurityItems {
if(!_isReferenceSchema20210928SecurityItems(value)) {
return false;
}
return true;
}
function _isReferenceSchema20210928SecurityItems(value: unknown): value is unknown {
if(!isSecurityRequirement(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/tags/items
export function isSchema20210928TagsItems(value: unknown): value is types.Schema20210928TagsItems {
if(!_isReferenceSchema20210928TagsItems(value)) {
return false;
}
return true;
}
function _isReferenceSchema20210928TagsItems(value: unknown): value is unknown {
if(!isTag(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/properties/variables/additionalProperties
export function isVariablesAdditionalProperties(value: unknown): value is types.VariablesAdditionalProperties {
if(!_isReferenceVariablesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceVariablesAdditionalProperties(value: unknown): value is unknown {
if(!isServerVariable(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/enum/items
export function isServerVariableEnumItems(value: unknown): value is types.ServerVariableEnumItems {
if(!_isStringServerVariableEnumItems(value)) {
return false;
}
return true;
}
function _isStringServerVariableEnumItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/schemas/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isSchemasAZAZ09(value: unknown): value is types.SchemasAZAZ09 {
if(!_isOneOfSchemasAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfSchemasAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isSchemasAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSchemasAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/responses/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isResponsesAZAZ09(value: unknown): value is types.ResponsesAZAZ09 {
if(!_isOneOfResponsesAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfResponsesAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isResponsesAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isResponsesAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/parameters/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isParametersAZAZ09(value: unknown): value is types.ParametersAZAZ09 {
if(!_isOneOfParametersAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfParametersAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isParametersAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParametersAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/examples/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isExamplesAZAZ09(value: unknown): value is types.ExamplesAZAZ09 {
if(!_isOneOfExamplesAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfExamplesAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isExamplesAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isExamplesAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/requestBodies/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isRequestBodiesAZAZ09(value: unknown): value is types.RequestBodiesAZAZ09 {
if(!_isOneOfRequestBodiesAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfRequestBodiesAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isRequestBodiesAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isRequestBodiesAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/headers/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isHeadersAZAZ09(value: unknown): value is types.HeadersAZAZ09 {
if(!_isOneOfHeadersAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfHeadersAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isHeadersAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isHeadersAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/securitySchemes/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isSecuritySchemesAZAZ09(value: unknown): value is types.SecuritySchemesAZAZ09 {
if(!_isOneOfSecuritySchemesAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfSecuritySchemesAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isSecuritySchemesAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSecuritySchemesAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/links/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isLinksAZAZ09(value: unknown): value is types.LinksAZAZ09 {
if(!_isOneOfLinksAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfLinksAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isLinksAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isLinksAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/callbacks/patternProperties/^[a-zA-Z0-9\.\-_]+$
export function isCallbacksAZAZ09(value: unknown): value is types.CallbacksAZAZ09 {
if(!_isOneOfCallbacksAZAZ09(value)) {
return false;
}
return true;
}
function _isOneOfCallbacksAZAZ09(value: unknown): value is unknown {
let validCounter = 0;
if(isCallbacksAZAZ09OneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isCallbacksAZAZ09OneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/required/items
export function isRequiredItems(value: unknown): value is types.RequiredItems {
if(!_isStringRequiredItems(value)) {
return false;
}
return true;
}
function _isStringRequiredItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/enum/items
export function isSchemaEnumItems(value: unknown): value is types.SchemaEnumItems {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/not/oneOf/0
export function isNotOneOf0(value: unknown): value is types.NotOneOf0 {
if(!_isReferenceNotOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceNotOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/not/oneOf/1
export function isNotOneOf1(value: unknown): value is types.NotOneOf1 {
if(!_isReferenceNotOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceNotOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/allOf/items
export function isAllOfItems(value: unknown): value is types.AllOfItems {
if(!_isOneOfAllOfItems(value)) {
return false;
}
return true;
}
function _isOneOfAllOfItems(value: unknown): value is unknown {
let validCounter = 0;
if(isAllOfItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isAllOfItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/oneOf/items
export function isOneOfItems(value: unknown): value is types.OneOfItems {
if(!_isOneOfOneOfItems(value)) {
return false;
}
return true;
}
function _isOneOfOneOfItems(value: unknown): value is unknown {
let validCounter = 0;
if(isOneOfItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isOneOfItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/anyOf/items
export function isAnyOfItems(value: unknown): value is types.AnyOfItems {
if(!_isOneOfAnyOfItems(value)) {
return false;
}
return true;
}
function _isOneOfAnyOfItems(value: unknown): value is unknown {
let validCounter = 0;
if(isAnyOfItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isAnyOfItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/items/oneOf/0
export function isPropertiesItemsOneOf0(value: unknown): value is types.PropertiesItemsOneOf0 {
if(!_isReferencePropertiesItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferencePropertiesItemsOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/items/oneOf/1
export function isPropertiesItemsOneOf1(value: unknown): value is types.PropertiesItemsOneOf1 {
if(!_isReferencePropertiesItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferencePropertiesItemsOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/properties/additionalProperties
export function isPropertiesPropertiesAdditionalProperties(value: unknown): value is types.PropertiesPropertiesAdditionalProperties {
if(!_isOneOfPropertiesPropertiesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfPropertiesPropertiesAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isPropertiesPropertiesAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isPropertiesPropertiesAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/additionalProperties/oneOf/0
export function isSchemaPropertiesAdditionalPropertiesOneOf0(value: unknown): value is types.SchemaPropertiesAdditionalPropertiesOneOf0 {
if(!_isReferenceSchemaPropertiesAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/additionalProperties/oneOf/1
export function isSchemaPropertiesAdditionalPropertiesOneOf1(value: unknown): value is types.SchemaPropertiesAdditionalPropertiesOneOf1 {
if(!_isReferenceSchemaPropertiesAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/additionalProperties/oneOf/2
export function isAdditionalPropertiesOneOf2(value: unknown): value is types.AdditionalPropertiesOneOf2 {
if(!_isBooleanAdditionalPropertiesOneOf2(value)) {
return false;
}
return true;
}
function _isBooleanAdditionalPropertiesOneOf2(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator/properties/mapping/additionalProperties
export function isMappingAdditionalProperties(value: unknown): value is types.MappingAdditionalProperties {
if(!_isStringMappingAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringMappingAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/headers/additionalProperties
export function isResponseHeadersAdditionalProperties(value: unknown): value is types.ResponseHeadersAdditionalProperties {
if(!_isOneOfResponseHeadersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfResponseHeadersAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isResponseHeadersAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isResponseHeadersAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/content/additionalProperties
export function isResponseContentAdditionalProperties(value: unknown): value is types.ResponseContentAdditionalProperties {
if(!_isReferenceResponseContentAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceResponseContentAdditionalProperties(value: unknown): value is unknown {
if(!isMediaType(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/links/additionalProperties
export function isLinksAdditionalProperties(value: unknown): value is types.LinksAdditionalProperties {
if(!_isOneOfLinksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfLinksAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isLinksAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isLinksAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/schema/oneOf/0
export function isMediaTypeSchemaOneOf0(value: unknown): value is types.MediaTypeSchemaOneOf0 {
if(!_isReferenceMediaTypeSchemaOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeSchemaOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/schema/oneOf/1
export function isMediaTypeSchemaOneOf1(value: unknown): value is types.MediaTypeSchemaOneOf1 {
if(!_isReferenceMediaTypeSchemaOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeSchemaOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/examples/additionalProperties
export function isMediaTypeExamplesAdditionalProperties(value: unknown): value is types.MediaTypeExamplesAdditionalProperties {
if(!_isOneOfMediaTypeExamplesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfMediaTypeExamplesAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isMediaTypeExamplesAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isMediaTypeExamplesAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/encoding/additionalProperties
export function isPropertiesEncodingAdditionalProperties(value: unknown): value is types.PropertiesEncodingAdditionalProperties {
if(!_isReferencePropertiesEncodingAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferencePropertiesEncodingAdditionalProperties(value: unknown): value is unknown {
if(!isDefinitionsEncoding(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/schema/oneOf/0
export function isHeaderSchemaOneOf0(value: unknown): value is types.HeaderSchemaOneOf0 {
if(!_isReferenceHeaderSchemaOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceHeaderSchemaOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/schema/oneOf/1
export function isHeaderSchemaOneOf1(value: unknown): value is types.HeaderSchemaOneOf1 {
if(!_isReferenceHeaderSchemaOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceHeaderSchemaOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/content/additionalProperties
export function isHeaderContentAdditionalProperties(value: unknown): value is types.HeaderContentAdditionalProperties {
if(!_isReferenceHeaderContentAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceHeaderContentAdditionalProperties(value: unknown): value is unknown {
if(!isMediaType(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/examples/additionalProperties
export function isHeaderExamplesAdditionalProperties(value: unknown): value is types.HeaderExamplesAdditionalProperties {
if(!_isOneOfHeaderExamplesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfHeaderExamplesAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isHeaderExamplesAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isHeaderExamplesAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/servers/items
export function isPathItemServersItems(value: unknown): value is types.PathItemServersItems {
if(!_isReferencePathItemServersItems(value)) {
return false;
}
return true;
}
function _isReferencePathItemServersItems(value: unknown): value is unknown {
if(!isDefinitionsServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/parameters/items
export function isPathItemParametersItems(value: unknown): value is types.PathItemParametersItems {
if(!_isOneOfPathItemParametersItems(value)) {
return false;
}
return true;
}
function _isOneOfPathItemParametersItems(value: unknown): value is unknown {
let validCounter = 0;
if(isPathItemParametersItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isPathItemParametersItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/tags/items
export function isOperationTagsItems(value: unknown): value is types.OperationTagsItems {
if(!_isStringOperationTagsItems(value)) {
return false;
}
return true;
}
function _isStringOperationTagsItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/parameters/items
export function isOperationParametersItems(value: unknown): value is types.OperationParametersItems {
if(!_isOneOfOperationParametersItems(value)) {
return false;
}
return true;
}
function _isOneOfOperationParametersItems(value: unknown): value is unknown {
let validCounter = 0;
if(isOperationParametersItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isOperationParametersItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/requestBody/oneOf/0
export function isRequestBodyOneOf0(value: unknown): value is types.RequestBodyOneOf0 {
if(!_isReferenceRequestBodyOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodyOneOf0(value: unknown): value is unknown {
if(!isDefinitionsRequestBody(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/requestBody/oneOf/1
export function isRequestBodyOneOf1(value: unknown): value is types.RequestBodyOneOf1 {
if(!_isReferenceRequestBodyOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodyOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/callbacks/additionalProperties
export function isCallbacksAdditionalProperties(value: unknown): value is types.CallbacksAdditionalProperties {
if(!_isOneOfCallbacksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfCallbacksAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isCallbacksAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isCallbacksAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/security/items
export function isOperationSecurityItems(value: unknown): value is types.OperationSecurityItems {
if(!_isReferenceOperationSecurityItems(value)) {
return false;
}
return true;
}
function _isReferenceOperationSecurityItems(value: unknown): value is unknown {
if(!isSecurityRequirement(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/servers/items
export function isOperationServersItems(value: unknown): value is types.OperationServersItems {
if(!_isReferenceOperationServersItems(value)) {
return false;
}
return true;
}
function _isReferenceOperationServersItems(value: unknown): value is unknown {
if(!isDefinitionsServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/properties/default/oneOf/0
export function isDefaultOneOf0(value: unknown): value is types.DefaultOneOf0 {
if(!_isReferenceDefaultOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceDefaultOneOf0(value: unknown): value is unknown {
if(!isResponse(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/properties/default/oneOf/1
export function isDefaultOneOf1(value: unknown): value is types.DefaultOneOf1 {
if(!_isReferenceDefaultOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceDefaultOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/patternProperties/^[1-5](?:\d{2}|XX)$/oneOf/0
export function isPatternProperties15D2XxOneOf0(value: unknown): value is types.PatternProperties15D2XxOneOf0 {
if(!_isReferencePatternProperties15D2XxOneOf0(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties15D2XxOneOf0(value: unknown): value is unknown {
if(!isResponse(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Responses/patternProperties/^[1-5](?:\d{2}|XX)$/oneOf/1
export function isPatternProperties15D2XxOneOf1(value: unknown): value is types.PatternProperties15D2XxOneOf1 {
if(!_isReferencePatternProperties15D2XxOneOf1(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties15D2XxOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityRequirement/additionalProperties/items
export function isAdditionalPropertiesItems(value: unknown): value is types.AdditionalPropertiesItems {
if(!_isStringAdditionalPropertiesItems(value)) {
return false;
}
return true;
}
function _isStringAdditionalPropertiesItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/0
export function isOneOf1AllOf0(value: unknown): value is types.OneOf1AllOf0 {
if(!_isNotOneOf1AllOf0(value)) {
return false;
}
return true;
}
function _isNotOneOf1AllOf0(value: unknown): value is unknown {
if(isAllOf0Not(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/1
export function isOneOf1AllOf1(value: unknown): value is types.OneOf1AllOf1 {
if(!_isNotOneOf1AllOf1(value)) {
return false;
}
return true;
}
function _isNotOneOf1AllOf1(value: unknown): value is unknown {
if(isAllOf1Not(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/2
export function isOneOf1AllOf2(value: unknown): value is types.OneOf1AllOf2 {
if(!_isNotOneOf1AllOf2(value)) {
return false;
}
return true;
}
function _isNotOneOf1AllOf2(value: unknown): value is unknown {
if(isAllOf2Not(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/3
export function isAllOf3(value: unknown): value is types.AllOf3 {
if(!_isNotAllOf3(value)) {
return false;
}
return true;
}
function _isNotAllOf3(value: unknown): value is unknown {
if(isAllOf3Not(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/4
export function isAllOf4(value: unknown): value is types.AllOf4 {
if(!_isNotAllOf4(value)) {
return false;
}
return true;
}
function _isNotAllOf4(value: unknown): value is unknown {
if(isAllOf4Not(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/schema/oneOf/0
export function isParameterSchemaOneOf0(value: unknown): value is types.ParameterSchemaOneOf0 {
if(!_isReferenceParameterSchemaOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceParameterSchemaOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/schema/oneOf/1
export function isParameterSchemaOneOf1(value: unknown): value is types.ParameterSchemaOneOf1 {
if(!_isReferenceParameterSchemaOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceParameterSchemaOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/content/additionalProperties
export function isParameterContentAdditionalProperties(value: unknown): value is types.ParameterContentAdditionalProperties {
if(!_isReferenceParameterContentAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceParameterContentAdditionalProperties(value: unknown): value is unknown {
if(!isMediaType(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/examples/additionalProperties
export function isParameterExamplesAdditionalProperties(value: unknown): value is types.ParameterExamplesAdditionalProperties {
if(!_isOneOfParameterExamplesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfParameterExamplesAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isParameterExamplesAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterExamplesAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/0/properties/in
export function isOneOf0In(value: unknown): value is types.OneOf0In {
if(!_isStringOneOf0In(value)) {
return false;
}
return true;
}
function _isStringOneOf0In(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "path") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/0/properties/style
export function isOneOf0Style(value: unknown): value is types.OneOf0Style {
if(!_isStringOneOf0Style(value)) {
return false;
}
return true;
}
function _isStringOneOf0Style(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "matrix" && value !== "label" && value !== "simple") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/0/properties/required
export function isOneOf0Required(value: unknown): value is types.OneOf0Required {
if(!_isBooleanOneOf0Required(value)) {
return false;
}
return true;
}
function _isBooleanOneOf0Required(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
if(value !== true) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/1/properties/in
export function isOneOf1In(value: unknown): value is types.OneOf1In {
if(!_isStringOneOf1In(value)) {
return false;
}
return true;
}
function _isStringOneOf1In(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "query") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/1/properties/style
export function isOneOf1Style(value: unknown): value is types.OneOf1Style {
if(!_isStringOneOf1Style(value)) {
return false;
}
return true;
}
function _isStringOneOf1Style(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "form" && value !== "spaceDelimited" && value !== "pipeDelimited" && value !== "deepObject") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/2/properties/in
export function isOneOf2In(value: unknown): value is types.OneOf2In {
if(!_isStringOneOf2In(value)) {
return false;
}
return true;
}
function _isStringOneOf2In(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "header") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/2/properties/style
export function isOneOf2Style(value: unknown): value is types.OneOf2Style {
if(!_isStringOneOf2Style(value)) {
return false;
}
return true;
}
function _isStringOneOf2Style(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "simple") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/3/properties/in
export function isOneOf3In(value: unknown): value is types.OneOf3In {
if(!_isStringOneOf3In(value)) {
return false;
}
return true;
}
function _isStringOneOf3In(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "cookie") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ParameterLocation/oneOf/3/properties/style
export function isOneOf3Style(value: unknown): value is types.OneOf3Style {
if(!_isStringOneOf3Style(value)) {
return false;
}
return true;
}
function _isStringOneOf3Style(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "form") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/properties/content/additionalProperties
export function isRequestBodyContentAdditionalProperties(value: unknown): value is types.RequestBodyContentAdditionalProperties {
if(!_isReferenceRequestBodyContentAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodyContentAdditionalProperties(value: unknown): value is unknown {
if(!isMediaType(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/oneOf/0/properties/scheme
export function isOneOf0Scheme(value: unknown): value is types.OneOf0Scheme {
if(!_isStringOneOf0Scheme(value)) {
return false;
}
return true;
}
function _isStringOneOf0Scheme(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^[Bb][Ee][Aa][Rr][Ee][Rr]$").test(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/oneOf/1/properties/scheme
export function isOneOf1Scheme(value: unknown): value is types.OneOf1Scheme {
if(!_isNotOneOf1Scheme(value)) {
return false;
}
return true;
}
function _isNotOneOf1Scheme(value: unknown): value is unknown {
if(isSchemeNot(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/oneOf/1/not
export function isOneOf1Not(value: unknown): value is types.OneOf1Not {
if(!_isMapOneOf1Not(value)) {
return false;
}
return true;
}
function _isMapOneOf1Not(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("bearerFormat" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/properties/scopes/additionalProperties
export function isImplicitOauthFlowScopesAdditionalProperties(value: unknown): value is types.ImplicitOauthFlowScopesAdditionalProperties {
if(!_isStringImplicitOauthFlowScopesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringImplicitOauthFlowScopesAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/properties/scopes/additionalProperties
export function isPasswordOauthFlowScopesAdditionalProperties(value: unknown): value is types.PasswordOauthFlowScopesAdditionalProperties {
if(!_isStringPasswordOauthFlowScopesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringPasswordOauthFlowScopesAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/properties/scopes/additionalProperties
export function isClientCredentialsFlowScopesAdditionalProperties(value: unknown): value is types.ClientCredentialsFlowScopesAdditionalProperties {
if(!_isStringClientCredentialsFlowScopesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringClientCredentialsFlowScopesAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/scopes/additionalProperties
export function isAuthorizationCodeOauthFlowScopesAdditionalProperties(value: unknown): value is types.AuthorizationCodeOauthFlowScopesAdditionalProperties {
if(!_isStringAuthorizationCodeOauthFlowScopesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeOauthFlowScopesAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/parameters/additionalProperties
export function isParametersAdditionalProperties(value: unknown): value is types.ParametersAdditionalProperties {
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/headers/additionalProperties
export function isEncodingHeadersAdditionalProperties(value: unknown): value is types.EncodingHeadersAdditionalProperties {
if(!_isOneOfEncodingHeadersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfEncodingHeadersAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isEncodingHeadersAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isEncodingHeadersAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/schemas/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isSchemasAZAZ09OneOf0(value: unknown): value is types.SchemasAZAZ09OneOf0 {
if(!_isReferenceSchemasAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceSchemasAZAZ09OneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/schemas/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isSchemasAZAZ09OneOf1(value: unknown): value is types.SchemasAZAZ09OneOf1 {
if(!_isReferenceSchemasAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceSchemasAZAZ09OneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/responses/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isResponsesAZAZ09OneOf0(value: unknown): value is types.ResponsesAZAZ09OneOf0 {
if(!_isReferenceResponsesAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceResponsesAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/responses/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isResponsesAZAZ09OneOf1(value: unknown): value is types.ResponsesAZAZ09OneOf1 {
if(!_isReferenceResponsesAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceResponsesAZAZ09OneOf1(value: unknown): value is unknown {
if(!isResponse(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/parameters/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isParametersAZAZ09OneOf0(value: unknown): value is types.ParametersAZAZ09OneOf0 {
if(!_isReferenceParametersAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceParametersAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/parameters/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isParametersAZAZ09OneOf1(value: unknown): value is types.ParametersAZAZ09OneOf1 {
if(!_isReferenceParametersAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceParametersAZAZ09OneOf1(value: unknown): value is unknown {
if(!isParameter(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/examples/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isExamplesAZAZ09OneOf0(value: unknown): value is types.ExamplesAZAZ09OneOf0 {
if(!_isReferenceExamplesAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceExamplesAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/examples/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isExamplesAZAZ09OneOf1(value: unknown): value is types.ExamplesAZAZ09OneOf1 {
if(!_isReferenceExamplesAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceExamplesAZAZ09OneOf1(value: unknown): value is unknown {
if(!isDefinitionsExample(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/requestBodies/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isRequestBodiesAZAZ09OneOf0(value: unknown): value is types.RequestBodiesAZAZ09OneOf0 {
if(!_isReferenceRequestBodiesAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodiesAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/requestBodies/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isRequestBodiesAZAZ09OneOf1(value: unknown): value is types.RequestBodiesAZAZ09OneOf1 {
if(!_isReferenceRequestBodiesAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodiesAZAZ09OneOf1(value: unknown): value is unknown {
if(!isDefinitionsRequestBody(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/headers/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isHeadersAZAZ09OneOf0(value: unknown): value is types.HeadersAZAZ09OneOf0 {
if(!_isReferenceHeadersAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceHeadersAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/headers/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isHeadersAZAZ09OneOf1(value: unknown): value is types.HeadersAZAZ09OneOf1 {
if(!_isReferenceHeadersAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceHeadersAZAZ09OneOf1(value: unknown): value is unknown {
if(!isHeader(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/securitySchemes/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isSecuritySchemesAZAZ09OneOf0(value: unknown): value is types.SecuritySchemesAZAZ09OneOf0 {
if(!_isReferenceSecuritySchemesAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemesAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/securitySchemes/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isSecuritySchemesAZAZ09OneOf1(value: unknown): value is types.SecuritySchemesAZAZ09OneOf1 {
if(!_isReferenceSecuritySchemesAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemesAZAZ09OneOf1(value: unknown): value is unknown {
if(!isSecurityScheme(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/links/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isLinksAZAZ09OneOf0(value: unknown): value is types.LinksAZAZ09OneOf0 {
if(!_isReferenceLinksAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceLinksAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/links/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isLinksAZAZ09OneOf1(value: unknown): value is types.LinksAZAZ09OneOf1 {
if(!_isReferenceLinksAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceLinksAZAZ09OneOf1(value: unknown): value is unknown {
if(!isLink(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/callbacks/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/0
export function isCallbacksAZAZ09OneOf0(value: unknown): value is types.CallbacksAZAZ09OneOf0 {
if(!_isReferenceCallbacksAZAZ09OneOf0(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksAZAZ09OneOf0(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Components/properties/callbacks/patternProperties/^[a-zA-Z0-9\.\-_]+$/oneOf/1
export function isCallbacksAZAZ09OneOf1(value: unknown): value is types.CallbacksAZAZ09OneOf1 {
if(!_isReferenceCallbacksAZAZ09OneOf1(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksAZAZ09OneOf1(value: unknown): value is unknown {
if(!isCallback(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/allOf/items/oneOf/0
export function isAllOfItemsOneOf0(value: unknown): value is types.AllOfItemsOneOf0 {
if(!_isReferenceAllOfItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceAllOfItemsOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/allOf/items/oneOf/1
export function isAllOfItemsOneOf1(value: unknown): value is types.AllOfItemsOneOf1 {
if(!_isReferenceAllOfItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceAllOfItemsOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/oneOf/items/oneOf/0
export function isOneOfItemsOneOf0(value: unknown): value is types.OneOfItemsOneOf0 {
if(!_isReferenceOneOfItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceOneOfItemsOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/oneOf/items/oneOf/1
export function isOneOfItemsOneOf1(value: unknown): value is types.OneOfItemsOneOf1 {
if(!_isReferenceOneOfItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceOneOfItemsOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/anyOf/items/oneOf/0
export function isAnyOfItemsOneOf0(value: unknown): value is types.AnyOfItemsOneOf0 {
if(!_isReferenceAnyOfItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceAnyOfItemsOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/anyOf/items/oneOf/1
export function isAnyOfItemsOneOf1(value: unknown): value is types.AnyOfItemsOneOf1 {
if(!_isReferenceAnyOfItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceAnyOfItemsOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/properties/additionalProperties/oneOf/0
export function isPropertiesPropertiesAdditionalPropertiesOneOf0(value: unknown): value is types.PropertiesPropertiesAdditionalPropertiesOneOf0 {
if(!_isReferencePropertiesPropertiesAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferencePropertiesPropertiesAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/properties/additionalProperties/oneOf/1
export function isPropertiesPropertiesAdditionalPropertiesOneOf1(value: unknown): value is types.PropertiesPropertiesAdditionalPropertiesOneOf1 {
if(!_isReferencePropertiesPropertiesAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferencePropertiesPropertiesAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/headers/additionalProperties/oneOf/0
export function isResponseHeadersAdditionalPropertiesOneOf0(value: unknown): value is types.ResponseHeadersAdditionalPropertiesOneOf0 {
if(!_isReferenceResponseHeadersAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceResponseHeadersAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isHeader(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/headers/additionalProperties/oneOf/1
export function isResponseHeadersAdditionalPropertiesOneOf1(value: unknown): value is types.ResponseHeadersAdditionalPropertiesOneOf1 {
if(!_isReferenceResponseHeadersAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceResponseHeadersAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/links/additionalProperties/oneOf/0
export function isLinksAdditionalPropertiesOneOf0(value: unknown): value is types.LinksAdditionalPropertiesOneOf0 {
if(!_isReferenceLinksAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceLinksAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isLink(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/links/additionalProperties/oneOf/1
export function isLinksAdditionalPropertiesOneOf1(value: unknown): value is types.LinksAdditionalPropertiesOneOf1 {
if(!_isReferenceLinksAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceLinksAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/examples/additionalProperties/oneOf/0
export function isMediaTypeExamplesAdditionalPropertiesOneOf0(value: unknown): value is types.MediaTypeExamplesAdditionalPropertiesOneOf0 {
if(!_isReferenceMediaTypeExamplesAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeExamplesAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isDefinitionsExample(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/MediaType/properties/examples/additionalProperties/oneOf/1
export function isMediaTypeExamplesAdditionalPropertiesOneOf1(value: unknown): value is types.MediaTypeExamplesAdditionalPropertiesOneOf1 {
if(!_isReferenceMediaTypeExamplesAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeExamplesAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/examples/additionalProperties/oneOf/0
export function isHeaderExamplesAdditionalPropertiesOneOf0(value: unknown): value is types.HeaderExamplesAdditionalPropertiesOneOf0 {
if(!_isReferenceHeaderExamplesAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceHeaderExamplesAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isDefinitionsExample(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/examples/additionalProperties/oneOf/1
export function isHeaderExamplesAdditionalPropertiesOneOf1(value: unknown): value is types.HeaderExamplesAdditionalPropertiesOneOf1 {
if(!_isReferenceHeaderExamplesAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceHeaderExamplesAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/parameters/items/oneOf/0
export function isPathItemParametersItemsOneOf0(value: unknown): value is types.PathItemParametersItemsOneOf0 {
if(!_isReferencePathItemParametersItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferencePathItemParametersItemsOneOf0(value: unknown): value is unknown {
if(!isParameter(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/parameters/items/oneOf/1
export function isPathItemParametersItemsOneOf1(value: unknown): value is types.PathItemParametersItemsOneOf1 {
if(!_isReferencePathItemParametersItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferencePathItemParametersItemsOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/parameters/items/oneOf/0
export function isOperationParametersItemsOneOf0(value: unknown): value is types.OperationParametersItemsOneOf0 {
if(!_isReferenceOperationParametersItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceOperationParametersItemsOneOf0(value: unknown): value is unknown {
if(!isParameter(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/parameters/items/oneOf/1
export function isOperationParametersItemsOneOf1(value: unknown): value is types.OperationParametersItemsOneOf1 {
if(!_isReferenceOperationParametersItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceOperationParametersItemsOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/callbacks/additionalProperties/oneOf/0
export function isCallbacksAdditionalPropertiesOneOf0(value: unknown): value is types.CallbacksAdditionalPropertiesOneOf0 {
if(!_isReferenceCallbacksAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isCallback(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/callbacks/additionalProperties/oneOf/1
export function isCallbacksAdditionalPropertiesOneOf1(value: unknown): value is types.CallbacksAdditionalPropertiesOneOf1 {
if(!_isReferenceCallbacksAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/0/not
export function isAllOf0Not(value: unknown): value is types.AllOf0Not {
if(!_isMapAllOf0Not(value)) {
return false;
}
return true;
}
function _isMapAllOf0Not(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("style" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/1/not
export function isAllOf1Not(value: unknown): value is types.AllOf1Not {
if(!_isMapAllOf1Not(value)) {
return false;
}
return true;
}
function _isMapAllOf1Not(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("explode" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/2/not
export function isAllOf2Not(value: unknown): value is types.AllOf2Not {
if(!_isMapAllOf2Not(value)) {
return false;
}
return true;
}
function _isMapAllOf2Not(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("allowReserved" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/3/not
export function isAllOf3Not(value: unknown): value is types.AllOf3Not {
if(!_isMapAllOf3Not(value)) {
return false;
}
return true;
}
function _isMapAllOf3Not(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("example" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SchemaXORContent/oneOf/1/allOf/4/not
export function isAllOf4Not(value: unknown): value is types.AllOf4Not {
if(!_isMapAllOf4Not(value)) {
return false;
}
return true;
}
function _isMapAllOf4Not(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("examples" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/examples/additionalProperties/oneOf/0
export function isParameterExamplesAdditionalPropertiesOneOf0(value: unknown): value is types.ParameterExamplesAdditionalPropertiesOneOf0 {
if(!_isReferenceParameterExamplesAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceParameterExamplesAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isDefinitionsExample(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/examples/additionalProperties/oneOf/1
export function isParameterExamplesAdditionalPropertiesOneOf1(value: unknown): value is types.ParameterExamplesAdditionalPropertiesOneOf1 {
if(!_isReferenceParameterExamplesAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceParameterExamplesAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/oneOf/1/properties/scheme/not
export function isSchemeNot(value: unknown): value is types.SchemeNot {
if(!_isStringSchemeNot(value)) {
return false;
}
return true;
}
function _isStringSchemeNot(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^[Bb][Ee][Aa][Rr][Ee][Rr]$").test(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/headers/additionalProperties/oneOf/0
export function isEncodingHeadersAdditionalPropertiesOneOf0(value: unknown): value is types.EncodingHeadersAdditionalPropertiesOneOf0 {
if(!_isReferenceEncodingHeadersAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceEncodingHeadersAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isHeader(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/headers/additionalProperties/oneOf/1
export function isEncodingHeadersAdditionalPropertiesOneOf1(value: unknown): value is types.EncodingHeadersAdditionalPropertiesOneOf1 {
if(!_isReferenceEncodingHeadersAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceEncodingHeadersAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
