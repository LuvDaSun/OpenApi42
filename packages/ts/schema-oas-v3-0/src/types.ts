// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.8.9                          -- www.JsonSchema42.org
/**
The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3
*/
export type Schema20210928 = ((
{
"openapi": Openapi,
"info": PropertiesInfo,
"externalDocs"?: Schema20210928ExternalDocs,
"servers"?: Schema20210928Servers,
"security"?: Schema20210928Security,
"tags"?: Schema20210928Tags,
"paths": PropertiesPaths,
"components"?: PropertiesComponents,
[key: string]: Schema20210928AdditionalProperties |
Schema20210928X |
Openapi |
PropertiesInfo |
Schema20210928ExternalDocs |
Schema20210928Servers |
Schema20210928Security |
Schema20210928Tags |
PropertiesPaths |
PropertiesComponents |
undefined,
}
));
export type Reference = ((
{
[key: string]: PatternPropertiesRef,
}
));
export type DefinitionsInfo = ((
{
"title": InfoTitle,
"description"?: InfoDescription,
"termsOfService"?: TermsOfService,
"contact"?: PropertiesContact,
"license"?: PropertiesLicense,
"version": Version,
[key: string]: InfoAdditionalProperties |
InfoX |
InfoTitle |
InfoDescription |
TermsOfService |
PropertiesContact |
PropertiesLicense |
Version |
undefined,
}
));
export type DefinitionsContact = ((
{
"name"?: ContactName,
"url"?: ContactUrl,
"email"?: Email,
[key: string]: ContactAdditionalProperties |
ContactX |
ContactName |
ContactUrl |
Email |
undefined,
}
));
export type DefinitionsLicense = ((
{
"name": LicenseName,
"url"?: LicenseUrl,
[key: string]: LicenseAdditionalProperties |
LicenseX |
LicenseName |
LicenseUrl |
undefined,
}
));
export type DefinitionsServer = ((
{
"url": ServerUrl,
"description"?: ServerDescription,
"variables"?: Variables,
[key: string]: ServerAdditionalProperties |
ServerX |
ServerUrl |
ServerDescription |
Variables |
undefined,
}
));
export type ServerVariable = ((
{
"enum"?: ServerVariableEnum,
"default": ServerVariableDefault,
"description"?: ServerVariableDescription,
[key: string]: ServerVariableAdditionalProperties |
ServerVariableX |
ServerVariableEnum |
ServerVariableDefault |
ServerVariableDescription |
undefined,
}
));
export type DefinitionsComponents = ((
{
"schemas"?: Schemas,
"responses"?: ComponentsPropertiesResponses,
"parameters"?: ComponentsParameters,
"examples"?: ComponentsExamples,
"requestBodies"?: RequestBodies,
"headers"?: ComponentsHeaders,
"securitySchemes"?: SecuritySchemes,
"links"?: ComponentsLinks,
"callbacks"?: ComponentsCallbacks,
[key: string]: ComponentsAdditionalProperties |
ComponentsX |
Schemas |
ComponentsPropertiesResponses |
ComponentsParameters |
ComponentsExamples |
RequestBodies |
ComponentsHeaders |
SecuritySchemes |
ComponentsLinks |
ComponentsCallbacks |
undefined,
}
));
export type DefinitionsSchema = ((
{
"title"?: SchemaTitle,
"multipleOf"?: MultipleOf,
"maximum"?: Maximum,
"exclusiveMaximum"?: ExclusiveMaximum,
"minimum"?: Minimum,
"exclusiveMinimum"?: ExclusiveMinimum,
"maxLength"?: MaxLength,
"minLength"?: MinLength,
"pattern"?: Pattern,
"maxItems"?: MaxItems,
"minItems"?: MinItems,
"uniqueItems"?: UniqueItems,
"maxProperties"?: MaxProperties,
"minProperties"?: MinProperties,
"required"?: SchemaRequired,
"enum"?: SchemaEnum,
"type"?: SchemaType,
"not"?: PropertiesNot,
"allOf"?: AllOf,
"oneOf"?: OneOf,
"anyOf"?: AnyOf,
"items"?: PropertiesItems,
"properties"?: Properties,
"additionalProperties"?: SchemaPropertiesAdditionalProperties,
"description"?: SchemaDescription,
"format"?: Format,
"default"?: SchemaDefault,
"nullable"?: Nullable,
"discriminator"?: PropertiesDiscriminator,
"readOnly"?: ReadOnly,
"writeOnly"?: WriteOnly,
"example"?: SchemaPropertiesExample,
"externalDocs"?: SchemaExternalDocs,
"deprecated"?: SchemaDeprecated,
"xml"?: PropertiesXml,
[key: string]: SchemaAdditionalProperties |
SchemaX |
SchemaTitle |
MultipleOf |
Maximum |
ExclusiveMaximum |
Minimum |
ExclusiveMinimum |
MaxLength |
MinLength |
Pattern |
MaxItems |
MinItems |
UniqueItems |
MaxProperties |
MinProperties |
SchemaRequired |
SchemaEnum |
SchemaType |
PropertiesNot |
AllOf |
OneOf |
AnyOf |
PropertiesItems |
Properties |
SchemaPropertiesAdditionalProperties |
SchemaDescription |
Format |
SchemaDefault |
Nullable |
PropertiesDiscriminator |
ReadOnly |
WriteOnly |
SchemaPropertiesExample |
SchemaExternalDocs |
SchemaDeprecated |
PropertiesXml |
undefined,
}
));
export type DefinitionsDiscriminator = ((
{
"propertyName": PropertyName,
"mapping"?: Mapping,
}
));
export type DefinitionsXml = ((
{
"name"?: XmlName,
"namespace"?: Namespace,
"prefix"?: Prefix,
"attribute"?: Attribute,
"wrapped"?: Wrapped,
[key: string]: XmlAdditionalProperties |
XmlX |
XmlName |
Namespace |
Prefix |
Attribute |
Wrapped |
undefined,
}
));
export type Response = ((
{
"description": ResponseDescription,
"headers"?: ResponseHeaders,
"content"?: ResponseContent,
"links"?: ResponseLinks,
[key: string]: ResponseAdditionalProperties |
ResponseX |
ResponseDescription |
ResponseHeaders |
ResponseContent |
ResponseLinks |
undefined,
}
));
export type MediaType = (MediaTypeAllOf0) &
((
{
"schema"?: MediaTypePropertiesSchema,
"example"?: MediaTypePropertiesExample,
"examples"?: MediaTypeExamples,
"encoding"?: PropertiesEncoding,
[key: string]: MediaTypeAdditionalProperties |
MediaTypeX |
MediaTypePropertiesSchema |
MediaTypePropertiesExample |
MediaTypeExamples |
PropertiesEncoding |
undefined,
}
));
export type DefinitionsExample = ((
{
"summary"?: ExampleSummary,
"description"?: ExampleDescription,
"value"?: Value,
"externalValue"?: ExternalValue,
[key: string]: ExampleAdditionalProperties |
ExampleX |
ExampleSummary |
ExampleDescription |
Value |
ExternalValue |
undefined,
}
));
export type Header = (HeaderAllOf0 &
HeaderAllOf1) &
((
{
"description"?: HeaderDescription,
"required"?: HeaderRequired,
"deprecated"?: HeaderDeprecated,
"allowEmptyValue"?: HeaderAllowEmptyValue,
"style"?: HeaderStyle,
"explode"?: HeaderExplode,
"allowReserved"?: HeaderAllowReserved,
"schema"?: HeaderPropertiesSchema,
"content"?: HeaderContent,
"example"?: HeaderPropertiesExample,
"examples"?: HeaderExamples,
[key: string]: HeaderAdditionalProperties |
HeaderX |
HeaderDescription |
HeaderRequired |
HeaderDeprecated |
HeaderAllowEmptyValue |
HeaderStyle |
HeaderExplode |
HeaderAllowReserved |
HeaderPropertiesSchema |
HeaderContent |
HeaderPropertiesExample |
HeaderExamples |
undefined,
}
));
export type DefinitionsPaths = ((
{
[key: string]: PathsAdditionalProperties |
PatternProperties |
PathsX,
}
));
export type PathItem = ((
{
"$ref"?: PropertiesRef,
"summary"?: PathItemSummary,
"description"?: PathItemDescription,
"servers"?: PathItemServers,
"parameters"?: PathItemParameters,
[key: string]: PathItemAdditionalProperties |
GetPutPostDeleteOptionsHeadPatchTrace |
PathItemX |
PropertiesRef |
PathItemSummary |
PathItemDescription |
PathItemServers |
PathItemParameters |
undefined,
}
));
export type Operation = ((
{
"tags"?: OperationTags,
"summary"?: OperationSummary,
"description"?: OperationDescription,
"externalDocs"?: OperationExternalDocs,
"operationId"?: OperationOperationId,
"parameters"?: OperationParameters,
"requestBody"?: OperationPropertiesRequestBody,
"responses": OperationPropertiesResponses,
"callbacks"?: OperationCallbacks,
"deprecated"?: OperationDeprecated,
"security"?: OperationSecurity,
"servers"?: OperationServers,
[key: string]: OperationAdditionalProperties |
OperationX |
OperationTags |
OperationSummary |
OperationDescription |
OperationExternalDocs |
OperationOperationId |
OperationParameters |
OperationPropertiesRequestBody |
OperationPropertiesResponses |
OperationCallbacks |
OperationDeprecated |
OperationSecurity |
OperationServers |
undefined,
}
));
export type DefinitionsResponses = ((
{
"default"?: ResponsesDefault,
[key: string]: ResponsesAdditionalProperties |
PatternProperties15D2Xx |
ResponsesX |
ResponsesDefault |
undefined,
}
));
export type SecurityRequirement = ((
{
[key: string]: SecurityRequirementAdditionalProperties,
}
));
export type Tag = ((
{
"name": TagName,
"description"?: TagDescription,
"externalDocs"?: TagExternalDocs,
[key: string]: TagAdditionalProperties |
TagX |
TagName |
TagDescription |
TagExternalDocs |
undefined,
}
));
export type ExternalDocumentation = ((
{
"description"?: ExternalDocumentationDescription,
"url": ExternalDocumentationUrl,
[key: string]: ExternalDocumentationAdditionalProperties |
ExternalDocumentationX |
ExternalDocumentationDescription |
ExternalDocumentationUrl |
undefined,
}
));
/**
Example and examples are mutually exclusive
*/
export type ExampleXorExamples = (ExampleXorExamplesNot);
/**
Schema and content are mutually exclusive, at least one is required
*/
export type SchemaXorContent = (SchemaXorContentOneOf0 |
SchemaXorContentOneOf1) &
(SchemaXorContentNot);
export type Parameter = (ParameterAllOf0 &
ParameterAllOf1 &
ParameterAllOf2) &
((
{
"name": ParameterName,
"in": ParameterIn,
"description"?: ParameterDescription,
"required"?: ParameterRequired,
"deprecated"?: ParameterDeprecated,
"allowEmptyValue"?: ParameterAllowEmptyValue,
"style"?: ParameterStyle,
"explode"?: ParameterExplode,
"allowReserved"?: ParameterAllowReserved,
"schema"?: ParameterPropertiesSchema,
"content"?: ParameterContent,
"example"?: ParameterPropertiesExample,
"examples"?: ParameterExamples,
[key: string]: ParameterAdditionalProperties |
ParameterX |
ParameterName |
ParameterIn |
ParameterDescription |
ParameterRequired |
ParameterDeprecated |
ParameterAllowEmptyValue |
ParameterStyle |
ParameterExplode |
ParameterAllowReserved |
ParameterPropertiesSchema |
ParameterContent |
ParameterPropertiesExample |
ParameterExamples |
undefined,
}
));
/**
Parameter location
*/
export type ParameterLocation = (ParameterLocationOneOf0 |
ParameterLocationOneOf1 |
ParameterLocationOneOf2 |
ParameterLocationOneOf3);
export type DefinitionsRequestBody = ((
{
"description"?: RequestBodyDescription,
"content": RequestBodyContent,
"required"?: RequestBodyRequired,
[key: string]: RequestBodyAdditionalProperties |
RequestBodyX |
RequestBodyDescription |
RequestBodyContent |
RequestBodyRequired |
undefined,
}
));
export type SecurityScheme = (SecuritySchemeOneOf0 |
SecuritySchemeOneOf1 |
SecuritySchemeOneOf2 |
SecuritySchemeOneOf3);
export type ApiKeySecurityScheme = ((
{
"type": ApiKeySecuritySchemeType,
"name": ApiKeySecuritySchemeName,
"in": ApiKeySecuritySchemeIn,
"description"?: ApiKeySecuritySchemeDescription,
[key: string]: ApiKeySecuritySchemeAdditionalProperties |
ApiKeySecuritySchemeX |
ApiKeySecuritySchemeType |
ApiKeySecuritySchemeName |
ApiKeySecuritySchemeIn |
ApiKeySecuritySchemeDescription |
undefined,
}
));
export type HttpSecurityScheme = (HttpSecuritySchemeOneOf0 |
HttpSecuritySchemeOneOf1) &
((
{
"scheme": HttpSecuritySchemeScheme,
"bearerFormat"?: BearerFormat,
"description"?: HttpSecuritySchemeDescription,
"type": HttpSecuritySchemeType,
[key: string]: HttpSecuritySchemeAdditionalProperties |
HttpSecuritySchemeX |
HttpSecuritySchemeScheme |
BearerFormat |
HttpSecuritySchemeDescription |
HttpSecuritySchemeType |
undefined,
}
));
export type Oauth2SecurityScheme = ((
{
"type": Oauth2SecuritySchemeType,
"flows": Flows,
"description"?: Oauth2SecuritySchemeDescription,
[key: string]: Oauth2SecuritySchemeAdditionalProperties |
Oauth2SecuritySchemeX |
Oauth2SecuritySchemeType |
Flows |
Oauth2SecuritySchemeDescription |
undefined,
}
));
export type OpenIdConnectSecurityScheme = ((
{
"type": OpenIdConnectSecuritySchemeType,
"openIdConnectUrl": OpenIdConnectUrl,
"description"?: OpenIdConnectSecuritySchemeDescription,
[key: string]: OpenIdConnectSecuritySchemeAdditionalProperties |
OpenIdConnectSecuritySchemeX |
OpenIdConnectSecuritySchemeType |
OpenIdConnectUrl |
OpenIdConnectSecuritySchemeDescription |
undefined,
}
));
export type OauthFlows = ((
{
"implicit"?: Implicit,
"password"?: Password,
"clientCredentials"?: ClientCredentials,
"authorizationCode"?: AuthorizationCode,
[key: string]: OauthFlowsAdditionalProperties |
OauthFlowsX |
Implicit |
Password |
ClientCredentials |
AuthorizationCode |
undefined,
}
));
export type ImplicitOauthFlow = ((
{
"authorizationUrl": ImplicitOauthFlowAuthorizationUrl,
"refreshUrl"?: ImplicitOauthFlowRefreshUrl,
"scopes": ImplicitOauthFlowScopes,
[key: string]: ImplicitOauthFlowAdditionalProperties |
ImplicitOauthFlowX |
ImplicitOauthFlowAuthorizationUrl |
ImplicitOauthFlowRefreshUrl |
ImplicitOauthFlowScopes |
undefined,
}
));
export type PasswordOauthFlow = ((
{
"tokenUrl": PasswordOauthFlowTokenUrl,
"refreshUrl"?: PasswordOauthFlowRefreshUrl,
"scopes": PasswordOauthFlowScopes,
[key: string]: PasswordOauthFlowAdditionalProperties |
PasswordOauthFlowX |
PasswordOauthFlowTokenUrl |
PasswordOauthFlowRefreshUrl |
PasswordOauthFlowScopes |
undefined,
}
));
export type ClientCredentialsFlow = ((
{
"tokenUrl": ClientCredentialsFlowTokenUrl,
"refreshUrl"?: ClientCredentialsFlowRefreshUrl,
"scopes": ClientCredentialsFlowScopes,
[key: string]: ClientCredentialsFlowAdditionalProperties |
ClientCredentialsFlowX |
ClientCredentialsFlowTokenUrl |
ClientCredentialsFlowRefreshUrl |
ClientCredentialsFlowScopes |
undefined,
}
));
export type AuthorizationCodeOauthFlow = ((
{
"authorizationUrl": AuthorizationCodeOauthFlowAuthorizationUrl,
"tokenUrl": AuthorizationCodeOauthFlowTokenUrl,
"refreshUrl"?: AuthorizationCodeOauthFlowRefreshUrl,
"scopes": AuthorizationCodeOauthFlowScopes,
[key: string]: AuthorizationCodeOauthFlowAdditionalProperties |
AuthorizationCodeOauthFlowX |
AuthorizationCodeOauthFlowAuthorizationUrl |
AuthorizationCodeOauthFlowTokenUrl |
AuthorizationCodeOauthFlowRefreshUrl |
AuthorizationCodeOauthFlowScopes |
undefined,
}
));
export type Link = (LinkNot) &
((
{
"operationId"?: LinkOperationId,
"operationRef"?: OperationRef,
"parameters"?: LinkParameters,
"requestBody"?: LinkPropertiesRequestBody,
"description"?: LinkDescription,
"server"?: PropertiesServer,
[key: string]: LinkAdditionalProperties |
LinkX |
LinkOperationId |
OperationRef |
LinkParameters |
LinkPropertiesRequestBody |
LinkDescription |
PropertiesServer |
undefined,
}
));
export type Callback = ((
{
[key: string]: CallbackAdditionalProperties |
CallbackX,
}
));
export type DefinitionsEncoding = ((
{
"contentType"?: ContentType,
"headers"?: EncodingHeaders,
"style"?: EncodingStyle,
"explode"?: EncodingExplode,
"allowReserved"?: EncodingAllowReserved,
[key: string]: DefinitionsEncodingAdditionalProperties |
ContentType |
EncodingHeaders |
EncodingStyle |
EncodingExplode |
EncodingAllowReserved |
undefined,
}
));
export type Openapi = ((string));
export type PropertiesInfo = (DefinitionsInfo);
export type Schema20210928ExternalDocs = (ExternalDocumentation);
export type Schema20210928Servers = (((Schema20210928ServersItems)[]));
export type Schema20210928Security = (((Schema20210928SecurityItems)[]));
export type Schema20210928Tags = (((Schema20210928TagsItems)[]));
export type PropertiesPaths = (DefinitionsPaths);
export type PropertiesComponents = (DefinitionsComponents);
export type Schema20210928AdditionalProperties = ((never));
export type Schema20210928X = unknown;
export type PatternPropertiesRef = ((string));
export type InfoTitle = ((string));
export type InfoDescription = ((string));
export type TermsOfService = ((string));
export type PropertiesContact = (DefinitionsContact);
export type PropertiesLicense = (DefinitionsLicense);
export type Version = ((string));
export type InfoAdditionalProperties = ((never));
export type InfoX = unknown;
export type ContactName = ((string));
export type ContactUrl = ((string));
export type Email = ((string));
export type ContactAdditionalProperties = ((never));
export type ContactX = unknown;
export type LicenseName = ((string));
export type LicenseUrl = ((string));
export type LicenseAdditionalProperties = ((never));
export type LicenseX = unknown;
export type ServerUrl = ((string));
export type ServerDescription = ((string));
export type Variables = ((
{
[key: string]: VariablesAdditionalProperties,
}
));
export type ServerAdditionalProperties = ((never));
export type ServerX = unknown;
export type ServerVariableEnum = (((ServerVariableEnumItems)[]));
export type ServerVariableDefault = ((string));
export type ServerVariableDescription = ((string));
export type ServerVariableAdditionalProperties = ((never));
export type ServerVariableX = unknown;
export type Schemas = ((
{
[key: string]: SchemasAZAZ09,
}
));
export type ComponentsPropertiesResponses = ((
{
[key: string]: ResponsesAZAZ09,
}
));
export type ComponentsParameters = ((
{
[key: string]: ParametersAZAZ09,
}
));
export type ComponentsExamples = ((
{
[key: string]: ExamplesAZAZ09,
}
));
export type RequestBodies = ((
{
[key: string]: RequestBodiesAZAZ09,
}
));
export type ComponentsHeaders = ((
{
[key: string]: HeadersAZAZ09,
}
));
export type SecuritySchemes = ((
{
[key: string]: SecuritySchemesAZAZ09,
}
));
export type ComponentsLinks = ((
{
[key: string]: LinksAZAZ09,
}
));
export type ComponentsCallbacks = ((
{
[key: string]: CallbacksAZAZ09,
}
));
export type ComponentsAdditionalProperties = ((never));
export type ComponentsX = unknown;
export type SchemaTitle = ((string));
export type MultipleOf = ((number));
export type Maximum = ((number));
export type ExclusiveMaximum = ((boolean));
export type Minimum = ((number));
export type ExclusiveMinimum = ((boolean));
export type MaxLength = ((number));
export type MinLength = ((number));
export type Pattern = ((string));
export type MaxItems = ((number));
export type MinItems = ((number));
export type UniqueItems = ((boolean));
export type MaxProperties = ((number));
export type MinProperties = ((number));
export type SchemaRequired = (((RequiredItems)[]));
export type SchemaEnum = (((SchemaEnumItems)[]));
export type SchemaType = (("array" |
"boolean" |
"integer" |
"number" |
"object" |
"string"));
export type PropertiesNot = (NotOneOf0 |
NotOneOf1);
export type AllOf = (((AllOfItems)[]));
export type OneOf = (((OneOfItems)[]));
export type AnyOf = (((AnyOfItems)[]));
export type PropertiesItems = (PropertiesItemsOneOf0 |
PropertiesItemsOneOf1);
export type Properties = ((
{
[key: string]: PropertiesPropertiesAdditionalProperties,
}
));
export type SchemaPropertiesAdditionalProperties = (SchemaPropertiesAdditionalPropertiesOneOf0 |
SchemaPropertiesAdditionalPropertiesOneOf1 |
AdditionalPropertiesOneOf2);
export type SchemaDescription = ((string));
export type Format = ((string));
export type SchemaDefault = unknown;
export type Nullable = ((boolean));
export type PropertiesDiscriminator = (DefinitionsDiscriminator);
export type ReadOnly = ((boolean));
export type WriteOnly = ((boolean));
export type SchemaPropertiesExample = unknown;
export type SchemaExternalDocs = (ExternalDocumentation);
export type SchemaDeprecated = ((boolean));
export type PropertiesXml = (DefinitionsXml);
export type SchemaAdditionalProperties = ((never));
export type SchemaX = unknown;
export type PropertyName = ((string));
export type Mapping = ((
{
[key: string]: MappingAdditionalProperties,
}
));
export type XmlName = ((string));
export type Namespace = ((string));
export type Prefix = ((string));
export type Attribute = ((boolean));
export type Wrapped = ((boolean));
export type XmlAdditionalProperties = ((never));
export type XmlX = unknown;
export type ResponseDescription = ((string));
export type ResponseHeaders = ((
{
[key: string]: ResponseHeadersAdditionalProperties,
}
));
export type ResponseContent = ((
{
[key: string]: ResponseContentAdditionalProperties,
}
));
export type ResponseLinks = ((
{
[key: string]: LinksAdditionalProperties,
}
));
export type ResponseAdditionalProperties = ((never));
export type ResponseX = unknown;
export type MediaTypePropertiesSchema = (MediaTypeSchemaOneOf0 |
MediaTypeSchemaOneOf1);
export type MediaTypePropertiesExample = unknown;
export type MediaTypeExamples = ((
{
[key: string]: MediaTypeExamplesAdditionalProperties,
}
));
export type PropertiesEncoding = ((
{
[key: string]: PropertiesEncodingAdditionalProperties,
}
));
export type MediaTypeAdditionalProperties = ((never));
export type MediaTypeX = unknown;
export type MediaTypeAllOf0 = (ExampleXorExamples);
export type ExampleSummary = ((string));
export type ExampleDescription = ((string));
export type Value = unknown;
export type ExternalValue = ((string));
export type ExampleAdditionalProperties = ((never));
export type ExampleX = unknown;
export type HeaderDescription = ((string));
export type HeaderRequired = ((boolean));
export type HeaderDeprecated = ((boolean));
export type HeaderAllowEmptyValue = ((boolean));
export type HeaderStyle = (("simple"));
export type HeaderExplode = ((boolean));
export type HeaderAllowReserved = ((boolean));
export type HeaderPropertiesSchema = (HeaderSchemaOneOf0 |
HeaderSchemaOneOf1);
export type HeaderContent = ((
{
[key: string]: HeaderContentAdditionalProperties,
}
));
export type HeaderPropertiesExample = unknown;
export type HeaderExamples = ((
{
[key: string]: HeaderExamplesAdditionalProperties,
}
));
export type HeaderAdditionalProperties = ((never));
export type HeaderX = unknown;
export type HeaderAllOf0 = (ExampleXorExamples);
export type HeaderAllOf1 = (SchemaXorContent);
export type PathsAdditionalProperties = ((never));
export type PatternProperties = (PathItem);
export type PathsX = unknown;
export type PropertiesRef = ((string));
export type PathItemSummary = ((string));
export type PathItemDescription = ((string));
export type PathItemServers = (((PathItemServersItems)[]));
export type PathItemParameters = (((PathItemParametersItems)[]));
export type PathItemAdditionalProperties = ((never));
export type GetPutPostDeleteOptionsHeadPatchTrace = (Operation);
export type PathItemX = unknown;
export type OperationTags = (((OperationTagsItems)[]));
export type OperationSummary = ((string));
export type OperationDescription = ((string));
export type OperationExternalDocs = (ExternalDocumentation);
export type OperationOperationId = ((string));
export type OperationParameters = (((OperationParametersItems)[]));
export type OperationPropertiesRequestBody = (RequestBodyOneOf0 |
RequestBodyOneOf1);
export type OperationPropertiesResponses = (DefinitionsResponses);
export type OperationCallbacks = ((
{
[key: string]: CallbacksAdditionalProperties,
}
));
export type OperationDeprecated = ((boolean));
export type OperationSecurity = (((OperationSecurityItems)[]));
export type OperationServers = (((OperationServersItems)[]));
export type OperationAdditionalProperties = ((never));
export type OperationX = unknown;
export type ResponsesDefault = (DefaultOneOf0 |
DefaultOneOf1);
export type ResponsesAdditionalProperties = ((never));
export type PatternProperties15D2Xx = (PatternProperties15D2XxOneOf0 |
PatternProperties15D2XxOneOf1);
export type ResponsesX = unknown;
export type SecurityRequirementAdditionalProperties = (((AdditionalPropertiesItems)[]));
export type TagName = ((string));
export type TagDescription = ((string));
export type TagExternalDocs = (ExternalDocumentation);
export type TagAdditionalProperties = ((never));
export type TagX = unknown;
export type ExternalDocumentationDescription = ((string));
export type ExternalDocumentationUrl = ((string));
export type ExternalDocumentationAdditionalProperties = ((never));
export type ExternalDocumentationX = unknown;
export type ExampleXorExamplesNot = ((
{
}
));
export type SchemaXorContentOneOf0 = ((
{
}
));
/**
Some properties are not allowed if content is present
*/
export type SchemaXorContentOneOf1 = (OneOf1AllOf0 &
OneOf1AllOf1 &
OneOf1AllOf2 &
AllOf3 &
AllOf4) &
((
{
}
));
export type SchemaXorContentNot = ((
{
}
));
export type ParameterName = ((string));
export type ParameterIn = ((string));
export type ParameterDescription = ((string));
export type ParameterRequired = ((boolean));
export type ParameterDeprecated = ((boolean));
export type ParameterAllowEmptyValue = ((boolean));
export type ParameterStyle = ((string));
export type ParameterExplode = ((boolean));
export type ParameterAllowReserved = ((boolean));
export type ParameterPropertiesSchema = (ParameterSchemaOneOf0 |
ParameterSchemaOneOf1);
export type ParameterContent = ((
{
[key: string]: ParameterContentAdditionalProperties,
}
));
export type ParameterPropertiesExample = unknown;
export type ParameterExamples = ((
{
[key: string]: ParameterExamplesAdditionalProperties,
}
));
export type ParameterAdditionalProperties = ((never));
export type ParameterX = unknown;
export type ParameterAllOf0 = (ExampleXorExamples);
export type ParameterAllOf1 = (SchemaXorContent);
export type ParameterAllOf2 = (ParameterLocation);
/**
Parameter in path
*/
export type ParameterLocationOneOf0 = ((
{
"in"?: OneOf0In,
"style"?: OneOf0Style,
"required": OneOf0Required,
}
));
/**
Parameter in query
*/
export type ParameterLocationOneOf1 = ((
{
"in"?: OneOf1In,
"style"?: OneOf1Style,
}
));
/**
Parameter in header
*/
export type ParameterLocationOneOf2 = ((
{
"in"?: OneOf2In,
"style"?: OneOf2Style,
}
));
/**
Parameter in cookie
*/
export type ParameterLocationOneOf3 = ((
{
"in"?: OneOf3In,
"style"?: OneOf3Style,
}
));
export type RequestBodyDescription = ((string));
export type RequestBodyContent = ((
{
[key: string]: RequestBodyContentAdditionalProperties,
}
));
export type RequestBodyRequired = ((boolean));
export type RequestBodyAdditionalProperties = ((never));
export type RequestBodyX = unknown;
export type SecuritySchemeOneOf0 = (ApiKeySecurityScheme);
export type SecuritySchemeOneOf1 = (HttpSecurityScheme);
export type SecuritySchemeOneOf2 = (Oauth2SecurityScheme);
export type SecuritySchemeOneOf3 = (OpenIdConnectSecurityScheme);
export type ApiKeySecuritySchemeType = (("apiKey"));
export type ApiKeySecuritySchemeName = ((string));
export type ApiKeySecuritySchemeIn = (("header" |
"query" |
"cookie"));
export type ApiKeySecuritySchemeDescription = ((string));
export type ApiKeySecuritySchemeAdditionalProperties = ((never));
export type ApiKeySecuritySchemeX = unknown;
export type HttpSecuritySchemeScheme = ((string));
export type BearerFormat = ((string));
export type HttpSecuritySchemeDescription = ((string));
export type HttpSecuritySchemeType = (("http"));
export type HttpSecuritySchemeAdditionalProperties = ((never));
export type HttpSecuritySchemeX = unknown;
/**
Bearer
*/
export type HttpSecuritySchemeOneOf0 = ((
{
"scheme"?: OneOf0Scheme,
}
));
/**
Non Bearer
*/
export type HttpSecuritySchemeOneOf1 = (OneOf1Not) &
((
{
"scheme"?: OneOf1Scheme,
}
));
export type Oauth2SecuritySchemeType = (("oauth2"));
export type Flows = (OauthFlows);
export type Oauth2SecuritySchemeDescription = ((string));
export type Oauth2SecuritySchemeAdditionalProperties = ((never));
export type Oauth2SecuritySchemeX = unknown;
export type OpenIdConnectSecuritySchemeType = (("openIdConnect"));
export type OpenIdConnectUrl = ((string));
export type OpenIdConnectSecuritySchemeDescription = ((string));
export type OpenIdConnectSecuritySchemeAdditionalProperties = ((never));
export type OpenIdConnectSecuritySchemeX = unknown;
export type Implicit = (ImplicitOauthFlow);
export type Password = (PasswordOauthFlow);
export type ClientCredentials = (ClientCredentialsFlow);
export type AuthorizationCode = (AuthorizationCodeOauthFlow);
export type OauthFlowsAdditionalProperties = ((never));
export type OauthFlowsX = unknown;
export type ImplicitOauthFlowAuthorizationUrl = ((string));
export type ImplicitOauthFlowRefreshUrl = ((string));
export type ImplicitOauthFlowScopes = ((
{
[key: string]: ImplicitOauthFlowScopesAdditionalProperties,
}
));
export type ImplicitOauthFlowAdditionalProperties = ((never));
export type ImplicitOauthFlowX = unknown;
export type PasswordOauthFlowTokenUrl = ((string));
export type PasswordOauthFlowRefreshUrl = ((string));
export type PasswordOauthFlowScopes = ((
{
[key: string]: PasswordOauthFlowScopesAdditionalProperties,
}
));
export type PasswordOauthFlowAdditionalProperties = ((never));
export type PasswordOauthFlowX = unknown;
export type ClientCredentialsFlowTokenUrl = ((string));
export type ClientCredentialsFlowRefreshUrl = ((string));
export type ClientCredentialsFlowScopes = ((
{
[key: string]: ClientCredentialsFlowScopesAdditionalProperties,
}
));
export type ClientCredentialsFlowAdditionalProperties = ((never));
export type ClientCredentialsFlowX = unknown;
export type AuthorizationCodeOauthFlowAuthorizationUrl = ((string));
export type AuthorizationCodeOauthFlowTokenUrl = ((string));
export type AuthorizationCodeOauthFlowRefreshUrl = ((string));
export type AuthorizationCodeOauthFlowScopes = ((
{
[key: string]: AuthorizationCodeOauthFlowScopesAdditionalProperties,
}
));
export type AuthorizationCodeOauthFlowAdditionalProperties = ((never));
export type AuthorizationCodeOauthFlowX = unknown;
export type LinkOperationId = ((string));
export type OperationRef = ((string));
export type LinkParameters = ((
{
[key: string]: ParametersAdditionalProperties,
}
));
export type LinkPropertiesRequestBody = unknown;
export type LinkDescription = ((string));
export type PropertiesServer = (DefinitionsServer);
export type LinkAdditionalProperties = ((never));
export type LinkX = unknown;
/**
Operation Id and Operation Ref are mutually exclusive
*/
export type LinkNot = ((
{
}
));
export type CallbackAdditionalProperties = (PathItem);
export type CallbackX = unknown;
export type ContentType = ((string));
export type EncodingHeaders = ((
{
[key: string]: EncodingHeadersAdditionalProperties,
}
));
export type EncodingStyle = (("form" |
"spaceDelimited" |
"pipeDelimited" |
"deepObject"));
export type EncodingExplode = ((boolean));
export type EncodingAllowReserved = ((boolean));
export type DefinitionsEncodingAdditionalProperties = ((never));
export type Schema20210928ServersItems = (DefinitionsServer);
export type Schema20210928SecurityItems = (SecurityRequirement);
export type Schema20210928TagsItems = (Tag);
export type VariablesAdditionalProperties = (ServerVariable);
export type ServerVariableEnumItems = ((string));
export type SchemasAZAZ09 = (SchemasAZAZ09OneOf0 |
SchemasAZAZ09OneOf1);
export type ResponsesAZAZ09 = (ResponsesAZAZ09OneOf0 |
ResponsesAZAZ09OneOf1);
export type ParametersAZAZ09 = (ParametersAZAZ09OneOf0 |
ParametersAZAZ09OneOf1);
export type ExamplesAZAZ09 = (ExamplesAZAZ09OneOf0 |
ExamplesAZAZ09OneOf1);
export type RequestBodiesAZAZ09 = (RequestBodiesAZAZ09OneOf0 |
RequestBodiesAZAZ09OneOf1);
export type HeadersAZAZ09 = (HeadersAZAZ09OneOf0 |
HeadersAZAZ09OneOf1);
export type SecuritySchemesAZAZ09 = (SecuritySchemesAZAZ09OneOf0 |
SecuritySchemesAZAZ09OneOf1);
export type LinksAZAZ09 = (LinksAZAZ09OneOf0 |
LinksAZAZ09OneOf1);
export type CallbacksAZAZ09 = (CallbacksAZAZ09OneOf0 |
CallbacksAZAZ09OneOf1);
export type RequiredItems = ((string));
export type SchemaEnumItems = unknown;
export type NotOneOf0 = (DefinitionsSchema);
export type NotOneOf1 = (Reference);
export type AllOfItems = (AllOfItemsOneOf0 |
AllOfItemsOneOf1);
export type OneOfItems = (OneOfItemsOneOf0 |
OneOfItemsOneOf1);
export type AnyOfItems = (AnyOfItemsOneOf0 |
AnyOfItemsOneOf1);
export type PropertiesItemsOneOf0 = (DefinitionsSchema);
export type PropertiesItemsOneOf1 = (Reference);
export type PropertiesPropertiesAdditionalProperties = (PropertiesPropertiesAdditionalPropertiesOneOf0 |
PropertiesPropertiesAdditionalPropertiesOneOf1);
export type SchemaPropertiesAdditionalPropertiesOneOf0 = (DefinitionsSchema);
export type SchemaPropertiesAdditionalPropertiesOneOf1 = (Reference);
export type AdditionalPropertiesOneOf2 = ((boolean));
export type MappingAdditionalProperties = ((string));
export type ResponseHeadersAdditionalProperties = (ResponseHeadersAdditionalPropertiesOneOf0 |
ResponseHeadersAdditionalPropertiesOneOf1);
export type ResponseContentAdditionalProperties = (MediaType);
export type LinksAdditionalProperties = (LinksAdditionalPropertiesOneOf0 |
LinksAdditionalPropertiesOneOf1);
export type MediaTypeSchemaOneOf0 = (DefinitionsSchema);
export type MediaTypeSchemaOneOf1 = (Reference);
export type MediaTypeExamplesAdditionalProperties = (MediaTypeExamplesAdditionalPropertiesOneOf0 |
MediaTypeExamplesAdditionalPropertiesOneOf1);
export type PropertiesEncodingAdditionalProperties = (DefinitionsEncoding);
export type HeaderSchemaOneOf0 = (DefinitionsSchema);
export type HeaderSchemaOneOf1 = (Reference);
export type HeaderContentAdditionalProperties = (MediaType);
export type HeaderExamplesAdditionalProperties = (HeaderExamplesAdditionalPropertiesOneOf0 |
HeaderExamplesAdditionalPropertiesOneOf1);
export type PathItemServersItems = (DefinitionsServer);
export type PathItemParametersItems = (PathItemParametersItemsOneOf0 |
PathItemParametersItemsOneOf1);
export type OperationTagsItems = ((string));
export type OperationParametersItems = (OperationParametersItemsOneOf0 |
OperationParametersItemsOneOf1);
export type RequestBodyOneOf0 = (DefinitionsRequestBody);
export type RequestBodyOneOf1 = (Reference);
export type CallbacksAdditionalProperties = (CallbacksAdditionalPropertiesOneOf0 |
CallbacksAdditionalPropertiesOneOf1);
export type OperationSecurityItems = (SecurityRequirement);
export type OperationServersItems = (DefinitionsServer);
export type DefaultOneOf0 = (Response);
export type DefaultOneOf1 = (Reference);
export type PatternProperties15D2XxOneOf0 = (Response);
export type PatternProperties15D2XxOneOf1 = (Reference);
export type AdditionalPropertiesItems = ((string));
export type OneOf1AllOf0 = (AllOf0Not);
export type OneOf1AllOf1 = (AllOf1Not);
export type OneOf1AllOf2 = (AllOf2Not);
export type AllOf3 = (AllOf3Not);
export type AllOf4 = (AllOf4Not);
export type ParameterSchemaOneOf0 = (DefinitionsSchema);
export type ParameterSchemaOneOf1 = (Reference);
export type ParameterContentAdditionalProperties = (MediaType);
export type ParameterExamplesAdditionalProperties = (ParameterExamplesAdditionalPropertiesOneOf0 |
ParameterExamplesAdditionalPropertiesOneOf1);
export type OneOf0In = (("path"));
export type OneOf0Style = (("matrix" |
"label" |
"simple"));
export type OneOf0Required = ((true));
export type OneOf1In = (("query"));
export type OneOf1Style = (("form" |
"spaceDelimited" |
"pipeDelimited" |
"deepObject"));
export type OneOf2In = (("header"));
export type OneOf2Style = (("simple"));
export type OneOf3In = (("cookie"));
export type OneOf3Style = (("form"));
export type RequestBodyContentAdditionalProperties = (MediaType);
export type OneOf0Scheme = ((string));
export type OneOf1Scheme = (SchemeNot);
export type OneOf1Not = ((
{
}
));
export type ImplicitOauthFlowScopesAdditionalProperties = ((string));
export type PasswordOauthFlowScopesAdditionalProperties = ((string));
export type ClientCredentialsFlowScopesAdditionalProperties = ((string));
export type AuthorizationCodeOauthFlowScopesAdditionalProperties = ((string));
export type ParametersAdditionalProperties = unknown;
export type EncodingHeadersAdditionalProperties = (EncodingHeadersAdditionalPropertiesOneOf0 |
EncodingHeadersAdditionalPropertiesOneOf1);
export type SchemasAZAZ09OneOf0 = (DefinitionsSchema);
export type SchemasAZAZ09OneOf1 = (Reference);
export type ResponsesAZAZ09OneOf0 = (Reference);
export type ResponsesAZAZ09OneOf1 = (Response);
export type ParametersAZAZ09OneOf0 = (Reference);
export type ParametersAZAZ09OneOf1 = (Parameter);
export type ExamplesAZAZ09OneOf0 = (Reference);
export type ExamplesAZAZ09OneOf1 = (DefinitionsExample);
export type RequestBodiesAZAZ09OneOf0 = (Reference);
export type RequestBodiesAZAZ09OneOf1 = (DefinitionsRequestBody);
export type HeadersAZAZ09OneOf0 = (Reference);
export type HeadersAZAZ09OneOf1 = (Header);
export type SecuritySchemesAZAZ09OneOf0 = (Reference);
export type SecuritySchemesAZAZ09OneOf1 = (SecurityScheme);
export type LinksAZAZ09OneOf0 = (Reference);
export type LinksAZAZ09OneOf1 = (Link);
export type CallbacksAZAZ09OneOf0 = (Reference);
export type CallbacksAZAZ09OneOf1 = (Callback);
export type AllOfItemsOneOf0 = (DefinitionsSchema);
export type AllOfItemsOneOf1 = (Reference);
export type OneOfItemsOneOf0 = (DefinitionsSchema);
export type OneOfItemsOneOf1 = (Reference);
export type AnyOfItemsOneOf0 = (DefinitionsSchema);
export type AnyOfItemsOneOf1 = (Reference);
export type PropertiesPropertiesAdditionalPropertiesOneOf0 = (DefinitionsSchema);
export type PropertiesPropertiesAdditionalPropertiesOneOf1 = (Reference);
export type ResponseHeadersAdditionalPropertiesOneOf0 = (Header);
export type ResponseHeadersAdditionalPropertiesOneOf1 = (Reference);
export type LinksAdditionalPropertiesOneOf0 = (Link);
export type LinksAdditionalPropertiesOneOf1 = (Reference);
export type MediaTypeExamplesAdditionalPropertiesOneOf0 = (DefinitionsExample);
export type MediaTypeExamplesAdditionalPropertiesOneOf1 = (Reference);
export type HeaderExamplesAdditionalPropertiesOneOf0 = (DefinitionsExample);
export type HeaderExamplesAdditionalPropertiesOneOf1 = (Reference);
export type PathItemParametersItemsOneOf0 = (Parameter);
export type PathItemParametersItemsOneOf1 = (Reference);
export type OperationParametersItemsOneOf0 = (Parameter);
export type OperationParametersItemsOneOf1 = (Reference);
export type CallbacksAdditionalPropertiesOneOf0 = (Callback);
export type CallbacksAdditionalPropertiesOneOf1 = (Reference);
export type AllOf0Not = ((
{
}
));
export type AllOf1Not = ((
{
}
));
export type AllOf2Not = ((
{
}
));
export type AllOf3Not = ((
{
}
));
export type AllOf4Not = ((
{
}
));
export type ParameterExamplesAdditionalPropertiesOneOf0 = (DefinitionsExample);
export type ParameterExamplesAdditionalPropertiesOneOf1 = (Reference);
export type SchemeNot = ((string));
export type EncodingHeadersAdditionalPropertiesOneOf0 = (Header);
export type EncodingHeadersAdditionalPropertiesOneOf1 = (Reference);
