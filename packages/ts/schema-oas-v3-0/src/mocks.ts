// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.12.8                         -- www.JsonSchema42.org
//
import * as types from "./types.js";
const depthCounters: Record<string, number> = {};
export const unknownValue: any = {};
export const anyValue: any = {};
export const neverValue: any = {};
export interface MockGeneratorOptions {
maximumDepth?: number;
numberPrecision?: number;
stringCharacters?: string;
defaultMinimumValue?: number;
defaultMaximumValue?: number;
defaultMinimumItems?: number;
defaultMaximumItems?: number;
defaultMinimumProperties?: number;
defaultMaximumProperties?: number;
defaultMinimumStringLength?: number;
defaultMaximumStringLength?: number;
}
const defaultMockGeneratorOptions = {
maximumDepth: 1,
numberPrecision: 1000,
stringCharacters: "abcdefghijklmnopqrstuvwxyz",
defaultMinimumValue: -1000,
defaultMaximumValue: 1000,
defaultMinimumItems: 1,
defaultMaximumItems: 5,
defaultMinimumProperties: 1,
defaultMaximumProperties: 5,
defaultMinimumStringLength: 5,
defaultMaximumStringLength: 20,
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator}
*/
export function mockDefinitionsDiscriminator(options: MockGeneratorOptions = {}): types.DefinitionsDiscriminator {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[9] ??= 0;
try {
depthCounters[9]++;
return (
{
["propertyName"]: mockPropertyName(),
["mapping"]:
(depthCounters[127] ?? 0) < configuration.maximumDepth ?
mockMapping() :
undefined,
}
);
}
finally {
depthCounters[9]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityRequirement}
*/
export function mockSecurityRequirement(options: MockGeneratorOptions = {}): types.SecurityRequirement {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[19] ??= 0;
try {
depthCounters[19]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockSecurityRequirementAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[19]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/security}
*/
export function mockPropertiesSecurity(options: MockGeneratorOptions = {}): types.PropertiesSecurity {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[44] ??= 0;
try {
depthCounters[44]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockPropertiesSecurityItems())
]
);
}
finally {
depthCounters[44]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/title}
*/
export function mockInfoTitle(options: MockGeneratorOptions = {}): types.InfoTitle {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[51] ??= 0;
try {
depthCounters[51]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[51]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/description}
*/
export function mockInfoDescription(options: MockGeneratorOptions = {}): types.InfoDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[52] ??= 0;
try {
depthCounters[52]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[52]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Info/properties/version}
*/
export function mockVersion(options: MockGeneratorOptions = {}): types.Version {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[56] ??= 0;
try {
depthCounters[56]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[56]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Contact/properties/name}
*/
export function mockContactName(options: MockGeneratorOptions = {}): types.ContactName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[59] ??= 0;
try {
depthCounters[59]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[59]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/License/properties/name}
*/
export function mockLicenseName(options: MockGeneratorOptions = {}): types.LicenseName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[64] ??= 0;
try {
depthCounters[64]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[64]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/properties/url}
*/
export function mockServerUrl(options: MockGeneratorOptions = {}): types.ServerUrl {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[68] ??= 0;
try {
depthCounters[68]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[68]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Server/properties/description}
*/
export function mockServerDescription(options: MockGeneratorOptions = {}): types.ServerDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[69] ??= 0;
try {
depthCounters[69]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[69]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/enum}
*/
export function mockServerVariableEnum(options: MockGeneratorOptions = {}): types.ServerVariableEnum {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[73] ??= 0;
try {
depthCounters[73]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockServerVariableEnumItems())
]
);
}
finally {
depthCounters[73]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/default}
*/
export function mockServerVariableDefault(options: MockGeneratorOptions = {}): types.ServerVariableDefault {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[74] ??= 0;
try {
depthCounters[74]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[74]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/description}
*/
export function mockServerVariableDescription(options: MockGeneratorOptions = {}): types.ServerVariableDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[75] ??= 0;
try {
depthCounters[75]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[75]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/title}
*/
export function mockSchemaTitle(options: MockGeneratorOptions = {}): types.SchemaTitle {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[89] ??= 0;
try {
depthCounters[89]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[89]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/multipleOf}
*/
export function mockMultipleOf(options: MockGeneratorOptions = {}): types.MultipleOf {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[90] ??= 0;
try {
depthCounters[90]++;
return (
(
(0 * configuration.numberPrecision + 1) +
nextSeed() % (
(configuration.defaultMaximumValue * configuration.numberPrecision) - (0 * configuration.numberPrecision + 1) + 1
) / configuration.numberPrecision
)
);
}
finally {
depthCounters[90]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maximum}
*/
export function mockMaximum(options: MockGeneratorOptions = {}): types.Maximum {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[91] ??= 0;
try {
depthCounters[91]++;
return (
(
configuration.defaultMinimumValue * configuration.numberPrecision +
nextSeed() % (
(configuration.defaultMaximumValue * configuration.numberPrecision) - configuration.defaultMinimumValue * configuration.numberPrecision + 1
) / configuration.numberPrecision
)
);
}
finally {
depthCounters[91]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/exclusiveMaximum}
*/
export function mockExclusiveMaximum(options: MockGeneratorOptions = {}): types.ExclusiveMaximum {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[92] ??= 0;
try {
depthCounters[92]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[92]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minimum}
*/
export function mockMinimum(options: MockGeneratorOptions = {}): types.Minimum {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[93] ??= 0;
try {
depthCounters[93]++;
return (
(
configuration.defaultMinimumValue * configuration.numberPrecision +
nextSeed() % (
(configuration.defaultMaximumValue * configuration.numberPrecision) - configuration.defaultMinimumValue * configuration.numberPrecision + 1
) / configuration.numberPrecision
)
);
}
finally {
depthCounters[93]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/exclusiveMinimum}
*/
export function mockExclusiveMinimum(options: MockGeneratorOptions = {}): types.ExclusiveMinimum {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[94] ??= 0;
try {
depthCounters[94]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[94]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maxLength}
*/
export function mockMaxLength(options: MockGeneratorOptions = {}): types.MaxLength {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[95] ??= 0;
try {
depthCounters[95]++;
return (
(Math.ceil(0 / 1) + nextSeed() % (Math.floor(configuration.defaultMaximumValue / 1) - Math.ceil(0 / 1) + 1)) * 1
);
}
finally {
depthCounters[95]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minLength}
*/
export function mockMinLength(options: MockGeneratorOptions = {}): types.MinLength {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[96] ??= 0;
try {
depthCounters[96]++;
return (
(Math.ceil(0 / 1) + nextSeed() % (Math.floor(configuration.defaultMaximumValue / 1) - Math.ceil(0 / 1) + 1)) * 1
);
}
finally {
depthCounters[96]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maxItems}
*/
export function mockMaxItems(options: MockGeneratorOptions = {}): types.MaxItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[98] ??= 0;
try {
depthCounters[98]++;
return (
(Math.ceil(0 / 1) + nextSeed() % (Math.floor(configuration.defaultMaximumValue / 1) - Math.ceil(0 / 1) + 1)) * 1
);
}
finally {
depthCounters[98]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minItems}
*/
export function mockMinItems(options: MockGeneratorOptions = {}): types.MinItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[99] ??= 0;
try {
depthCounters[99]++;
return (
(Math.ceil(0 / 1) + nextSeed() % (Math.floor(configuration.defaultMaximumValue / 1) - Math.ceil(0 / 1) + 1)) * 1
);
}
finally {
depthCounters[99]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/uniqueItems}
*/
export function mockUniqueItems(options: MockGeneratorOptions = {}): types.UniqueItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[100] ??= 0;
try {
depthCounters[100]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[100]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/maxProperties}
*/
export function mockMaxProperties(options: MockGeneratorOptions = {}): types.MaxProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[101] ??= 0;
try {
depthCounters[101]++;
return (
(Math.ceil(0 / 1) + nextSeed() % (Math.floor(configuration.defaultMaximumValue / 1) - Math.ceil(0 / 1) + 1)) * 1
);
}
finally {
depthCounters[101]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/minProperties}
*/
export function mockMinProperties(options: MockGeneratorOptions = {}): types.MinProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[102] ??= 0;
try {
depthCounters[102]++;
return (
(Math.ceil(0 / 1) + nextSeed() % (Math.floor(configuration.defaultMaximumValue / 1) - Math.ceil(0 / 1) + 1)) * 1
);
}
finally {
depthCounters[102]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/type}
*/
export function mockSchemaType(options: MockGeneratorOptions = {}): types.SchemaType {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[105] ??= 0;
try {
depthCounters[105]++;
return (
(
[
"array", "boolean", "integer", "number", "object", "string"
] as const
)[
nextSeed() % 6
]
);
}
finally {
depthCounters[105]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/description}
*/
export function mockSchemaDescription(options: MockGeneratorOptions = {}): types.SchemaDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[113] ??= 0;
try {
depthCounters[113]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[113]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/format}
*/
export function mockFormat(options: MockGeneratorOptions = {}): types.Format {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[114] ??= 0;
try {
depthCounters[114]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[114]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/nullable}
*/
export function mockNullable(options: MockGeneratorOptions = {}): types.Nullable {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[116] ??= 0;
try {
depthCounters[116]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[116]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/discriminator}
*/
export function mockSchemaDiscriminator(options: MockGeneratorOptions = {}): types.SchemaDiscriminator {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[117] ??= 0;
try {
depthCounters[117]++;
return (mockDefinitionsDiscriminator());
}
finally {
depthCounters[117]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/readOnly}
*/
export function mockReadOnly(options: MockGeneratorOptions = {}): types.ReadOnly {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[118] ??= 0;
try {
depthCounters[118]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[118]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/writeOnly}
*/
export function mockWriteOnly(options: MockGeneratorOptions = {}): types.WriteOnly {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[119] ??= 0;
try {
depthCounters[119]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[119]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/deprecated}
*/
export function mockSchemaDeprecated(options: MockGeneratorOptions = {}): types.SchemaDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[122] ??= 0;
try {
depthCounters[122]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[122]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator/properties/propertyName}
*/
export function mockPropertyName(options: MockGeneratorOptions = {}): types.PropertyName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[126] ??= 0;
try {
depthCounters[126]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[126]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator/properties/mapping}
*/
export function mockMapping(options: MockGeneratorOptions = {}): types.Mapping {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[127] ??= 0;
try {
depthCounters[127]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockMappingAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[127]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/name}
*/
export function mockXmlName(options: MockGeneratorOptions = {}): types.XmlName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[128] ??= 0;
try {
depthCounters[128]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[128]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/prefix}
*/
export function mockPrefix(options: MockGeneratorOptions = {}): types.Prefix {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[130] ??= 0;
try {
depthCounters[130]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[130]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/attribute}
*/
export function mockAttribute(options: MockGeneratorOptions = {}): types.Attribute {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[131] ??= 0;
try {
depthCounters[131]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[131]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/XML/properties/wrapped}
*/
export function mockWrapped(options: MockGeneratorOptions = {}): types.Wrapped {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[132] ??= 0;
try {
depthCounters[132]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[132]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Response/properties/description}
*/
export function mockResponseDescription(options: MockGeneratorOptions = {}): types.ResponseDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[135] ??= 0;
try {
depthCounters[135]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[135]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/properties/summary}
*/
export function mockExampleSummary(options: MockGeneratorOptions = {}): types.ExampleSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[148] ??= 0;
try {
depthCounters[148]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[148]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Example/properties/description}
*/
export function mockExampleDescription(options: MockGeneratorOptions = {}): types.ExampleDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[149] ??= 0;
try {
depthCounters[149]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[149]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/description}
*/
export function mockHeaderDescription(options: MockGeneratorOptions = {}): types.HeaderDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[154] ??= 0;
try {
depthCounters[154]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[154]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/required}
*/
export function mockHeaderRequired(options: MockGeneratorOptions = {}): types.HeaderRequired {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[155] ??= 0;
try {
depthCounters[155]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[155]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/deprecated}
*/
export function mockHeaderDeprecated(options: MockGeneratorOptions = {}): types.HeaderDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[156] ??= 0;
try {
depthCounters[156]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[156]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/allowEmptyValue}
*/
export function mockHeaderAllowEmptyValue(options: MockGeneratorOptions = {}): types.HeaderAllowEmptyValue {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[157] ??= 0;
try {
depthCounters[157]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[157]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/style}
*/
export function mockHeaderStyle(options: MockGeneratorOptions = {}): types.HeaderStyle {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[158] ??= 0;
try {
depthCounters[158]++;
return (
(
[
"simple"
] as const
)[
nextSeed() % 1
]
);
}
finally {
depthCounters[158]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/explode}
*/
export function mockHeaderExplode(options: MockGeneratorOptions = {}): types.HeaderExplode {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[159] ??= 0;
try {
depthCounters[159]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[159]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Header/properties/allowReserved}
*/
export function mockHeaderAllowReserved(options: MockGeneratorOptions = {}): types.HeaderAllowReserved {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[160] ??= 0;
try {
depthCounters[160]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[160]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/$ref}
*/
export function mockPathItemRef(options: MockGeneratorOptions = {}): types.PathItemRef {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[172] ??= 0;
try {
depthCounters[172]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[172]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/summary}
*/
export function mockPathItemSummary(options: MockGeneratorOptions = {}): types.PathItemSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[173] ??= 0;
try {
depthCounters[173]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[173]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PathItem/properties/description}
*/
export function mockPathItemDescription(options: MockGeneratorOptions = {}): types.PathItemDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[174] ??= 0;
try {
depthCounters[174]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[174]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/tags}
*/
export function mockOperationTags(options: MockGeneratorOptions = {}): types.OperationTags {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[180] ??= 0;
try {
depthCounters[180]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockOperationTagsItems())
]
);
}
finally {
depthCounters[180]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/summary}
*/
export function mockOperationSummary(options: MockGeneratorOptions = {}): types.OperationSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[181] ??= 0;
try {
depthCounters[181]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[181]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/description}
*/
export function mockOperationDescription(options: MockGeneratorOptions = {}): types.OperationDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[182] ??= 0;
try {
depthCounters[182]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[182]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/operationId}
*/
export function mockOperationOperationId(options: MockGeneratorOptions = {}): types.OperationOperationId {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[184] ??= 0;
try {
depthCounters[184]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[184]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/deprecated}
*/
export function mockOperationDeprecated(options: MockGeneratorOptions = {}): types.OperationDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[189] ??= 0;
try {
depthCounters[189]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[189]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/security}
*/
export function mockOperationSecurity(options: MockGeneratorOptions = {}): types.OperationSecurity {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[190] ??= 0;
try {
depthCounters[190]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockOperationSecurityItems())
]
);
}
finally {
depthCounters[190]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityRequirement/additionalProperties}
*/
export function mockSecurityRequirementAdditionalProperties(options: MockGeneratorOptions = {}): types.SecurityRequirementAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[198] ??= 0;
try {
depthCounters[198]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockSecurityRequirementItems())
]
);
}
finally {
depthCounters[198]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/properties/name}
*/
export function mockTagName(options: MockGeneratorOptions = {}): types.TagName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[199] ??= 0;
try {
depthCounters[199]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[199]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Tag/properties/description}
*/
export function mockTagDescription(options: MockGeneratorOptions = {}): types.TagDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[200] ??= 0;
try {
depthCounters[200]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[200]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ExternalDocumentation/properties/description}
*/
export function mockExternalDocumentationDescription(options: MockGeneratorOptions = {}): types.ExternalDocumentationDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[204] ??= 0;
try {
depthCounters[204]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[204]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/name}
*/
export function mockParameterName(options: MockGeneratorOptions = {}): types.ParameterName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[212] ??= 0;
try {
depthCounters[212]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[212]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/in}
*/
export function mockParameterIn(options: MockGeneratorOptions = {}): types.ParameterIn {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[213] ??= 0;
try {
depthCounters[213]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[213]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/description}
*/
export function mockParameterDescription(options: MockGeneratorOptions = {}): types.ParameterDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[214] ??= 0;
try {
depthCounters[214]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[214]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/required}
*/
export function mockParameterRequired(options: MockGeneratorOptions = {}): types.ParameterRequired {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[215] ??= 0;
try {
depthCounters[215]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[215]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/deprecated}
*/
export function mockParameterDeprecated(options: MockGeneratorOptions = {}): types.ParameterDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[216] ??= 0;
try {
depthCounters[216]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[216]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/allowEmptyValue}
*/
export function mockParameterAllowEmptyValue(options: MockGeneratorOptions = {}): types.ParameterAllowEmptyValue {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[217] ??= 0;
try {
depthCounters[217]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[217]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/style}
*/
export function mockParameterStyle(options: MockGeneratorOptions = {}): types.ParameterStyle {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[218] ??= 0;
try {
depthCounters[218]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[218]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/explode}
*/
export function mockParameterExplode(options: MockGeneratorOptions = {}): types.ParameterExplode {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[219] ??= 0;
try {
depthCounters[219]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[219]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Parameter/properties/allowReserved}
*/
export function mockParameterAllowReserved(options: MockGeneratorOptions = {}): types.ParameterAllowReserved {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[220] ??= 0;
try {
depthCounters[220]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[220]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/properties/description}
*/
export function mockRequestBodyDescription(options: MockGeneratorOptions = {}): types.RequestBodyDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[234] ??= 0;
try {
depthCounters[234]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[234]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/RequestBody/properties/required}
*/
export function mockRequestBodyRequired(options: MockGeneratorOptions = {}): types.RequestBodyRequired {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[236] ??= 0;
try {
depthCounters[236]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[236]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/type}
*/
export function mockApiKeySecuritySchemeType(options: MockGeneratorOptions = {}): types.ApiKeySecuritySchemeType {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[243] ??= 0;
try {
depthCounters[243]++;
return (
(
[
"apiKey"
] as const
)[
nextSeed() % 1
]
);
}
finally {
depthCounters[243]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/name}
*/
export function mockApiKeySecuritySchemeName(options: MockGeneratorOptions = {}): types.ApiKeySecuritySchemeName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[244] ??= 0;
try {
depthCounters[244]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[244]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/in}
*/
export function mockApiKeySecuritySchemeIn(options: MockGeneratorOptions = {}): types.ApiKeySecuritySchemeIn {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[245] ??= 0;
try {
depthCounters[245]++;
return (
(
[
"header", "query", "cookie"
] as const
)[
nextSeed() % 3
]
);
}
finally {
depthCounters[245]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/APIKeySecurityScheme/properties/description}
*/
export function mockApiKeySecuritySchemeDescription(options: MockGeneratorOptions = {}): types.ApiKeySecuritySchemeDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[246] ??= 0;
try {
depthCounters[246]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[246]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/scheme}
*/
export function mockPropertiesHttpSecuritySchemeScheme(options: MockGeneratorOptions = {}): types.PropertiesHttpSecuritySchemeScheme {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[249] ??= 0;
try {
depthCounters[249]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[249]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/bearerFormat}
*/
export function mockBearerFormat(options: MockGeneratorOptions = {}): types.BearerFormat {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[250] ??= 0;
try {
depthCounters[250]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[250]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/description}
*/
export function mockHttpSecuritySchemeDescription(options: MockGeneratorOptions = {}): types.HttpSecuritySchemeDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[251] ??= 0;
try {
depthCounters[251]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[251]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/HTTPSecurityScheme/properties/type}
*/
export function mockHttpSecuritySchemeType(options: MockGeneratorOptions = {}): types.HttpSecuritySchemeType {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[252] ??= 0;
try {
depthCounters[252]++;
return (
(
[
"http"
] as const
)[
nextSeed() % 1
]
);
}
finally {
depthCounters[252]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/properties/type}
*/
export function mockOauth2SecuritySchemeType(options: MockGeneratorOptions = {}): types.Oauth2SecuritySchemeType {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[257] ??= 0;
try {
depthCounters[257]++;
return (
(
[
"oauth2"
] as const
)[
nextSeed() % 1
]
);
}
finally {
depthCounters[257]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OAuth2SecurityScheme/properties/description}
*/
export function mockOauth2SecuritySchemeDescription(options: MockGeneratorOptions = {}): types.Oauth2SecuritySchemeDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[259] ??= 0;
try {
depthCounters[259]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[259]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/properties/type}
*/
export function mockOpenIdConnectSecuritySchemeType(options: MockGeneratorOptions = {}): types.OpenIdConnectSecuritySchemeType {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[262] ??= 0;
try {
depthCounters[262]++;
return (
(
[
"openIdConnect"
] as const
)[
nextSeed() % 1
]
);
}
finally {
depthCounters[262]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/OpenIdConnectSecurityScheme/properties/description}
*/
export function mockOpenIdConnectSecuritySchemeDescription(options: MockGeneratorOptions = {}): types.OpenIdConnectSecuritySchemeDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[264] ??= 0;
try {
depthCounters[264]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[264]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/properties/scopes}
*/
export function mockImplicitOauthFlowScopes(options: MockGeneratorOptions = {}): types.ImplicitOauthFlowScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[275] ??= 0;
try {
depthCounters[275]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockScopesImplicitOauthFlowAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[275]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/properties/scopes}
*/
export function mockPasswordOauthFlowScopes(options: MockGeneratorOptions = {}): types.PasswordOauthFlowScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[280] ??= 0;
try {
depthCounters[280]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockScopesPasswordOauthFlowAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[280]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/properties/scopes}
*/
export function mockClientCredentialsFlowScopes(options: MockGeneratorOptions = {}): types.ClientCredentialsFlowScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[285] ??= 0;
try {
depthCounters[285]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockScopesClientCredentialsFlowAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[285]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/scopes}
*/
export function mockAuthorizationCodeOauthFlowScopes(options: MockGeneratorOptions = {}): types.AuthorizationCodeOauthFlowScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[291] ??= 0;
try {
depthCounters[291]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockScopesAuthorizationCodeOauthFlowAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[291]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/operationId}
*/
export function mockLinkOperationId(options: MockGeneratorOptions = {}): types.LinkOperationId {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[294] ??= 0;
try {
depthCounters[294]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[294]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Link/properties/description}
*/
export function mockLinkDescription(options: MockGeneratorOptions = {}): types.LinkDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[298] ??= 0;
try {
depthCounters[298]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[298]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/contentType}
*/
export function mockContentType(options: MockGeneratorOptions = {}): types.ContentType {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[305] ??= 0;
try {
depthCounters[305]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[305]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/style}
*/
export function mockEncodingStyle(options: MockGeneratorOptions = {}): types.EncodingStyle {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[307] ??= 0;
try {
depthCounters[307]++;
return (
(
[
"form", "spaceDelimited", "pipeDelimited", "deepObject"
] as const
)[
nextSeed() % 4
]
);
}
finally {
depthCounters[307]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/explode}
*/
export function mockEncodingExplode(options: MockGeneratorOptions = {}): types.EncodingExplode {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[308] ??= 0;
try {
depthCounters[308]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[308]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Encoding/properties/allowReserved}
*/
export function mockEncodingAllowReserved(options: MockGeneratorOptions = {}): types.EncodingAllowReserved {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[309] ??= 0;
try {
depthCounters[309]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[309]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/properties/security/items}
*/
export function mockPropertiesSecurityItems(options: MockGeneratorOptions = {}): types.PropertiesSecurityItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[312] ??= 0;
try {
depthCounters[312]++;
return (mockSecurityRequirement());
}
finally {
depthCounters[312]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ServerVariable/properties/enum/items}
*/
export function mockServerVariableEnumItems(options: MockGeneratorOptions = {}): types.ServerVariableEnumItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[315] ??= 0;
try {
depthCounters[315]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[315]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/required/items}
*/
export function mockRequiredItems(options: MockGeneratorOptions = {}): types.RequiredItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[325] ??= 0;
try {
depthCounters[325]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[325]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Schema/properties/additionalProperties/oneOf/2}
*/
export function mockSchema2(options: MockGeneratorOptions = {}): types.Schema2 {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[337] ??= 0;
try {
depthCounters[337]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[337]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Discriminator/properties/mapping/additionalProperties}
*/
export function mockMappingAdditionalProperties(options: MockGeneratorOptions = {}): types.MappingAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[338] ??= 0;
try {
depthCounters[338]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[338]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/tags/items}
*/
export function mockOperationTagsItems(options: MockGeneratorOptions = {}): types.OperationTagsItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[352] ??= 0;
try {
depthCounters[352]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[352]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/Operation/properties/security/items}
*/
export function mockOperationSecurityItems(options: MockGeneratorOptions = {}): types.OperationSecurityItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[357] ??= 0;
try {
depthCounters[357]++;
return (mockSecurityRequirement());
}
finally {
depthCounters[357]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/SecurityRequirement/additionalProperties/items}
*/
export function mockSecurityRequirementItems(options: MockGeneratorOptions = {}): types.SecurityRequirementItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[363] ??= 0;
try {
depthCounters[363]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[363]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ImplicitOAuthFlow/properties/scopes/additionalProperties}
*/
export function mockScopesImplicitOauthFlowAdditionalProperties(options: MockGeneratorOptions = {}): types.ScopesImplicitOauthFlowAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[386] ??= 0;
try {
depthCounters[386]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[386]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/PasswordOAuthFlow/properties/scopes/additionalProperties}
*/
export function mockScopesPasswordOauthFlowAdditionalProperties(options: MockGeneratorOptions = {}): types.ScopesPasswordOauthFlowAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[387] ??= 0;
try {
depthCounters[387]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[387]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/ClientCredentialsFlow/properties/scopes/additionalProperties}
*/
export function mockScopesClientCredentialsFlowAdditionalProperties(options: MockGeneratorOptions = {}): types.ScopesClientCredentialsFlowAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[388] ??= 0;
try {
depthCounters[388]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[388]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.0/schema/2021-09-28#/definitions/AuthorizationCodeOAuthFlow/properties/scopes/additionalProperties}
*/
export function mockScopesAuthorizationCodeOauthFlowAdditionalProperties(options: MockGeneratorOptions = {}): types.ScopesAuthorizationCodeOauthFlowAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[389] ??= 0;
try {
depthCounters[389]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[389]--;
}
}
let seed = 1;
function nextSeed() {
// https://en.wikipedia.org/wiki/Linear_congruential_generator
// https://statmath.wu.ac.at/software/src/prng-3.0.2/doc/prng.html/Table_LCG.html
const p = Math.pow(2, 31) - 1;
const a = 950706376;
const b = 0;
seed = (a * seed + b) % p;
return seed;
}
