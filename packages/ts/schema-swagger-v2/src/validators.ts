// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.8.21                         -- www.JsonSchema42.org
import * as types from "./types.js";
// http://swagger.io/v2/schema.json#
export function isSchemaJson(value: unknown): value is types.SchemaJson {
if(!_isMapSchemaJson(value)) {
return false;
}
return true;
}
function _isMapSchemaJson(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("swagger" in value)) {
return false;
}
if(!("info" in value)) {
return false;
}
if(!("paths" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "swagger":
if(!isSwagger(propertyValue)) {
return false;
}
continue;
case "info":
if(!isPropertiesInfo(propertyValue)) {
return false;
}
continue;
case "host":
if(!isHost(propertyValue)) {
return false;
}
continue;
case "basePath":
if(!isBasePath(propertyValue)) {
return false;
}
continue;
case "schemes":
if(!isSchemaJsonSchemes(propertyValue)) {
return false;
}
continue;
case "consumes":
if(!isSchemaJsonConsumes(propertyValue)) {
return false;
}
continue;
case "produces":
if(!isSchemaJsonProduces(propertyValue)) {
return false;
}
continue;
case "paths":
if(!isPropertiesPaths(propertyValue)) {
return false;
}
continue;
case "definitions":
if(!isPropertiesDefinitions(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isSchemaJsonParameters(propertyValue)) {
return false;
}
continue;
case "responses":
if(!isSchemaJsonPropertiesResponses(propertyValue)) {
return false;
}
continue;
case "security":
if(!isSchemaJsonPropertiesSecurity(propertyValue)) {
return false;
}
continue;
case "securityDefinitions":
if(!isPropertiesSecurityDefinitions(propertyValue)) {
return false;
}
continue;
case "tags":
if(!isSchemaJsonTags(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isSchemaJsonPropertiesExternalDocs(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isSchemaJsonX(propertyValue)) {
return false;
}
continue;
}
if(!isSchemaJsonAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info
export function isDefinitionsInfo(value: unknown): value is types.DefinitionsInfo {
if(!_isMapDefinitionsInfo(value)) {
return false;
}
return true;
}
function _isMapDefinitionsInfo(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("version" in value)) {
return false;
}
if(!("title" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "title":
if(!isInfoPropertiesTitle(propertyValue)) {
return false;
}
continue;
case "version":
if(!isVersion(propertyValue)) {
return false;
}
continue;
case "description":
if(!isInfoPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "termsOfService":
if(!isTermsOfService(propertyValue)) {
return false;
}
continue;
case "contact":
if(!isPropertiesContact(propertyValue)) {
return false;
}
continue;
case "license":
if(!isPropertiesLicense(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isInfoX(propertyValue)) {
return false;
}
continue;
}
if(!isInfoAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/contact
export function isDefinitionsContact(value: unknown): value is types.DefinitionsContact {
if(!_isMapDefinitionsContact(value)) {
return false;
}
return true;
}
function _isMapDefinitionsContact(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isContactName(propertyValue)) {
return false;
}
continue;
case "url":
if(!isContactUrl(propertyValue)) {
return false;
}
continue;
case "email":
if(!isEmail(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isContactX(propertyValue)) {
return false;
}
continue;
}
if(!isContactAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/license
export function isDefinitionsLicense(value: unknown): value is types.DefinitionsLicense {
if(!_isMapDefinitionsLicense(value)) {
return false;
}
return true;
}
function _isMapDefinitionsLicense(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isLicenseName(propertyValue)) {
return false;
}
continue;
case "url":
if(!isLicenseUrl(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isLicenseX(propertyValue)) {
return false;
}
continue;
}
if(!isLicenseAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/paths
export function isDefinitionsPaths(value: unknown): value is types.DefinitionsPaths {
if(!_isMapDefinitionsPaths(value)) {
return false;
}
return true;
}
function _isMapDefinitionsPaths(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^x-").test(propertyName)) {
if(!isPathsX(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^/").test(propertyName)) {
if(!isPatternProperties(propertyValue)) {
return false;
}
continue;
}
if(!isPathsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/definitions
export function isDefinitionsDefinitions(value: unknown): value is types.DefinitionsDefinitions {
if(!_isMapDefinitionsDefinitions(value)) {
return false;
}
return true;
}
function _isMapDefinitionsDefinitions(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isDefinitionsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parameterDefinitions
export function isParameterDefinitions(value: unknown): value is types.ParameterDefinitions {
if(!_isMapParameterDefinitions(value)) {
return false;
}
return true;
}
function _isMapParameterDefinitions(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isParameterDefinitionsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responseDefinitions
export function isResponseDefinitions(value: unknown): value is types.ResponseDefinitions {
if(!_isMapResponseDefinitions(value)) {
return false;
}
return true;
}
function _isMapResponseDefinitions(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isResponseDefinitionsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/externalDocs
export function isDefinitionsExternalDocs(value: unknown): value is types.DefinitionsExternalDocs {
if(!_isMapDefinitionsExternalDocs(value)) {
return false;
}
return true;
}
function _isMapDefinitionsExternalDocs(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("url" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isExternalDocsPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "url":
if(!isExternalDocsUrl(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isExternalDocsX(propertyValue)) {
return false;
}
continue;
}
if(!isExternalDocsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/examples
export function isDefinitionsExamples(value: unknown): value is types.DefinitionsExamples {
if(!_isMapDefinitionsExamples(value)) {
return false;
}
return true;
}
function _isMapDefinitionsExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isExamplesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/mimeType
export function isMimeType(value: unknown): value is types.MimeType {
if(!_isStringMimeType(value)) {
return false;
}
return true;
}
function _isStringMimeType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation
export function isOperation(value: unknown): value is types.Operation {
if(!_isMapOperation(value)) {
return false;
}
return true;
}
function _isMapOperation(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("responses" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tags":
if(!isOperationTags(propertyValue)) {
return false;
}
continue;
case "summary":
if(!isSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOperationPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isOperationPropertiesExternalDocs(propertyValue)) {
return false;
}
continue;
case "operationId":
if(!isOperationId(propertyValue)) {
return false;
}
continue;
case "produces":
if(!isOperationProduces(propertyValue)) {
return false;
}
continue;
case "consumes":
if(!isOperationConsumes(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isOperationParameters(propertyValue)) {
return false;
}
continue;
case "responses":
if(!isOperationPropertiesResponses(propertyValue)) {
return false;
}
continue;
case "schemes":
if(!isOperationSchemes(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isDeprecated(propertyValue)) {
return false;
}
continue;
case "security":
if(!isOperationPropertiesSecurity(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOperationX(propertyValue)) {
return false;
}
continue;
}
if(!isOperationAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem
export function isPathItem(value: unknown): value is types.PathItem {
if(!_isMapPathItem(value)) {
return false;
}
return true;
}
function _isMapPathItem(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "$ref":
if(!isPathItemRef(propertyValue)) {
return false;
}
continue;
case "get":
if(!isGet(propertyValue)) {
return false;
}
continue;
case "put":
if(!isPut(propertyValue)) {
return false;
}
continue;
case "post":
if(!isPost(propertyValue)) {
return false;
}
continue;
case "delete":
if(!isDelete(propertyValue)) {
return false;
}
continue;
case "options":
if(!isOptions(propertyValue)) {
return false;
}
continue;
case "head":
if(!isHead(propertyValue)) {
return false;
}
continue;
case "patch":
if(!isPatch(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isPathItemParameters(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isPathItemX(propertyValue)) {
return false;
}
continue;
}
if(!isPathItemAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responses
export function isDefinitionsResponses(value: unknown): value is types.DefinitionsResponses {
if(!_isMapDefinitionsResponses(value)) {
return false;
}
if(!_isNotDefinitionsResponses(value)) {
return false;
}
return true;
}
function _isMapDefinitionsResponses(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^([0-9]{3})$|^(default)$").test(propertyName)) {
if(!isPatternProperties093Default(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isResponsesX(propertyValue)) {
return false;
}
continue;
}
if(!isResponsesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
if(propertyCount < 1) {
return false;
}
return true;
}
function _isNotDefinitionsResponses(value: unknown): value is unknown {
if(isNot(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responseValue
export function isResponseValue(value: unknown): value is types.ResponseValue {
if(!_isOneOfResponseValue(value)) {
return false;
}
return true;
}
function _isOneOfResponseValue(value: unknown): value is unknown {
let validCounter = 0;
if(isResponseValueOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isResponseValueOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response
export function isResponse(value: unknown): value is types.Response {
if(!_isMapResponse(value)) {
return false;
}
return true;
}
function _isMapResponse(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("description" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isResponsePropertiesDescription(propertyValue)) {
return false;
}
continue;
case "schema":
if(!isResponsePropertiesSchema(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isPropertiesHeaders(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isPropertiesExamples(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isResponseX(propertyValue)) {
return false;
}
continue;
}
if(!isResponseAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headers
export function isDefinitionsHeaders(value: unknown): value is types.DefinitionsHeaders {
if(!_isMapDefinitionsHeaders(value)) {
return false;
}
return true;
}
function _isMapDefinitionsHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isHeadersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header
export function isHeader(value: unknown): value is types.Header {
if(!_isMapHeader(value)) {
return false;
}
return true;
}
function _isMapHeader(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isHeaderType(propertyValue)) {
return false;
}
continue;
case "format":
if(!isHeaderFormat(propertyValue)) {
return false;
}
continue;
case "items":
if(!isHeaderPropertiesItems(propertyValue)) {
return false;
}
continue;
case "collectionFormat":
if(!isHeaderPropertiesCollectionFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isHeaderPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isHeaderPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isHeaderPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isHeaderPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isHeaderPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isHeaderPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isHeaderPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isHeaderPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isHeaderPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isHeaderPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isHeaderPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isHeaderPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isHeaderPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
case "description":
if(!isHeaderPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isHeaderX(propertyValue)) {
return false;
}
continue;
}
if(!isHeaderAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/vendorExtension
export function isVendorExtension(value: unknown): value is types.VendorExtension {
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter
export function isBodyParameter(value: unknown): value is types.BodyParameter {
if(!_isMapBodyParameter(value)) {
return false;
}
return true;
}
function _isMapBodyParameter(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
if(!("schema" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isBodyParameterPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "name":
if(!isBodyParameterName(propertyValue)) {
return false;
}
continue;
case "in":
if(!isBodyParameterIn(propertyValue)) {
return false;
}
continue;
case "required":
if(!isBodyParameterRequired(propertyValue)) {
return false;
}
continue;
case "schema":
if(!isBodyParameterPropertiesSchema(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isBodyParameterX(propertyValue)) {
return false;
}
continue;
}
if(!isBodyParameterAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema
export function isHeaderParameterSubSchema(value: unknown): value is types.HeaderParameterSubSchema {
if(!_isMapHeaderParameterSubSchema(value)) {
return false;
}
return true;
}
function _isMapHeaderParameterSubSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "required":
if(!isHeaderParameterSubSchemaRequired(propertyValue)) {
return false;
}
continue;
case "in":
if(!isHeaderParameterSubSchemaIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isHeaderParameterSubSchemaPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "name":
if(!isHeaderParameterSubSchemaName(propertyValue)) {
return false;
}
continue;
case "type":
if(!isHeaderParameterSubSchemaType(propertyValue)) {
return false;
}
continue;
case "format":
if(!isHeaderParameterSubSchemaFormat(propertyValue)) {
return false;
}
continue;
case "items":
if(!isHeaderParameterSubSchemaPropertiesItems(propertyValue)) {
return false;
}
continue;
case "collectionFormat":
if(!isHeaderParameterSubSchemaPropertiesCollectionFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isHeaderParameterSubSchemaPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isHeaderParameterSubSchemaPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isHeaderParameterSubSchemaPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isHeaderParameterSubSchemaPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isHeaderParameterSubSchemaPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isHeaderParameterSubSchemaPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isHeaderParameterSubSchemaPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isHeaderParameterSubSchemaPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isHeaderParameterSubSchemaPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isHeaderParameterSubSchemaPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isHeaderParameterSubSchemaPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isHeaderParameterSubSchemaPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isHeaderParameterSubSchemaPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isHeaderParameterSubSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isHeaderParameterSubSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema
export function isQueryParameterSubSchema(value: unknown): value is types.QueryParameterSubSchema {
if(!_isMapQueryParameterSubSchema(value)) {
return false;
}
return true;
}
function _isMapQueryParameterSubSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "required":
if(!isQueryParameterSubSchemaRequired(propertyValue)) {
return false;
}
continue;
case "in":
if(!isQueryParameterSubSchemaIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isQueryParameterSubSchemaPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "name":
if(!isQueryParameterSubSchemaName(propertyValue)) {
return false;
}
continue;
case "allowEmptyValue":
if(!isQueryParameterSubSchemaAllowEmptyValue(propertyValue)) {
return false;
}
continue;
case "type":
if(!isQueryParameterSubSchemaType(propertyValue)) {
return false;
}
continue;
case "format":
if(!isQueryParameterSubSchemaFormat(propertyValue)) {
return false;
}
continue;
case "items":
if(!isQueryParameterSubSchemaPropertiesItems(propertyValue)) {
return false;
}
continue;
case "collectionFormat":
if(!isQueryParameterSubSchemaPropertiesCollectionFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isQueryParameterSubSchemaPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isQueryParameterSubSchemaPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isQueryParameterSubSchemaPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isQueryParameterSubSchemaPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isQueryParameterSubSchemaPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isQueryParameterSubSchemaPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isQueryParameterSubSchemaPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isQueryParameterSubSchemaPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isQueryParameterSubSchemaPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isQueryParameterSubSchemaPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isQueryParameterSubSchemaPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isQueryParameterSubSchemaPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isQueryParameterSubSchemaPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isQueryParameterSubSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isQueryParameterSubSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema
export function isFormDataParameterSubSchema(value: unknown): value is types.FormDataParameterSubSchema {
if(!_isMapFormDataParameterSubSchema(value)) {
return false;
}
return true;
}
function _isMapFormDataParameterSubSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "required":
if(!isFormDataParameterSubSchemaRequired(propertyValue)) {
return false;
}
continue;
case "in":
if(!isFormDataParameterSubSchemaIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isFormDataParameterSubSchemaPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "name":
if(!isFormDataParameterSubSchemaName(propertyValue)) {
return false;
}
continue;
case "allowEmptyValue":
if(!isFormDataParameterSubSchemaAllowEmptyValue(propertyValue)) {
return false;
}
continue;
case "type":
if(!isFormDataParameterSubSchemaType(propertyValue)) {
return false;
}
continue;
case "format":
if(!isFormDataParameterSubSchemaFormat(propertyValue)) {
return false;
}
continue;
case "items":
if(!isFormDataParameterSubSchemaPropertiesItems(propertyValue)) {
return false;
}
continue;
case "collectionFormat":
if(!isFormDataParameterSubSchemaPropertiesCollectionFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isFormDataParameterSubSchemaPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isFormDataParameterSubSchemaPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isFormDataParameterSubSchemaPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isFormDataParameterSubSchemaPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isFormDataParameterSubSchemaPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isFormDataParameterSubSchemaPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isFormDataParameterSubSchemaPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isFormDataParameterSubSchemaPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isFormDataParameterSubSchemaPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isFormDataParameterSubSchemaPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isFormDataParameterSubSchemaPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isFormDataParameterSubSchemaPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isFormDataParameterSubSchemaPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isFormDataParameterSubSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isFormDataParameterSubSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema
export function isPathParameterSubSchema(value: unknown): value is types.PathParameterSubSchema {
if(!_isMapPathParameterSubSchema(value)) {
return false;
}
return true;
}
function _isMapPathParameterSubSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("required" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "required":
if(!isPathParameterSubSchemaRequired(propertyValue)) {
return false;
}
continue;
case "in":
if(!isPathParameterSubSchemaIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isPathParameterSubSchemaPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "name":
if(!isPathParameterSubSchemaName(propertyValue)) {
return false;
}
continue;
case "type":
if(!isPathParameterSubSchemaType(propertyValue)) {
return false;
}
continue;
case "format":
if(!isPathParameterSubSchemaFormat(propertyValue)) {
return false;
}
continue;
case "items":
if(!isPathParameterSubSchemaPropertiesItems(propertyValue)) {
return false;
}
continue;
case "collectionFormat":
if(!isPathParameterSubSchemaPropertiesCollectionFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isPathParameterSubSchemaPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isPathParameterSubSchemaPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isPathParameterSubSchemaPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isPathParameterSubSchemaPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isPathParameterSubSchemaPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isPathParameterSubSchemaPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isPathParameterSubSchemaPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isPathParameterSubSchemaPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isPathParameterSubSchemaPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isPathParameterSubSchemaPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isPathParameterSubSchemaPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isPathParameterSubSchemaPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isPathParameterSubSchemaPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isPathParameterSubSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isPathParameterSubSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter
export function isNonBodyParameter(value: unknown): value is types.NonBodyParameter {
if(!_isMapNonBodyParameter(value)) {
return false;
}
if(!_isOneOfNonBodyParameter(value)) {
return false;
}
return true;
}
function _isMapNonBodyParameter(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
function _isOneOfNonBodyParameter(value: unknown): value is unknown {
let validCounter = 0;
if(isNonBodyParameterOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isNonBodyParameterOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isNonBodyParameterOneOf2(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isNonBodyParameterOneOf3(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parameter
export function isParameter(value: unknown): value is types.Parameter {
if(!_isOneOfParameter(value)) {
return false;
}
return true;
}
function _isOneOfParameter(value: unknown): value is unknown {
let validCounter = 0;
if(isParameterOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema
export function isDefinitionsSchema(value: unknown): value is types.DefinitionsSchema {
if(!_isMapDefinitionsSchema(value)) {
return false;
}
return true;
}
function _isMapDefinitionsSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "$ref":
if(!isSchemaRef(propertyValue)) {
return false;
}
continue;
case "format":
if(!isSchemaFormat(propertyValue)) {
return false;
}
continue;
case "title":
if(!isDefinitionsSchemaPropertiesTitle(propertyValue)) {
return false;
}
continue;
case "description":
if(!isDefinitionsSchemaPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "default":
if(!isDefinitionsSchemaPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isDefinitionsSchemaPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isDefinitionsSchemaPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isDefinitionsSchemaPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isDefinitionsSchemaPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isDefinitionsSchemaPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isSchemaPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isSchemaPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isDefinitionsSchemaPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isSchemaPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isSchemaPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isDefinitionsSchemaPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "maxProperties":
if(!isMaxProperties(propertyValue)) {
return false;
}
continue;
case "minProperties":
if(!isMinProperties(propertyValue)) {
return false;
}
continue;
case "required":
if(!isSchemaRequired(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isDefinitionsSchemaPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "additionalProperties":
if(!isSchemaPropertiesAdditionalProperties(propertyValue)) {
return false;
}
continue;
case "type":
if(!isDefinitionsSchemaType(propertyValue)) {
return false;
}
continue;
case "items":
if(!isSchemaPropertiesItems(propertyValue)) {
return false;
}
continue;
case "allOf":
if(!isAllOf(propertyValue)) {
return false;
}
continue;
case "properties":
if(!isProperties(propertyValue)) {
return false;
}
continue;
case "discriminator":
if(!isDiscriminator(propertyValue)) {
return false;
}
continue;
case "readOnly":
if(!isSchemaReadOnly(propertyValue)) {
return false;
}
continue;
case "xml":
if(!isPropertiesXml(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isSchemaPropertiesExternalDocs(propertyValue)) {
return false;
}
continue;
case "example":
if(!isSchemaExample(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema
export function isFileSchema(value: unknown): value is types.FileSchema {
if(!_isMapFileSchema(value)) {
return false;
}
return true;
}
function _isMapFileSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "format":
if(!isFileSchemaFormat(propertyValue)) {
return false;
}
continue;
case "title":
if(!isFileSchemaPropertiesTitle(propertyValue)) {
return false;
}
continue;
case "description":
if(!isFileSchemaPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "default":
if(!isFileSchemaPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "required":
if(!isFileSchemaRequired(propertyValue)) {
return false;
}
continue;
case "type":
if(!isFileSchemaType(propertyValue)) {
return false;
}
continue;
case "readOnly":
if(!isFileSchemaReadOnly(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isFileSchemaPropertiesExternalDocs(propertyValue)) {
return false;
}
continue;
case "example":
if(!isFileSchemaExample(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isFileSchemaX(propertyValue)) {
return false;
}
continue;
}
if(!isFileSchemaAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems
export function isPrimitivesItems(value: unknown): value is types.PrimitivesItems {
if(!_isMapPrimitivesItems(value)) {
return false;
}
return true;
}
function _isMapPrimitivesItems(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isPrimitivesItemsType(propertyValue)) {
return false;
}
continue;
case "format":
if(!isPrimitivesItemsFormat(propertyValue)) {
return false;
}
continue;
case "items":
if(!isPrimitivesItemsPropertiesItems(propertyValue)) {
return false;
}
continue;
case "collectionFormat":
if(!isPrimitivesItemsPropertiesCollectionFormat(propertyValue)) {
return false;
}
continue;
case "default":
if(!isPrimitivesItemsPropertiesDefault(propertyValue)) {
return false;
}
continue;
case "maximum":
if(!isPrimitivesItemsPropertiesMaximum(propertyValue)) {
return false;
}
continue;
case "exclusiveMaximum":
if(!isPrimitivesItemsPropertiesExclusiveMaximum(propertyValue)) {
return false;
}
continue;
case "minimum":
if(!isPrimitivesItemsPropertiesMinimum(propertyValue)) {
return false;
}
continue;
case "exclusiveMinimum":
if(!isPrimitivesItemsPropertiesExclusiveMinimum(propertyValue)) {
return false;
}
continue;
case "maxLength":
if(!isPrimitivesItemsPropertiesMaxLength(propertyValue)) {
return false;
}
continue;
case "minLength":
if(!isPrimitivesItemsPropertiesMinLength(propertyValue)) {
return false;
}
continue;
case "pattern":
if(!isPrimitivesItemsPropertiesPattern(propertyValue)) {
return false;
}
continue;
case "maxItems":
if(!isPrimitivesItemsPropertiesMaxItems(propertyValue)) {
return false;
}
continue;
case "minItems":
if(!isPrimitivesItemsPropertiesMinItems(propertyValue)) {
return false;
}
continue;
case "uniqueItems":
if(!isPrimitivesItemsPropertiesUniqueItems(propertyValue)) {
return false;
}
continue;
case "enum":
if(!isPrimitivesItemsPropertiesEnum(propertyValue)) {
return false;
}
continue;
case "multipleOf":
if(!isPrimitivesItemsPropertiesMultipleOf(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isPrimitivesItemsX(propertyValue)) {
return false;
}
continue;
}
if(!isPrimitivesItemsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/security
export function isDefinitionsSecurity(value: unknown): value is types.DefinitionsSecurity {
if(!_isArrayDefinitionsSecurity(value)) {
return false;
}
return true;
}
function _isArrayDefinitionsSecurity(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isSecurityItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityRequirement
export function isSecurityRequirement(value: unknown): value is types.SecurityRequirement {
if(!_isMapSecurityRequirement(value)) {
return false;
}
return true;
}
function _isMapSecurityRequirement(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isSecurityRequirementAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml
export function isDefinitionsXml(value: unknown): value is types.DefinitionsXml {
if(!_isMapDefinitionsXml(value)) {
return false;
}
return true;
}
function _isMapDefinitionsXml(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isXmlName(propertyValue)) {
return false;
}
continue;
case "namespace":
if(!isNamespace(propertyValue)) {
return false;
}
continue;
case "prefix":
if(!isPrefix(propertyValue)) {
return false;
}
continue;
case "attribute":
if(!isAttribute(propertyValue)) {
return false;
}
continue;
case "wrapped":
if(!isWrapped(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isXmlX(propertyValue)) {
return false;
}
continue;
}
if(!isXmlAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/tag
export function isTag(value: unknown): value is types.Tag {
if(!_isMapTag(value)) {
return false;
}
return true;
}
function _isMapTag(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isTagName(propertyValue)) {
return false;
}
continue;
case "description":
if(!isTagPropertiesDescription(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isTagPropertiesExternalDocs(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isTagX(propertyValue)) {
return false;
}
continue;
}
if(!isTagAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions
export function isDefinitionsSecurityDefinitions(value: unknown): value is types.DefinitionsSecurityDefinitions {
if(!_isMapDefinitionsSecurityDefinitions(value)) {
return false;
}
return true;
}
function _isMapDefinitionsSecurityDefinitions(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isSecurityDefinitionsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity
export function isBasicAuthenticationSecurity(value: unknown): value is types.BasicAuthenticationSecurity {
if(!_isMapBasicAuthenticationSecurity(value)) {
return false;
}
return true;
}
function _isMapBasicAuthenticationSecurity(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isBasicAuthenticationSecurityType(propertyValue)) {
return false;
}
continue;
case "description":
if(!isBasicAuthenticationSecurityPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isBasicAuthenticationSecurityX(propertyValue)) {
return false;
}
continue;
}
if(!isBasicAuthenticationSecurityAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity
export function isApiKeySecurity(value: unknown): value is types.ApiKeySecurity {
if(!_isMapApiKeySecurity(value)) {
return false;
}
return true;
}
function _isMapApiKeySecurity(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isApiKeySecurityType(propertyValue)) {
return false;
}
continue;
case "name":
if(!isApiKeySecurityName(propertyValue)) {
return false;
}
continue;
case "in":
if(!isApiKeySecurityIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isApiKeySecurityPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isApiKeySecurityX(propertyValue)) {
return false;
}
continue;
}
if(!isApiKeySecurityAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity
export function isOauth2ImplicitSecurity(value: unknown): value is types.Oauth2ImplicitSecurity {
if(!_isMapOauth2ImplicitSecurity(value)) {
return false;
}
return true;
}
function _isMapOauth2ImplicitSecurity(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("flow" in value)) {
return false;
}
if(!("authorizationUrl" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isOauth2ImplicitSecurityType(propertyValue)) {
return false;
}
continue;
case "flow":
if(!isOauth2ImplicitSecurityFlow(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isOauth2ImplicitSecurityScopes(propertyValue)) {
return false;
}
continue;
case "authorizationUrl":
if(!isOauth2ImplicitSecurityAuthorizationUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOauth2ImplicitSecurityPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOauth2ImplicitSecurityX(propertyValue)) {
return false;
}
continue;
}
if(!isOauth2ImplicitSecurityAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity
export function isOauth2PasswordSecurity(value: unknown): value is types.Oauth2PasswordSecurity {
if(!_isMapOauth2PasswordSecurity(value)) {
return false;
}
return true;
}
function _isMapOauth2PasswordSecurity(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("flow" in value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isOauth2PasswordSecurityType(propertyValue)) {
return false;
}
continue;
case "flow":
if(!isOauth2PasswordSecurityFlow(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isOauth2PasswordSecurityScopes(propertyValue)) {
return false;
}
continue;
case "tokenUrl":
if(!isOauth2PasswordSecurityTokenUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOauth2PasswordSecurityPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOauth2PasswordSecurityX(propertyValue)) {
return false;
}
continue;
}
if(!isOauth2PasswordSecurityAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity
export function isOauth2ApplicationSecurity(value: unknown): value is types.Oauth2ApplicationSecurity {
if(!_isMapOauth2ApplicationSecurity(value)) {
return false;
}
return true;
}
function _isMapOauth2ApplicationSecurity(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("flow" in value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isOauth2ApplicationSecurityType(propertyValue)) {
return false;
}
continue;
case "flow":
if(!isOauth2ApplicationSecurityFlow(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isOauth2ApplicationSecurityScopes(propertyValue)) {
return false;
}
continue;
case "tokenUrl":
if(!isOauth2ApplicationSecurityTokenUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOauth2ApplicationSecurityPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOauth2ApplicationSecurityX(propertyValue)) {
return false;
}
continue;
}
if(!isOauth2ApplicationSecurityAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity
export function isOauth2AccessCodeSecurity(value: unknown): value is types.Oauth2AccessCodeSecurity {
if(!_isMapOauth2AccessCodeSecurity(value)) {
return false;
}
return true;
}
function _isMapOauth2AccessCodeSecurity(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("flow" in value)) {
return false;
}
if(!("authorizationUrl" in value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isOauth2AccessCodeSecurityType(propertyValue)) {
return false;
}
continue;
case "flow":
if(!isOauth2AccessCodeSecurityFlow(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isOauth2AccessCodeSecurityScopes(propertyValue)) {
return false;
}
continue;
case "authorizationUrl":
if(!isOauth2AccessCodeSecurityAuthorizationUrl(propertyValue)) {
return false;
}
continue;
case "tokenUrl":
if(!isOauth2AccessCodeSecurityTokenUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOauth2AccessCodeSecurityPropertiesDescription(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^x-").test(propertyName)) {
if(!isOauth2AccessCodeSecurityX(propertyValue)) {
return false;
}
continue;
}
if(!isOauth2AccessCodeSecurityAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2Scopes
export function isOauth2Scopes(value: unknown): value is types.Oauth2Scopes {
if(!_isMapOauth2Scopes(value)) {
return false;
}
return true;
}
function _isMapOauth2Scopes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isOauth2ScopesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/mediaTypeList
export function isMediaTypeList(value: unknown): value is types.MediaTypeList {
if(!_isArrayMediaTypeList(value)) {
return false;
}
return true;
}
function _isArrayMediaTypeList(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isMediaTypeListItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parametersList
export function isParametersList(value: unknown): value is types.ParametersList {
if(!_isArrayParametersList(value)) {
return false;
}
return true;
}
function _isArrayParametersList(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isParametersListItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schemesList
export function isSchemesList(value: unknown): value is types.SchemesList {
if(!_isArraySchemesList(value)) {
return false;
}
return true;
}
function _isArraySchemesList(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isSchemesListItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/collectionFormat
export function isDefinitionsCollectionFormat(value: unknown): value is types.DefinitionsCollectionFormat {
if(!_isStringDefinitionsCollectionFormat(value)) {
return false;
}
return true;
}
function _isStringDefinitionsCollectionFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "csv" && value !== "ssv" && value !== "tsv" && value !== "pipes") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/collectionFormatWithMulti
export function isCollectionFormatWithMulti(value: unknown): value is types.CollectionFormatWithMulti {
if(!_isStringCollectionFormatWithMulti(value)) {
return false;
}
return true;
}
function _isStringCollectionFormatWithMulti(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "csv" && value !== "ssv" && value !== "tsv" && value !== "pipes" && value !== "multi") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/title
export function isDefinitionsTitle(value: unknown): value is types.DefinitionsTitle {
if(!_isReferenceDefinitionsTitle(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsTitle(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesTitle(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/description
export function isDefinitionsDescription(value: unknown): value is types.DefinitionsDescription {
if(!_isReferenceDefinitionsDescription(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsDescription(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesDescription(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/default
export function isDefinitionsDefault(value: unknown): value is types.DefinitionsDefault {
if(!_isReferenceDefinitionsDefault(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsDefault(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/multipleOf
export function isDefinitionsMultipleOf(value: unknown): value is types.DefinitionsMultipleOf {
if(!_isReferenceDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMultipleOf(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/maximum
export function isDefinitionsMaximum(value: unknown): value is types.DefinitionsMaximum {
if(!_isReferenceDefinitionsMaximum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMaximum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/exclusiveMaximum
export function isDefinitionsExclusiveMaximum(value: unknown): value is types.DefinitionsExclusiveMaximum {
if(!_isReferenceDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsExclusiveMaximum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/minimum
export function isDefinitionsMinimum(value: unknown): value is types.DefinitionsMinimum {
if(!_isReferenceDefinitionsMinimum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMinimum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/exclusiveMinimum
export function isDefinitionsExclusiveMinimum(value: unknown): value is types.DefinitionsExclusiveMinimum {
if(!_isReferenceDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsExclusiveMinimum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/maxLength
export function isDefinitionsMaxLength(value: unknown): value is types.DefinitionsMaxLength {
if(!_isReferenceDefinitionsMaxLength(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMaxLength(value: unknown): value is unknown {
if(!isPositiveInteger(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/minLength
export function isDefinitionsMinLength(value: unknown): value is types.DefinitionsMinLength {
if(!_isReferenceDefinitionsMinLength(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMinLength(value: unknown): value is unknown {
if(!isPositiveIntegerDefault0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pattern
export function isDefinitionsPattern(value: unknown): value is types.DefinitionsPattern {
if(!_isReferenceDefinitionsPattern(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsPattern(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/maxItems
export function isDefinitionsMaxItems(value: unknown): value is types.DefinitionsMaxItems {
if(!_isReferenceDefinitionsMaxItems(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMaxItems(value: unknown): value is unknown {
if(!isPositiveInteger(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/minItems
export function isDefinitionsMinItems(value: unknown): value is types.DefinitionsMinItems {
if(!_isReferenceDefinitionsMinItems(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsMinItems(value: unknown): value is unknown {
if(!isPositiveIntegerDefault0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/uniqueItems
export function isDefinitionsUniqueItems(value: unknown): value is types.DefinitionsUniqueItems {
if(!_isReferenceDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsUniqueItems(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/enum
export function isDefinitionsEnum(value: unknown): value is types.DefinitionsEnum {
if(!_isReferenceDefinitionsEnum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsEnum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/jsonReference
export function isJsonReference(value: unknown): value is types.JsonReference {
if(!_isMapJsonReference(value)) {
return false;
}
return true;
}
function _isMapJsonReference(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "$ref":
if(!isJsonReferenceRef(propertyValue)) {
return false;
}
continue;
}
if(!isJsonReferenceAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/swagger
export function isSwagger(value: unknown): value is types.Swagger {
if(!_isStringSwagger(value)) {
return false;
}
return true;
}
function _isStringSwagger(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "2.0") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/info
export function isPropertiesInfo(value: unknown): value is types.PropertiesInfo {
if(!_isReferencePropertiesInfo(value)) {
return false;
}
return true;
}
function _isReferencePropertiesInfo(value: unknown): value is unknown {
if(!isDefinitionsInfo(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/host
export function isHost(value: unknown): value is types.Host {
if(!_isStringHost(value)) {
return false;
}
return true;
}
function _isStringHost(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^[^{}/ :\\\\]+(?::\\d+)?$").test(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/basePath
export function isBasePath(value: unknown): value is types.BasePath {
if(!_isStringBasePath(value)) {
return false;
}
return true;
}
function _isStringBasePath(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^/").test(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/schemes
export function isSchemaJsonSchemes(value: unknown): value is types.SchemaJsonSchemes {
if(!_isReferenceSchemaJsonSchemes(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonSchemes(value: unknown): value is unknown {
if(!isSchemesList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/consumes
export function isSchemaJsonConsumes(value: unknown): value is types.SchemaJsonConsumes {
if(!_isAllOfSchemaJsonConsumes(value)) {
return false;
}
return true;
}
function _isAllOfSchemaJsonConsumes(value: unknown): value is unknown {
if(!isSchemaJsonConsumesAllOf0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/produces
export function isSchemaJsonProduces(value: unknown): value is types.SchemaJsonProduces {
if(!_isAllOfSchemaJsonProduces(value)) {
return false;
}
return true;
}
function _isAllOfSchemaJsonProduces(value: unknown): value is unknown {
if(!isSchemaJsonProducesAllOf0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/paths
export function isPropertiesPaths(value: unknown): value is types.PropertiesPaths {
if(!_isReferencePropertiesPaths(value)) {
return false;
}
return true;
}
function _isReferencePropertiesPaths(value: unknown): value is unknown {
if(!isDefinitionsPaths(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/definitions
export function isPropertiesDefinitions(value: unknown): value is types.PropertiesDefinitions {
if(!_isReferencePropertiesDefinitions(value)) {
return false;
}
return true;
}
function _isReferencePropertiesDefinitions(value: unknown): value is unknown {
if(!isDefinitionsDefinitions(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/parameters
export function isSchemaJsonParameters(value: unknown): value is types.SchemaJsonParameters {
if(!_isReferenceSchemaJsonParameters(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonParameters(value: unknown): value is unknown {
if(!isParameterDefinitions(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/responses
export function isSchemaJsonPropertiesResponses(value: unknown): value is types.SchemaJsonPropertiesResponses {
if(!_isReferenceSchemaJsonPropertiesResponses(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonPropertiesResponses(value: unknown): value is unknown {
if(!isResponseDefinitions(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/security
export function isSchemaJsonPropertiesSecurity(value: unknown): value is types.SchemaJsonPropertiesSecurity {
if(!_isReferenceSchemaJsonPropertiesSecurity(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonPropertiesSecurity(value: unknown): value is unknown {
if(!isDefinitionsSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/securityDefinitions
export function isPropertiesSecurityDefinitions(value: unknown): value is types.PropertiesSecurityDefinitions {
if(!_isReferencePropertiesSecurityDefinitions(value)) {
return false;
}
return true;
}
function _isReferencePropertiesSecurityDefinitions(value: unknown): value is unknown {
if(!isDefinitionsSecurityDefinitions(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/tags
export function isSchemaJsonTags(value: unknown): value is types.SchemaJsonTags {
if(!_isArraySchemaJsonTags(value)) {
return false;
}
return true;
}
function _isArraySchemaJsonTags(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isSchemaJsonTagsItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/externalDocs
export function isSchemaJsonPropertiesExternalDocs(value: unknown): value is types.SchemaJsonPropertiesExternalDocs {
if(!_isReferenceSchemaJsonPropertiesExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonPropertiesExternalDocs(value: unknown): value is unknown {
if(!isDefinitionsExternalDocs(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/additionalProperties
export function isSchemaJsonAdditionalProperties(value: unknown): value is types.SchemaJsonAdditionalProperties {
if(!_isNeverSchemaJsonAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverSchemaJsonAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/patternProperties/^x-
export function isSchemaJsonX(value: unknown): value is types.SchemaJsonX {
if(!_isReferenceSchemaJsonX(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/properties/title
export function isInfoPropertiesTitle(value: unknown): value is types.InfoPropertiesTitle {
if(!_isStringInfoPropertiesTitle(value)) {
return false;
}
return true;
}
function _isStringInfoPropertiesTitle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/properties/version
export function isVersion(value: unknown): value is types.Version {
if(!_isStringVersion(value)) {
return false;
}
return true;
}
function _isStringVersion(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/properties/description
export function isInfoPropertiesDescription(value: unknown): value is types.InfoPropertiesDescription {
if(!_isStringInfoPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringInfoPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/properties/termsOfService
export function isTermsOfService(value: unknown): value is types.TermsOfService {
if(!_isStringTermsOfService(value)) {
return false;
}
return true;
}
function _isStringTermsOfService(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/properties/contact
export function isPropertiesContact(value: unknown): value is types.PropertiesContact {
if(!_isReferencePropertiesContact(value)) {
return false;
}
return true;
}
function _isReferencePropertiesContact(value: unknown): value is unknown {
if(!isDefinitionsContact(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/properties/license
export function isPropertiesLicense(value: unknown): value is types.PropertiesLicense {
if(!_isReferencePropertiesLicense(value)) {
return false;
}
return true;
}
function _isReferencePropertiesLicense(value: unknown): value is unknown {
if(!isDefinitionsLicense(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/info/additionalProperties
export function isInfoAdditionalProperties(value: unknown): value is types.InfoAdditionalProperties {
if(!_isNeverInfoAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverInfoAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/info/patternProperties/^x-
export function isInfoX(value: unknown): value is types.InfoX {
if(!_isReferenceInfoX(value)) {
return false;
}
return true;
}
function _isReferenceInfoX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/contact/properties/name
export function isContactName(value: unknown): value is types.ContactName {
if(!_isStringContactName(value)) {
return false;
}
return true;
}
function _isStringContactName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/contact/properties/url
export function isContactUrl(value: unknown): value is types.ContactUrl {
if(!_isStringContactUrl(value)) {
return false;
}
return true;
}
function _isStringContactUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/contact/properties/email
export function isEmail(value: unknown): value is types.Email {
if(!_isStringEmail(value)) {
return false;
}
return true;
}
function _isStringEmail(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/contact/additionalProperties
export function isContactAdditionalProperties(value: unknown): value is types.ContactAdditionalProperties {
if(!_isNeverContactAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverContactAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/contact/patternProperties/^x-
export function isContactX(value: unknown): value is types.ContactX {
if(!_isReferenceContactX(value)) {
return false;
}
return true;
}
function _isReferenceContactX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/license/properties/name
export function isLicenseName(value: unknown): value is types.LicenseName {
if(!_isStringLicenseName(value)) {
return false;
}
return true;
}
function _isStringLicenseName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/license/properties/url
export function isLicenseUrl(value: unknown): value is types.LicenseUrl {
if(!_isStringLicenseUrl(value)) {
return false;
}
return true;
}
function _isStringLicenseUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/license/additionalProperties
export function isLicenseAdditionalProperties(value: unknown): value is types.LicenseAdditionalProperties {
if(!_isNeverLicenseAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverLicenseAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/license/patternProperties/^x-
export function isLicenseX(value: unknown): value is types.LicenseX {
if(!_isReferenceLicenseX(value)) {
return false;
}
return true;
}
function _isReferenceLicenseX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/paths/additionalProperties
export function isPathsAdditionalProperties(value: unknown): value is types.PathsAdditionalProperties {
if(!_isNeverPathsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPathsAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/paths/patternProperties/^x-
export function isPathsX(value: unknown): value is types.PathsX {
if(!_isReferencePathsX(value)) {
return false;
}
return true;
}
function _isReferencePathsX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/paths/patternProperties/^/
export function isPatternProperties(value: unknown): value is types.PatternProperties {
if(!_isReferencePatternProperties(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties(value: unknown): value is unknown {
if(!isPathItem(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/definitions/additionalProperties
export function isDefinitionsAdditionalProperties(value: unknown): value is types.DefinitionsAdditionalProperties {
if(!_isReferenceDefinitionsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsAdditionalProperties(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parameterDefinitions/additionalProperties
export function isParameterDefinitionsAdditionalProperties(value: unknown): value is types.ParameterDefinitionsAdditionalProperties {
if(!_isReferenceParameterDefinitionsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceParameterDefinitionsAdditionalProperties(value: unknown): value is unknown {
if(!isParameter(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responseDefinitions/additionalProperties
export function isResponseDefinitionsAdditionalProperties(value: unknown): value is types.ResponseDefinitionsAdditionalProperties {
if(!_isReferenceResponseDefinitionsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceResponseDefinitionsAdditionalProperties(value: unknown): value is unknown {
if(!isResponse(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/externalDocs/properties/description
export function isExternalDocsPropertiesDescription(value: unknown): value is types.ExternalDocsPropertiesDescription {
if(!_isStringExternalDocsPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringExternalDocsPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/externalDocs/properties/url
export function isExternalDocsUrl(value: unknown): value is types.ExternalDocsUrl {
if(!_isStringExternalDocsUrl(value)) {
return false;
}
return true;
}
function _isStringExternalDocsUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/externalDocs/additionalProperties
export function isExternalDocsAdditionalProperties(value: unknown): value is types.ExternalDocsAdditionalProperties {
if(!_isNeverExternalDocsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverExternalDocsAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/externalDocs/patternProperties/^x-
export function isExternalDocsX(value: unknown): value is types.ExternalDocsX {
if(!_isReferenceExternalDocsX(value)) {
return false;
}
return true;
}
function _isReferenceExternalDocsX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/examples/additionalProperties
export function isExamplesAdditionalProperties(value: unknown): value is types.ExamplesAdditionalProperties {
if(!_isAnyExamplesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isAnyExamplesAdditionalProperties(value: unknown): value is unknown {
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/tags
export function isOperationTags(value: unknown): value is types.OperationTags {
if(!_isArrayOperationTags(value)) {
return false;
}
return true;
}
function _isArrayOperationTags(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isOperationTagsItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/summary
export function isSummary(value: unknown): value is types.Summary {
if(!_isStringSummary(value)) {
return false;
}
return true;
}
function _isStringSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/description
export function isOperationPropertiesDescription(value: unknown): value is types.OperationPropertiesDescription {
if(!_isStringOperationPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringOperationPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/externalDocs
export function isOperationPropertiesExternalDocs(value: unknown): value is types.OperationPropertiesExternalDocs {
if(!_isReferenceOperationPropertiesExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceOperationPropertiesExternalDocs(value: unknown): value is unknown {
if(!isDefinitionsExternalDocs(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/operationId
export function isOperationId(value: unknown): value is types.OperationId {
if(!_isStringOperationId(value)) {
return false;
}
return true;
}
function _isStringOperationId(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/produces
export function isOperationProduces(value: unknown): value is types.OperationProduces {
if(!_isAllOfOperationProduces(value)) {
return false;
}
return true;
}
function _isAllOfOperationProduces(value: unknown): value is unknown {
if(!isOperationProducesAllOf0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/consumes
export function isOperationConsumes(value: unknown): value is types.OperationConsumes {
if(!_isAllOfOperationConsumes(value)) {
return false;
}
return true;
}
function _isAllOfOperationConsumes(value: unknown): value is unknown {
if(!isOperationConsumesAllOf0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/parameters
export function isOperationParameters(value: unknown): value is types.OperationParameters {
if(!_isReferenceOperationParameters(value)) {
return false;
}
return true;
}
function _isReferenceOperationParameters(value: unknown): value is unknown {
if(!isParametersList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/responses
export function isOperationPropertiesResponses(value: unknown): value is types.OperationPropertiesResponses {
if(!_isReferenceOperationPropertiesResponses(value)) {
return false;
}
return true;
}
function _isReferenceOperationPropertiesResponses(value: unknown): value is unknown {
if(!isDefinitionsResponses(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/schemes
export function isOperationSchemes(value: unknown): value is types.OperationSchemes {
if(!_isReferenceOperationSchemes(value)) {
return false;
}
return true;
}
function _isReferenceOperationSchemes(value: unknown): value is unknown {
if(!isSchemesList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/deprecated
export function isDeprecated(value: unknown): value is types.Deprecated {
if(!_isBooleanDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/security
export function isOperationPropertiesSecurity(value: unknown): value is types.OperationPropertiesSecurity {
if(!_isReferenceOperationPropertiesSecurity(value)) {
return false;
}
return true;
}
function _isReferenceOperationPropertiesSecurity(value: unknown): value is unknown {
if(!isDefinitionsSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/additionalProperties
export function isOperationAdditionalProperties(value: unknown): value is types.OperationAdditionalProperties {
if(!_isNeverOperationAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOperationAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/operation/patternProperties/^x-
export function isOperationX(value: unknown): value is types.OperationX {
if(!_isReferenceOperationX(value)) {
return false;
}
return true;
}
function _isReferenceOperationX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/$ref
export function isPathItemRef(value: unknown): value is types.PathItemRef {
if(!_isStringPathItemRef(value)) {
return false;
}
return true;
}
function _isStringPathItemRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/get
export function isGet(value: unknown): value is types.Get {
if(!_isReferenceGet(value)) {
return false;
}
return true;
}
function _isReferenceGet(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/put
export function isPut(value: unknown): value is types.Put {
if(!_isReferencePut(value)) {
return false;
}
return true;
}
function _isReferencePut(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/post
export function isPost(value: unknown): value is types.Post {
if(!_isReferencePost(value)) {
return false;
}
return true;
}
function _isReferencePost(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/delete
export function isDelete(value: unknown): value is types.Delete {
if(!_isReferenceDelete(value)) {
return false;
}
return true;
}
function _isReferenceDelete(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/options
export function isOptions(value: unknown): value is types.Options {
if(!_isReferenceOptions(value)) {
return false;
}
return true;
}
function _isReferenceOptions(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/head
export function isHead(value: unknown): value is types.Head {
if(!_isReferenceHead(value)) {
return false;
}
return true;
}
function _isReferenceHead(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/patch
export function isPatch(value: unknown): value is types.Patch {
if(!_isReferencePatch(value)) {
return false;
}
return true;
}
function _isReferencePatch(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/parameters
export function isPathItemParameters(value: unknown): value is types.PathItemParameters {
if(!_isReferencePathItemParameters(value)) {
return false;
}
return true;
}
function _isReferencePathItemParameters(value: unknown): value is unknown {
if(!isParametersList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/additionalProperties
export function isPathItemAdditionalProperties(value: unknown): value is types.PathItemAdditionalProperties {
if(!_isNeverPathItemAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPathItemAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/pathItem/patternProperties/^x-
export function isPathItemX(value: unknown): value is types.PathItemX {
if(!_isReferencePathItemX(value)) {
return false;
}
return true;
}
function _isReferencePathItemX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responses/additionalProperties
export function isResponsesAdditionalProperties(value: unknown): value is types.ResponsesAdditionalProperties {
if(!_isNeverResponsesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverResponsesAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/responses/patternProperties/^([0-9]{3})$|^(default)$
export function isPatternProperties093Default(value: unknown): value is types.PatternProperties093Default {
if(!_isReferencePatternProperties093Default(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties093Default(value: unknown): value is unknown {
if(!isResponseValue(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responses/patternProperties/^x-
export function isResponsesX(value: unknown): value is types.ResponsesX {
if(!_isReferenceResponsesX(value)) {
return false;
}
return true;
}
function _isReferenceResponsesX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responses/not
export function isNot(value: unknown): value is types.Not {
if(!_isMapNot(value)) {
return false;
}
return true;
}
function _isMapNot(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^x-").test(propertyName)) {
if(!isNotX(propertyValue)) {
return false;
}
continue;
}
if(!isNotAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responseValue/oneOf/0
export function isResponseValueOneOf0(value: unknown): value is types.ResponseValueOneOf0 {
if(!_isReferenceResponseValueOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceResponseValueOneOf0(value: unknown): value is unknown {
if(!isResponse(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responseValue/oneOf/1
export function isResponseValueOneOf1(value: unknown): value is types.ResponseValueOneOf1 {
if(!_isReferenceResponseValueOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceResponseValueOneOf1(value: unknown): value is unknown {
if(!isJsonReference(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/properties/description
export function isResponsePropertiesDescription(value: unknown): value is types.ResponsePropertiesDescription {
if(!_isStringResponsePropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringResponsePropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/properties/schema
export function isResponsePropertiesSchema(value: unknown): value is types.ResponsePropertiesSchema {
if(!_isOneOfResponsePropertiesSchema(value)) {
return false;
}
return true;
}
function _isOneOfResponsePropertiesSchema(value: unknown): value is unknown {
let validCounter = 0;
if(isSchemaOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isSchemaOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/properties/headers
export function isPropertiesHeaders(value: unknown): value is types.PropertiesHeaders {
if(!_isReferencePropertiesHeaders(value)) {
return false;
}
return true;
}
function _isReferencePropertiesHeaders(value: unknown): value is unknown {
if(!isDefinitionsHeaders(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/properties/examples
export function isPropertiesExamples(value: unknown): value is types.PropertiesExamples {
if(!_isReferencePropertiesExamples(value)) {
return false;
}
return true;
}
function _isReferencePropertiesExamples(value: unknown): value is unknown {
if(!isDefinitionsExamples(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/additionalProperties
export function isResponseAdditionalProperties(value: unknown): value is types.ResponseAdditionalProperties {
if(!_isNeverResponseAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverResponseAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/response/patternProperties/^x-
export function isResponseX(value: unknown): value is types.ResponseX {
if(!_isReferenceResponseX(value)) {
return false;
}
return true;
}
function _isReferenceResponseX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headers/additionalProperties
export function isHeadersAdditionalProperties(value: unknown): value is types.HeadersAdditionalProperties {
if(!_isReferenceHeadersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceHeadersAdditionalProperties(value: unknown): value is unknown {
if(!isHeader(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/type
export function isHeaderType(value: unknown): value is types.HeaderType {
if(!_isStringHeaderType(value)) {
return false;
}
return true;
}
function _isStringHeaderType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "string" && value !== "number" && value !== "integer" && value !== "boolean" && value !== "array") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/format
export function isHeaderFormat(value: unknown): value is types.HeaderFormat {
if(!_isStringHeaderFormat(value)) {
return false;
}
return true;
}
function _isStringHeaderFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/items
export function isHeaderPropertiesItems(value: unknown): value is types.HeaderPropertiesItems {
if(!_isReferenceHeaderPropertiesItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesItems(value: unknown): value is unknown {
if(!isPrimitivesItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/collectionFormat
export function isHeaderPropertiesCollectionFormat(value: unknown): value is types.HeaderPropertiesCollectionFormat {
if(!_isReferenceHeaderPropertiesCollectionFormat(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesCollectionFormat(value: unknown): value is unknown {
if(!isDefinitionsCollectionFormat(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/default
export function isHeaderPropertiesDefault(value: unknown): value is types.HeaderPropertiesDefault {
if(!_isReferenceHeaderPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesDefault(value: unknown): value is unknown {
if(!isDefinitionsDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/maximum
export function isHeaderPropertiesMaximum(value: unknown): value is types.HeaderPropertiesMaximum {
if(!_isReferenceHeaderPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMaximum(value: unknown): value is unknown {
if(!isDefinitionsMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/exclusiveMaximum
export function isHeaderPropertiesExclusiveMaximum(value: unknown): value is types.HeaderPropertiesExclusiveMaximum {
if(!_isReferenceHeaderPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/minimum
export function isHeaderPropertiesMinimum(value: unknown): value is types.HeaderPropertiesMinimum {
if(!_isReferenceHeaderPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMinimum(value: unknown): value is unknown {
if(!isDefinitionsMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/exclusiveMinimum
export function isHeaderPropertiesExclusiveMinimum(value: unknown): value is types.HeaderPropertiesExclusiveMinimum {
if(!_isReferenceHeaderPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/maxLength
export function isHeaderPropertiesMaxLength(value: unknown): value is types.HeaderPropertiesMaxLength {
if(!_isReferenceHeaderPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMaxLength(value: unknown): value is unknown {
if(!isDefinitionsMaxLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/minLength
export function isHeaderPropertiesMinLength(value: unknown): value is types.HeaderPropertiesMinLength {
if(!_isReferenceHeaderPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMinLength(value: unknown): value is unknown {
if(!isDefinitionsMinLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/pattern
export function isHeaderPropertiesPattern(value: unknown): value is types.HeaderPropertiesPattern {
if(!_isReferenceHeaderPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesPattern(value: unknown): value is unknown {
if(!isDefinitionsPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/maxItems
export function isHeaderPropertiesMaxItems(value: unknown): value is types.HeaderPropertiesMaxItems {
if(!_isReferenceHeaderPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMaxItems(value: unknown): value is unknown {
if(!isDefinitionsMaxItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/minItems
export function isHeaderPropertiesMinItems(value: unknown): value is types.HeaderPropertiesMinItems {
if(!_isReferenceHeaderPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMinItems(value: unknown): value is unknown {
if(!isDefinitionsMinItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/uniqueItems
export function isHeaderPropertiesUniqueItems(value: unknown): value is types.HeaderPropertiesUniqueItems {
if(!_isReferenceHeaderPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/enum
export function isHeaderPropertiesEnum(value: unknown): value is types.HeaderPropertiesEnum {
if(!_isReferenceHeaderPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesEnum(value: unknown): value is unknown {
if(!isDefinitionsEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/multipleOf
export function isHeaderPropertiesMultipleOf(value: unknown): value is types.HeaderPropertiesMultipleOf {
if(!_isReferenceHeaderPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferenceHeaderPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/properties/description
export function isHeaderPropertiesDescription(value: unknown): value is types.HeaderPropertiesDescription {
if(!_isStringHeaderPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringHeaderPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/header/additionalProperties
export function isHeaderAdditionalProperties(value: unknown): value is types.HeaderAdditionalProperties {
if(!_isNeverHeaderAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverHeaderAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/header/patternProperties/^x-
export function isHeaderX(value: unknown): value is types.HeaderX {
if(!_isReferenceHeaderX(value)) {
return false;
}
return true;
}
function _isReferenceHeaderX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/vendorExtension/additionalProperties
export function isVendorExtensionAdditionalProperties(value: unknown): value is types.VendorExtensionAdditionalProperties {
if(!_isAnyVendorExtensionAdditionalProperties(value)) {
return false;
}
return true;
}
function _isAnyVendorExtensionAdditionalProperties(value: unknown): value is unknown {
return true;
}
// http://swagger.io/v2/schema.json#/definitions/vendorExtension/additionalItems
export function isVendorExtensionAdditionalItems(value: unknown): value is types.VendorExtensionAdditionalItems {
if(!_isAnyVendorExtensionAdditionalItems(value)) {
return false;
}
return true;
}
function _isAnyVendorExtensionAdditionalItems(value: unknown): value is unknown {
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/description
export function isBodyParameterPropertiesDescription(value: unknown): value is types.BodyParameterPropertiesDescription {
if(!_isStringBodyParameterPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringBodyParameterPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/name
export function isBodyParameterName(value: unknown): value is types.BodyParameterName {
if(!_isStringBodyParameterName(value)) {
return false;
}
return true;
}
function _isStringBodyParameterName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/in
export function isBodyParameterIn(value: unknown): value is types.BodyParameterIn {
if(!_isStringBodyParameterIn(value)) {
return false;
}
return true;
}
function _isStringBodyParameterIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "body") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/required
export function isBodyParameterRequired(value: unknown): value is types.BodyParameterRequired {
if(!_isBooleanBodyParameterRequired(value)) {
return false;
}
return true;
}
function _isBooleanBodyParameterRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/schema
export function isBodyParameterPropertiesSchema(value: unknown): value is types.BodyParameterPropertiesSchema {
if(!_isReferenceBodyParameterPropertiesSchema(value)) {
return false;
}
return true;
}
function _isReferenceBodyParameterPropertiesSchema(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/additionalProperties
export function isBodyParameterAdditionalProperties(value: unknown): value is types.BodyParameterAdditionalProperties {
if(!_isNeverBodyParameterAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverBodyParameterAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/patternProperties/^x-
export function isBodyParameterX(value: unknown): value is types.BodyParameterX {
if(!_isReferenceBodyParameterX(value)) {
return false;
}
return true;
}
function _isReferenceBodyParameterX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/required
export function isHeaderParameterSubSchemaRequired(value: unknown): value is types.HeaderParameterSubSchemaRequired {
if(!_isBooleanHeaderParameterSubSchemaRequired(value)) {
return false;
}
return true;
}
function _isBooleanHeaderParameterSubSchemaRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/in
export function isHeaderParameterSubSchemaIn(value: unknown): value is types.HeaderParameterSubSchemaIn {
if(!_isStringHeaderParameterSubSchemaIn(value)) {
return false;
}
return true;
}
function _isStringHeaderParameterSubSchemaIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "header") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/description
export function isHeaderParameterSubSchemaPropertiesDescription(value: unknown): value is types.HeaderParameterSubSchemaPropertiesDescription {
if(!_isStringHeaderParameterSubSchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringHeaderParameterSubSchemaPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/name
export function isHeaderParameterSubSchemaName(value: unknown): value is types.HeaderParameterSubSchemaName {
if(!_isStringHeaderParameterSubSchemaName(value)) {
return false;
}
return true;
}
function _isStringHeaderParameterSubSchemaName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/type
export function isHeaderParameterSubSchemaType(value: unknown): value is types.HeaderParameterSubSchemaType {
if(!_isStringHeaderParameterSubSchemaType(value)) {
return false;
}
return true;
}
function _isStringHeaderParameterSubSchemaType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "string" && value !== "number" && value !== "boolean" && value !== "integer" && value !== "array") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/format
export function isHeaderParameterSubSchemaFormat(value: unknown): value is types.HeaderParameterSubSchemaFormat {
if(!_isStringHeaderParameterSubSchemaFormat(value)) {
return false;
}
return true;
}
function _isStringHeaderParameterSubSchemaFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/items
export function isHeaderParameterSubSchemaPropertiesItems(value: unknown): value is types.HeaderParameterSubSchemaPropertiesItems {
if(!_isReferenceHeaderParameterSubSchemaPropertiesItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesItems(value: unknown): value is unknown {
if(!isPrimitivesItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/collectionFormat
export function isHeaderParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is types.HeaderParameterSubSchemaPropertiesCollectionFormat {
if(!_isReferenceHeaderParameterSubSchemaPropertiesCollectionFormat(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is unknown {
if(!isDefinitionsCollectionFormat(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/default
export function isHeaderParameterSubSchemaPropertiesDefault(value: unknown): value is types.HeaderParameterSubSchemaPropertiesDefault {
if(!_isReferenceHeaderParameterSubSchemaPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesDefault(value: unknown): value is unknown {
if(!isDefinitionsDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maximum
export function isHeaderParameterSubSchemaPropertiesMaximum(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMaximum {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMaximum(value: unknown): value is unknown {
if(!isDefinitionsMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/exclusiveMaximum
export function isHeaderParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is types.HeaderParameterSubSchemaPropertiesExclusiveMaximum {
if(!_isReferenceHeaderParameterSubSchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minimum
export function isHeaderParameterSubSchemaPropertiesMinimum(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMinimum {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMinimum(value: unknown): value is unknown {
if(!isDefinitionsMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/exclusiveMinimum
export function isHeaderParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is types.HeaderParameterSubSchemaPropertiesExclusiveMinimum {
if(!_isReferenceHeaderParameterSubSchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maxLength
export function isHeaderParameterSubSchemaPropertiesMaxLength(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMaxLength {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMaxLength(value: unknown): value is unknown {
if(!isDefinitionsMaxLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minLength
export function isHeaderParameterSubSchemaPropertiesMinLength(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMinLength {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMinLength(value: unknown): value is unknown {
if(!isDefinitionsMinLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/pattern
export function isHeaderParameterSubSchemaPropertiesPattern(value: unknown): value is types.HeaderParameterSubSchemaPropertiesPattern {
if(!_isReferenceHeaderParameterSubSchemaPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesPattern(value: unknown): value is unknown {
if(!isDefinitionsPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maxItems
export function isHeaderParameterSubSchemaPropertiesMaxItems(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMaxItems {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMaxItems(value: unknown): value is unknown {
if(!isDefinitionsMaxItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minItems
export function isHeaderParameterSubSchemaPropertiesMinItems(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMinItems {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMinItems(value: unknown): value is unknown {
if(!isDefinitionsMinItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/uniqueItems
export function isHeaderParameterSubSchemaPropertiesUniqueItems(value: unknown): value is types.HeaderParameterSubSchemaPropertiesUniqueItems {
if(!_isReferenceHeaderParameterSubSchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/enum
export function isHeaderParameterSubSchemaPropertiesEnum(value: unknown): value is types.HeaderParameterSubSchemaPropertiesEnum {
if(!_isReferenceHeaderParameterSubSchemaPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesEnum(value: unknown): value is unknown {
if(!isDefinitionsEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/multipleOf
export function isHeaderParameterSubSchemaPropertiesMultipleOf(value: unknown): value is types.HeaderParameterSubSchemaPropertiesMultipleOf {
if(!_isReferenceHeaderParameterSubSchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/additionalProperties
export function isHeaderParameterSubSchemaAdditionalProperties(value: unknown): value is types.HeaderParameterSubSchemaAdditionalProperties {
if(!_isNeverHeaderParameterSubSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverHeaderParameterSubSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/patternProperties/^x-
export function isHeaderParameterSubSchemaX(value: unknown): value is types.HeaderParameterSubSchemaX {
if(!_isReferenceHeaderParameterSubSchemaX(value)) {
return false;
}
return true;
}
function _isReferenceHeaderParameterSubSchemaX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/required
export function isQueryParameterSubSchemaRequired(value: unknown): value is types.QueryParameterSubSchemaRequired {
if(!_isBooleanQueryParameterSubSchemaRequired(value)) {
return false;
}
return true;
}
function _isBooleanQueryParameterSubSchemaRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/in
export function isQueryParameterSubSchemaIn(value: unknown): value is types.QueryParameterSubSchemaIn {
if(!_isStringQueryParameterSubSchemaIn(value)) {
return false;
}
return true;
}
function _isStringQueryParameterSubSchemaIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "query") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/description
export function isQueryParameterSubSchemaPropertiesDescription(value: unknown): value is types.QueryParameterSubSchemaPropertiesDescription {
if(!_isStringQueryParameterSubSchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringQueryParameterSubSchemaPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/name
export function isQueryParameterSubSchemaName(value: unknown): value is types.QueryParameterSubSchemaName {
if(!_isStringQueryParameterSubSchemaName(value)) {
return false;
}
return true;
}
function _isStringQueryParameterSubSchemaName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/allowEmptyValue
export function isQueryParameterSubSchemaAllowEmptyValue(value: unknown): value is types.QueryParameterSubSchemaAllowEmptyValue {
if(!_isBooleanQueryParameterSubSchemaAllowEmptyValue(value)) {
return false;
}
return true;
}
function _isBooleanQueryParameterSubSchemaAllowEmptyValue(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/type
export function isQueryParameterSubSchemaType(value: unknown): value is types.QueryParameterSubSchemaType {
if(!_isStringQueryParameterSubSchemaType(value)) {
return false;
}
return true;
}
function _isStringQueryParameterSubSchemaType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "string" && value !== "number" && value !== "boolean" && value !== "integer" && value !== "array") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/format
export function isQueryParameterSubSchemaFormat(value: unknown): value is types.QueryParameterSubSchemaFormat {
if(!_isStringQueryParameterSubSchemaFormat(value)) {
return false;
}
return true;
}
function _isStringQueryParameterSubSchemaFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/items
export function isQueryParameterSubSchemaPropertiesItems(value: unknown): value is types.QueryParameterSubSchemaPropertiesItems {
if(!_isReferenceQueryParameterSubSchemaPropertiesItems(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesItems(value: unknown): value is unknown {
if(!isPrimitivesItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/collectionFormat
export function isQueryParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is types.QueryParameterSubSchemaPropertiesCollectionFormat {
if(!_isReferenceQueryParameterSubSchemaPropertiesCollectionFormat(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is unknown {
if(!isCollectionFormatWithMulti(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/default
export function isQueryParameterSubSchemaPropertiesDefault(value: unknown): value is types.QueryParameterSubSchemaPropertiesDefault {
if(!_isReferenceQueryParameterSubSchemaPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesDefault(value: unknown): value is unknown {
if(!isDefinitionsDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maximum
export function isQueryParameterSubSchemaPropertiesMaximum(value: unknown): value is types.QueryParameterSubSchemaPropertiesMaximum {
if(!_isReferenceQueryParameterSubSchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMaximum(value: unknown): value is unknown {
if(!isDefinitionsMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/exclusiveMaximum
export function isQueryParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is types.QueryParameterSubSchemaPropertiesExclusiveMaximum {
if(!_isReferenceQueryParameterSubSchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minimum
export function isQueryParameterSubSchemaPropertiesMinimum(value: unknown): value is types.QueryParameterSubSchemaPropertiesMinimum {
if(!_isReferenceQueryParameterSubSchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMinimum(value: unknown): value is unknown {
if(!isDefinitionsMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/exclusiveMinimum
export function isQueryParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is types.QueryParameterSubSchemaPropertiesExclusiveMinimum {
if(!_isReferenceQueryParameterSubSchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maxLength
export function isQueryParameterSubSchemaPropertiesMaxLength(value: unknown): value is types.QueryParameterSubSchemaPropertiesMaxLength {
if(!_isReferenceQueryParameterSubSchemaPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMaxLength(value: unknown): value is unknown {
if(!isDefinitionsMaxLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minLength
export function isQueryParameterSubSchemaPropertiesMinLength(value: unknown): value is types.QueryParameterSubSchemaPropertiesMinLength {
if(!_isReferenceQueryParameterSubSchemaPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMinLength(value: unknown): value is unknown {
if(!isDefinitionsMinLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/pattern
export function isQueryParameterSubSchemaPropertiesPattern(value: unknown): value is types.QueryParameterSubSchemaPropertiesPattern {
if(!_isReferenceQueryParameterSubSchemaPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesPattern(value: unknown): value is unknown {
if(!isDefinitionsPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maxItems
export function isQueryParameterSubSchemaPropertiesMaxItems(value: unknown): value is types.QueryParameterSubSchemaPropertiesMaxItems {
if(!_isReferenceQueryParameterSubSchemaPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMaxItems(value: unknown): value is unknown {
if(!isDefinitionsMaxItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minItems
export function isQueryParameterSubSchemaPropertiesMinItems(value: unknown): value is types.QueryParameterSubSchemaPropertiesMinItems {
if(!_isReferenceQueryParameterSubSchemaPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMinItems(value: unknown): value is unknown {
if(!isDefinitionsMinItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/uniqueItems
export function isQueryParameterSubSchemaPropertiesUniqueItems(value: unknown): value is types.QueryParameterSubSchemaPropertiesUniqueItems {
if(!_isReferenceQueryParameterSubSchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/enum
export function isQueryParameterSubSchemaPropertiesEnum(value: unknown): value is types.QueryParameterSubSchemaPropertiesEnum {
if(!_isReferenceQueryParameterSubSchemaPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesEnum(value: unknown): value is unknown {
if(!isDefinitionsEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/multipleOf
export function isQueryParameterSubSchemaPropertiesMultipleOf(value: unknown): value is types.QueryParameterSubSchemaPropertiesMultipleOf {
if(!_isReferenceQueryParameterSubSchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/additionalProperties
export function isQueryParameterSubSchemaAdditionalProperties(value: unknown): value is types.QueryParameterSubSchemaAdditionalProperties {
if(!_isNeverQueryParameterSubSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverQueryParameterSubSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/patternProperties/^x-
export function isQueryParameterSubSchemaX(value: unknown): value is types.QueryParameterSubSchemaX {
if(!_isReferenceQueryParameterSubSchemaX(value)) {
return false;
}
return true;
}
function _isReferenceQueryParameterSubSchemaX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/required
export function isFormDataParameterSubSchemaRequired(value: unknown): value is types.FormDataParameterSubSchemaRequired {
if(!_isBooleanFormDataParameterSubSchemaRequired(value)) {
return false;
}
return true;
}
function _isBooleanFormDataParameterSubSchemaRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/in
export function isFormDataParameterSubSchemaIn(value: unknown): value is types.FormDataParameterSubSchemaIn {
if(!_isStringFormDataParameterSubSchemaIn(value)) {
return false;
}
return true;
}
function _isStringFormDataParameterSubSchemaIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "formData") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/description
export function isFormDataParameterSubSchemaPropertiesDescription(value: unknown): value is types.FormDataParameterSubSchemaPropertiesDescription {
if(!_isStringFormDataParameterSubSchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringFormDataParameterSubSchemaPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/name
export function isFormDataParameterSubSchemaName(value: unknown): value is types.FormDataParameterSubSchemaName {
if(!_isStringFormDataParameterSubSchemaName(value)) {
return false;
}
return true;
}
function _isStringFormDataParameterSubSchemaName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/allowEmptyValue
export function isFormDataParameterSubSchemaAllowEmptyValue(value: unknown): value is types.FormDataParameterSubSchemaAllowEmptyValue {
if(!_isBooleanFormDataParameterSubSchemaAllowEmptyValue(value)) {
return false;
}
return true;
}
function _isBooleanFormDataParameterSubSchemaAllowEmptyValue(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/type
export function isFormDataParameterSubSchemaType(value: unknown): value is types.FormDataParameterSubSchemaType {
if(!_isStringFormDataParameterSubSchemaType(value)) {
return false;
}
return true;
}
function _isStringFormDataParameterSubSchemaType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "string" && value !== "number" && value !== "boolean" && value !== "integer" && value !== "array" && value !== "file") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/format
export function isFormDataParameterSubSchemaFormat(value: unknown): value is types.FormDataParameterSubSchemaFormat {
if(!_isStringFormDataParameterSubSchemaFormat(value)) {
return false;
}
return true;
}
function _isStringFormDataParameterSubSchemaFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/items
export function isFormDataParameterSubSchemaPropertiesItems(value: unknown): value is types.FormDataParameterSubSchemaPropertiesItems {
if(!_isReferenceFormDataParameterSubSchemaPropertiesItems(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesItems(value: unknown): value is unknown {
if(!isPrimitivesItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/collectionFormat
export function isFormDataParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is types.FormDataParameterSubSchemaPropertiesCollectionFormat {
if(!_isReferenceFormDataParameterSubSchemaPropertiesCollectionFormat(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is unknown {
if(!isCollectionFormatWithMulti(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/default
export function isFormDataParameterSubSchemaPropertiesDefault(value: unknown): value is types.FormDataParameterSubSchemaPropertiesDefault {
if(!_isReferenceFormDataParameterSubSchemaPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesDefault(value: unknown): value is unknown {
if(!isDefinitionsDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maximum
export function isFormDataParameterSubSchemaPropertiesMaximum(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMaximum {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMaximum(value: unknown): value is unknown {
if(!isDefinitionsMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/exclusiveMaximum
export function isFormDataParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is types.FormDataParameterSubSchemaPropertiesExclusiveMaximum {
if(!_isReferenceFormDataParameterSubSchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minimum
export function isFormDataParameterSubSchemaPropertiesMinimum(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMinimum {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMinimum(value: unknown): value is unknown {
if(!isDefinitionsMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/exclusiveMinimum
export function isFormDataParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is types.FormDataParameterSubSchemaPropertiesExclusiveMinimum {
if(!_isReferenceFormDataParameterSubSchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maxLength
export function isFormDataParameterSubSchemaPropertiesMaxLength(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMaxLength {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMaxLength(value: unknown): value is unknown {
if(!isDefinitionsMaxLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minLength
export function isFormDataParameterSubSchemaPropertiesMinLength(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMinLength {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMinLength(value: unknown): value is unknown {
if(!isDefinitionsMinLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/pattern
export function isFormDataParameterSubSchemaPropertiesPattern(value: unknown): value is types.FormDataParameterSubSchemaPropertiesPattern {
if(!_isReferenceFormDataParameterSubSchemaPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesPattern(value: unknown): value is unknown {
if(!isDefinitionsPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maxItems
export function isFormDataParameterSubSchemaPropertiesMaxItems(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMaxItems {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMaxItems(value: unknown): value is unknown {
if(!isDefinitionsMaxItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minItems
export function isFormDataParameterSubSchemaPropertiesMinItems(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMinItems {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMinItems(value: unknown): value is unknown {
if(!isDefinitionsMinItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/uniqueItems
export function isFormDataParameterSubSchemaPropertiesUniqueItems(value: unknown): value is types.FormDataParameterSubSchemaPropertiesUniqueItems {
if(!_isReferenceFormDataParameterSubSchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/enum
export function isFormDataParameterSubSchemaPropertiesEnum(value: unknown): value is types.FormDataParameterSubSchemaPropertiesEnum {
if(!_isReferenceFormDataParameterSubSchemaPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesEnum(value: unknown): value is unknown {
if(!isDefinitionsEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/multipleOf
export function isFormDataParameterSubSchemaPropertiesMultipleOf(value: unknown): value is types.FormDataParameterSubSchemaPropertiesMultipleOf {
if(!_isReferenceFormDataParameterSubSchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/additionalProperties
export function isFormDataParameterSubSchemaAdditionalProperties(value: unknown): value is types.FormDataParameterSubSchemaAdditionalProperties {
if(!_isNeverFormDataParameterSubSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverFormDataParameterSubSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/patternProperties/^x-
export function isFormDataParameterSubSchemaX(value: unknown): value is types.FormDataParameterSubSchemaX {
if(!_isReferenceFormDataParameterSubSchemaX(value)) {
return false;
}
return true;
}
function _isReferenceFormDataParameterSubSchemaX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/required
export function isPathParameterSubSchemaRequired(value: unknown): value is types.PathParameterSubSchemaRequired {
if(!_isBooleanPathParameterSubSchemaRequired(value)) {
return false;
}
return true;
}
function _isBooleanPathParameterSubSchemaRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
if(value !== true) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/in
export function isPathParameterSubSchemaIn(value: unknown): value is types.PathParameterSubSchemaIn {
if(!_isStringPathParameterSubSchemaIn(value)) {
return false;
}
return true;
}
function _isStringPathParameterSubSchemaIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "path") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/description
export function isPathParameterSubSchemaPropertiesDescription(value: unknown): value is types.PathParameterSubSchemaPropertiesDescription {
if(!_isStringPathParameterSubSchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringPathParameterSubSchemaPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/name
export function isPathParameterSubSchemaName(value: unknown): value is types.PathParameterSubSchemaName {
if(!_isStringPathParameterSubSchemaName(value)) {
return false;
}
return true;
}
function _isStringPathParameterSubSchemaName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/type
export function isPathParameterSubSchemaType(value: unknown): value is types.PathParameterSubSchemaType {
if(!_isStringPathParameterSubSchemaType(value)) {
return false;
}
return true;
}
function _isStringPathParameterSubSchemaType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "string" && value !== "number" && value !== "boolean" && value !== "integer" && value !== "array") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/format
export function isPathParameterSubSchemaFormat(value: unknown): value is types.PathParameterSubSchemaFormat {
if(!_isStringPathParameterSubSchemaFormat(value)) {
return false;
}
return true;
}
function _isStringPathParameterSubSchemaFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/items
export function isPathParameterSubSchemaPropertiesItems(value: unknown): value is types.PathParameterSubSchemaPropertiesItems {
if(!_isReferencePathParameterSubSchemaPropertiesItems(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesItems(value: unknown): value is unknown {
if(!isPrimitivesItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/collectionFormat
export function isPathParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is types.PathParameterSubSchemaPropertiesCollectionFormat {
if(!_isReferencePathParameterSubSchemaPropertiesCollectionFormat(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesCollectionFormat(value: unknown): value is unknown {
if(!isDefinitionsCollectionFormat(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/default
export function isPathParameterSubSchemaPropertiesDefault(value: unknown): value is types.PathParameterSubSchemaPropertiesDefault {
if(!_isReferencePathParameterSubSchemaPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesDefault(value: unknown): value is unknown {
if(!isDefinitionsDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maximum
export function isPathParameterSubSchemaPropertiesMaximum(value: unknown): value is types.PathParameterSubSchemaPropertiesMaximum {
if(!_isReferencePathParameterSubSchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMaximum(value: unknown): value is unknown {
if(!isDefinitionsMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/exclusiveMaximum
export function isPathParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is types.PathParameterSubSchemaPropertiesExclusiveMaximum {
if(!_isReferencePathParameterSubSchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minimum
export function isPathParameterSubSchemaPropertiesMinimum(value: unknown): value is types.PathParameterSubSchemaPropertiesMinimum {
if(!_isReferencePathParameterSubSchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMinimum(value: unknown): value is unknown {
if(!isDefinitionsMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/exclusiveMinimum
export function isPathParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is types.PathParameterSubSchemaPropertiesExclusiveMinimum {
if(!_isReferencePathParameterSubSchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maxLength
export function isPathParameterSubSchemaPropertiesMaxLength(value: unknown): value is types.PathParameterSubSchemaPropertiesMaxLength {
if(!_isReferencePathParameterSubSchemaPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMaxLength(value: unknown): value is unknown {
if(!isDefinitionsMaxLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minLength
export function isPathParameterSubSchemaPropertiesMinLength(value: unknown): value is types.PathParameterSubSchemaPropertiesMinLength {
if(!_isReferencePathParameterSubSchemaPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMinLength(value: unknown): value is unknown {
if(!isDefinitionsMinLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/pattern
export function isPathParameterSubSchemaPropertiesPattern(value: unknown): value is types.PathParameterSubSchemaPropertiesPattern {
if(!_isReferencePathParameterSubSchemaPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesPattern(value: unknown): value is unknown {
if(!isDefinitionsPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maxItems
export function isPathParameterSubSchemaPropertiesMaxItems(value: unknown): value is types.PathParameterSubSchemaPropertiesMaxItems {
if(!_isReferencePathParameterSubSchemaPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMaxItems(value: unknown): value is unknown {
if(!isDefinitionsMaxItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minItems
export function isPathParameterSubSchemaPropertiesMinItems(value: unknown): value is types.PathParameterSubSchemaPropertiesMinItems {
if(!_isReferencePathParameterSubSchemaPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMinItems(value: unknown): value is unknown {
if(!isDefinitionsMinItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/uniqueItems
export function isPathParameterSubSchemaPropertiesUniqueItems(value: unknown): value is types.PathParameterSubSchemaPropertiesUniqueItems {
if(!_isReferencePathParameterSubSchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/enum
export function isPathParameterSubSchemaPropertiesEnum(value: unknown): value is types.PathParameterSubSchemaPropertiesEnum {
if(!_isReferencePathParameterSubSchemaPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesEnum(value: unknown): value is unknown {
if(!isDefinitionsEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/multipleOf
export function isPathParameterSubSchemaPropertiesMultipleOf(value: unknown): value is types.PathParameterSubSchemaPropertiesMultipleOf {
if(!_isReferencePathParameterSubSchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/additionalProperties
export function isPathParameterSubSchemaAdditionalProperties(value: unknown): value is types.PathParameterSubSchemaAdditionalProperties {
if(!_isNeverPathParameterSubSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPathParameterSubSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/patternProperties/^x-
export function isPathParameterSubSchemaX(value: unknown): value is types.PathParameterSubSchemaX {
if(!_isReferencePathParameterSubSchemaX(value)) {
return false;
}
return true;
}
function _isReferencePathParameterSubSchemaX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/0
export function isNonBodyParameterOneOf0(value: unknown): value is types.NonBodyParameterOneOf0 {
if(!_isReferenceNonBodyParameterOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceNonBodyParameterOneOf0(value: unknown): value is unknown {
if(!isHeaderParameterSubSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/1
export function isNonBodyParameterOneOf1(value: unknown): value is types.NonBodyParameterOneOf1 {
if(!_isReferenceNonBodyParameterOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceNonBodyParameterOneOf1(value: unknown): value is unknown {
if(!isFormDataParameterSubSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/2
export function isNonBodyParameterOneOf2(value: unknown): value is types.NonBodyParameterOneOf2 {
if(!_isReferenceNonBodyParameterOneOf2(value)) {
return false;
}
return true;
}
function _isReferenceNonBodyParameterOneOf2(value: unknown): value is unknown {
if(!isQueryParameterSubSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/3
export function isNonBodyParameterOneOf3(value: unknown): value is types.NonBodyParameterOneOf3 {
if(!_isReferenceNonBodyParameterOneOf3(value)) {
return false;
}
return true;
}
function _isReferenceNonBodyParameterOneOf3(value: unknown): value is unknown {
if(!isPathParameterSubSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parameter/oneOf/0
export function isParameterOneOf0(value: unknown): value is types.ParameterOneOf0 {
if(!_isReferenceParameterOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceParameterOneOf0(value: unknown): value is unknown {
if(!isBodyParameter(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parameter/oneOf/1
export function isParameterOneOf1(value: unknown): value is types.ParameterOneOf1 {
if(!_isReferenceParameterOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceParameterOneOf1(value: unknown): value is unknown {
if(!isNonBodyParameter(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/$ref
export function isSchemaRef(value: unknown): value is types.SchemaRef {
if(!_isStringSchemaRef(value)) {
return false;
}
return true;
}
function _isStringSchemaRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/format
export function isSchemaFormat(value: unknown): value is types.SchemaFormat {
if(!_isStringSchemaFormat(value)) {
return false;
}
return true;
}
function _isStringSchemaFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/title
export function isDefinitionsSchemaPropertiesTitle(value: unknown): value is types.DefinitionsSchemaPropertiesTitle {
if(!_isReferenceDefinitionsSchemaPropertiesTitle(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesTitle(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesTitle(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/description
export function isDefinitionsSchemaPropertiesDescription(value: unknown): value is types.DefinitionsSchemaPropertiesDescription {
if(!_isReferenceDefinitionsSchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesDescription(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesDescription(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/default
export function isDefinitionsSchemaPropertiesDefault(value: unknown): value is types.DefinitionsSchemaPropertiesDefault {
if(!_isReferenceDefinitionsSchemaPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesDefault(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/multipleOf
export function isDefinitionsSchemaPropertiesMultipleOf(value: unknown): value is types.DefinitionsSchemaPropertiesMultipleOf {
if(!_isReferenceDefinitionsSchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maximum
export function isDefinitionsSchemaPropertiesMaximum(value: unknown): value is types.DefinitionsSchemaPropertiesMaximum {
if(!_isReferenceDefinitionsSchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesMaximum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/exclusiveMaximum
export function isDefinitionsSchemaPropertiesExclusiveMaximum(value: unknown): value is types.DefinitionsSchemaPropertiesExclusiveMaximum {
if(!_isReferenceDefinitionsSchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minimum
export function isDefinitionsSchemaPropertiesMinimum(value: unknown): value is types.DefinitionsSchemaPropertiesMinimum {
if(!_isReferenceDefinitionsSchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesMinimum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/exclusiveMinimum
export function isDefinitionsSchemaPropertiesExclusiveMinimum(value: unknown): value is types.DefinitionsSchemaPropertiesExclusiveMinimum {
if(!_isReferenceDefinitionsSchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maxLength
export function isSchemaPropertiesMaxLength(value: unknown): value is types.SchemaPropertiesMaxLength {
if(!_isReferenceSchemaPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesMaxLength(value: unknown): value is unknown {
if(!isPositiveInteger(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minLength
export function isSchemaPropertiesMinLength(value: unknown): value is types.SchemaPropertiesMinLength {
if(!_isReferenceSchemaPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesMinLength(value: unknown): value is unknown {
if(!isPositiveIntegerDefault0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/pattern
export function isDefinitionsSchemaPropertiesPattern(value: unknown): value is types.DefinitionsSchemaPropertiesPattern {
if(!_isReferenceDefinitionsSchemaPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesPattern(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maxItems
export function isSchemaPropertiesMaxItems(value: unknown): value is types.SchemaPropertiesMaxItems {
if(!_isReferenceSchemaPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesMaxItems(value: unknown): value is unknown {
if(!isPositiveInteger(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minItems
export function isSchemaPropertiesMinItems(value: unknown): value is types.SchemaPropertiesMinItems {
if(!_isReferenceSchemaPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesMinItems(value: unknown): value is unknown {
if(!isPositiveIntegerDefault0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/uniqueItems
export function isDefinitionsSchemaPropertiesUniqueItems(value: unknown): value is types.DefinitionsSchemaPropertiesUniqueItems {
if(!_isReferenceDefinitionsSchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maxProperties
export function isMaxProperties(value: unknown): value is types.MaxProperties {
if(!_isReferenceMaxProperties(value)) {
return false;
}
return true;
}
function _isReferenceMaxProperties(value: unknown): value is unknown {
if(!isPositiveInteger(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minProperties
export function isMinProperties(value: unknown): value is types.MinProperties {
if(!_isReferenceMinProperties(value)) {
return false;
}
return true;
}
function _isReferenceMinProperties(value: unknown): value is unknown {
if(!isPositiveIntegerDefault0(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/required
export function isSchemaRequired(value: unknown): value is types.SchemaRequired {
if(!_isReferenceSchemaRequired(value)) {
return false;
}
return true;
}
function _isReferenceSchemaRequired(value: unknown): value is unknown {
if(!isStringArray(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/enum
export function isDefinitionsSchemaPropertiesEnum(value: unknown): value is types.DefinitionsSchemaPropertiesEnum {
if(!_isReferenceDefinitionsSchemaPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaPropertiesEnum(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties
export function isSchemaPropertiesAdditionalProperties(value: unknown): value is types.SchemaPropertiesAdditionalProperties {
if(!_isAnyOfSchemaPropertiesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isAnyOfSchemaPropertiesAdditionalProperties(value: unknown): value is unknown {
if(isAdditionalPropertiesAnyOf0(value)) {
return true;
}
if(isAdditionalPropertiesAnyOf1(value)) {
return true;
}
return false;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/type
export function isDefinitionsSchemaType(value: unknown): value is types.DefinitionsSchemaType {
if(!_isReferenceDefinitionsSchemaType(value)) {
return false;
}
return true;
}
function _isReferenceDefinitionsSchemaType(value: unknown): value is unknown {
if(!isDraft04SchemaType(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items
export function isSchemaPropertiesItems(value: unknown): value is types.SchemaPropertiesItems {
if(!_isAnyOfSchemaPropertiesItems(value)) {
return false;
}
return true;
}
function _isAnyOfSchemaPropertiesItems(value: unknown): value is unknown {
if(isItemsAnyOf0(value)) {
return true;
}
if(isItemsAnyOf1(value)) {
return true;
}
return false;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/allOf
export function isAllOf(value: unknown): value is types.AllOf {
if(!_isArrayAllOf(value)) {
return false;
}
return true;
}
function _isArrayAllOf(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isAllOfItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/properties
export function isProperties(value: unknown): value is types.Properties {
if(!_isMapProperties(value)) {
return false;
}
return true;
}
function _isMapProperties(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isPropertiesPropertiesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/discriminator
export function isDiscriminator(value: unknown): value is types.Discriminator {
if(!_isStringDiscriminator(value)) {
return false;
}
return true;
}
function _isStringDiscriminator(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/readOnly
export function isSchemaReadOnly(value: unknown): value is types.SchemaReadOnly {
if(!_isBooleanSchemaReadOnly(value)) {
return false;
}
return true;
}
function _isBooleanSchemaReadOnly(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/xml
export function isPropertiesXml(value: unknown): value is types.PropertiesXml {
if(!_isReferencePropertiesXml(value)) {
return false;
}
return true;
}
function _isReferencePropertiesXml(value: unknown): value is unknown {
if(!isDefinitionsXml(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/externalDocs
export function isSchemaPropertiesExternalDocs(value: unknown): value is types.SchemaPropertiesExternalDocs {
if(!_isReferenceSchemaPropertiesExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceSchemaPropertiesExternalDocs(value: unknown): value is unknown {
if(!isDefinitionsExternalDocs(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/example
export function isSchemaExample(value: unknown): value is types.SchemaExample {
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/additionalProperties
export function isSchemaAdditionalProperties(value: unknown): value is types.SchemaAdditionalProperties {
if(!_isNeverSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/schema/patternProperties/^x-
export function isSchemaX(value: unknown): value is types.SchemaX {
if(!_isReferenceSchemaX(value)) {
return false;
}
return true;
}
function _isReferenceSchemaX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/format
export function isFileSchemaFormat(value: unknown): value is types.FileSchemaFormat {
if(!_isStringFileSchemaFormat(value)) {
return false;
}
return true;
}
function _isStringFileSchemaFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/title
export function isFileSchemaPropertiesTitle(value: unknown): value is types.FileSchemaPropertiesTitle {
if(!_isReferenceFileSchemaPropertiesTitle(value)) {
return false;
}
return true;
}
function _isReferenceFileSchemaPropertiesTitle(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesTitle(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/description
export function isFileSchemaPropertiesDescription(value: unknown): value is types.FileSchemaPropertiesDescription {
if(!_isReferenceFileSchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isReferenceFileSchemaPropertiesDescription(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesDescription(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/default
export function isFileSchemaPropertiesDefault(value: unknown): value is types.FileSchemaPropertiesDefault {
if(!_isReferenceFileSchemaPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferenceFileSchemaPropertiesDefault(value: unknown): value is unknown {
if(!isDraft04SchemaPropertiesDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/required
export function isFileSchemaRequired(value: unknown): value is types.FileSchemaRequired {
if(!_isReferenceFileSchemaRequired(value)) {
return false;
}
return true;
}
function _isReferenceFileSchemaRequired(value: unknown): value is unknown {
if(!isStringArray(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/type
export function isFileSchemaType(value: unknown): value is types.FileSchemaType {
if(!_isStringFileSchemaType(value)) {
return false;
}
return true;
}
function _isStringFileSchemaType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "file") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/readOnly
export function isFileSchemaReadOnly(value: unknown): value is types.FileSchemaReadOnly {
if(!_isBooleanFileSchemaReadOnly(value)) {
return false;
}
return true;
}
function _isBooleanFileSchemaReadOnly(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/externalDocs
export function isFileSchemaPropertiesExternalDocs(value: unknown): value is types.FileSchemaPropertiesExternalDocs {
if(!_isReferenceFileSchemaPropertiesExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceFileSchemaPropertiesExternalDocs(value: unknown): value is unknown {
if(!isDefinitionsExternalDocs(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/example
export function isFileSchemaExample(value: unknown): value is types.FileSchemaExample {
return true;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/additionalProperties
export function isFileSchemaAdditionalProperties(value: unknown): value is types.FileSchemaAdditionalProperties {
if(!_isNeverFileSchemaAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverFileSchemaAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/fileSchema/patternProperties/^x-
export function isFileSchemaX(value: unknown): value is types.FileSchemaX {
if(!_isReferenceFileSchemaX(value)) {
return false;
}
return true;
}
function _isReferenceFileSchemaX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/type
export function isPrimitivesItemsType(value: unknown): value is types.PrimitivesItemsType {
if(!_isStringPrimitivesItemsType(value)) {
return false;
}
return true;
}
function _isStringPrimitivesItemsType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "string" && value !== "number" && value !== "integer" && value !== "boolean" && value !== "array") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/format
export function isPrimitivesItemsFormat(value: unknown): value is types.PrimitivesItemsFormat {
if(!_isStringPrimitivesItemsFormat(value)) {
return false;
}
return true;
}
function _isStringPrimitivesItemsFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/items
export function isPrimitivesItemsPropertiesItems(value: unknown): value is types.PrimitivesItemsPropertiesItems {
if(!_isReferencePrimitivesItemsPropertiesItems(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesItems(value: unknown): value is unknown {
if(!isPrimitivesItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/collectionFormat
export function isPrimitivesItemsPropertiesCollectionFormat(value: unknown): value is types.PrimitivesItemsPropertiesCollectionFormat {
if(!_isReferencePrimitivesItemsPropertiesCollectionFormat(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesCollectionFormat(value: unknown): value is unknown {
if(!isDefinitionsCollectionFormat(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/default
export function isPrimitivesItemsPropertiesDefault(value: unknown): value is types.PrimitivesItemsPropertiesDefault {
if(!_isReferencePrimitivesItemsPropertiesDefault(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesDefault(value: unknown): value is unknown {
if(!isDefinitionsDefault(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maximum
export function isPrimitivesItemsPropertiesMaximum(value: unknown): value is types.PrimitivesItemsPropertiesMaximum {
if(!_isReferencePrimitivesItemsPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMaximum(value: unknown): value is unknown {
if(!isDefinitionsMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/exclusiveMaximum
export function isPrimitivesItemsPropertiesExclusiveMaximum(value: unknown): value is types.PrimitivesItemsPropertiesExclusiveMaximum {
if(!_isReferencePrimitivesItemsPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMaximum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minimum
export function isPrimitivesItemsPropertiesMinimum(value: unknown): value is types.PrimitivesItemsPropertiesMinimum {
if(!_isReferencePrimitivesItemsPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMinimum(value: unknown): value is unknown {
if(!isDefinitionsMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/exclusiveMinimum
export function isPrimitivesItemsPropertiesExclusiveMinimum(value: unknown): value is types.PrimitivesItemsPropertiesExclusiveMinimum {
if(!_isReferencePrimitivesItemsPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(!isDefinitionsExclusiveMinimum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maxLength
export function isPrimitivesItemsPropertiesMaxLength(value: unknown): value is types.PrimitivesItemsPropertiesMaxLength {
if(!_isReferencePrimitivesItemsPropertiesMaxLength(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMaxLength(value: unknown): value is unknown {
if(!isDefinitionsMaxLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minLength
export function isPrimitivesItemsPropertiesMinLength(value: unknown): value is types.PrimitivesItemsPropertiesMinLength {
if(!_isReferencePrimitivesItemsPropertiesMinLength(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMinLength(value: unknown): value is unknown {
if(!isDefinitionsMinLength(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/pattern
export function isPrimitivesItemsPropertiesPattern(value: unknown): value is types.PrimitivesItemsPropertiesPattern {
if(!_isReferencePrimitivesItemsPropertiesPattern(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesPattern(value: unknown): value is unknown {
if(!isDefinitionsPattern(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maxItems
export function isPrimitivesItemsPropertiesMaxItems(value: unknown): value is types.PrimitivesItemsPropertiesMaxItems {
if(!_isReferencePrimitivesItemsPropertiesMaxItems(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMaxItems(value: unknown): value is unknown {
if(!isDefinitionsMaxItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minItems
export function isPrimitivesItemsPropertiesMinItems(value: unknown): value is types.PrimitivesItemsPropertiesMinItems {
if(!_isReferencePrimitivesItemsPropertiesMinItems(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMinItems(value: unknown): value is unknown {
if(!isDefinitionsMinItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/uniqueItems
export function isPrimitivesItemsPropertiesUniqueItems(value: unknown): value is types.PrimitivesItemsPropertiesUniqueItems {
if(!_isReferencePrimitivesItemsPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesUniqueItems(value: unknown): value is unknown {
if(!isDefinitionsUniqueItems(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/enum
export function isPrimitivesItemsPropertiesEnum(value: unknown): value is types.PrimitivesItemsPropertiesEnum {
if(!_isReferencePrimitivesItemsPropertiesEnum(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesEnum(value: unknown): value is unknown {
if(!isDefinitionsEnum(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/multipleOf
export function isPrimitivesItemsPropertiesMultipleOf(value: unknown): value is types.PrimitivesItemsPropertiesMultipleOf {
if(!_isReferencePrimitivesItemsPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsPropertiesMultipleOf(value: unknown): value is unknown {
if(!isDefinitionsMultipleOf(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/additionalProperties
export function isPrimitivesItemsAdditionalProperties(value: unknown): value is types.PrimitivesItemsAdditionalProperties {
if(!_isNeverPrimitivesItemsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverPrimitivesItemsAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/patternProperties/^x-
export function isPrimitivesItemsX(value: unknown): value is types.PrimitivesItemsX {
if(!_isReferencePrimitivesItemsX(value)) {
return false;
}
return true;
}
function _isReferencePrimitivesItemsX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/security/items
export function isSecurityItems(value: unknown): value is types.SecurityItems {
if(!_isReferenceSecurityItems(value)) {
return false;
}
return true;
}
function _isReferenceSecurityItems(value: unknown): value is unknown {
if(!isSecurityRequirement(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityRequirement/additionalProperties
export function isSecurityRequirementAdditionalProperties(value: unknown): value is types.SecurityRequirementAdditionalProperties {
if(!_isArraySecurityRequirementAdditionalProperties(value)) {
return false;
}
return true;
}
function _isArraySecurityRequirementAdditionalProperties(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isAdditionalPropertiesItems(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml/properties/name
export function isXmlName(value: unknown): value is types.XmlName {
if(!_isStringXmlName(value)) {
return false;
}
return true;
}
function _isStringXmlName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml/properties/namespace
export function isNamespace(value: unknown): value is types.Namespace {
if(!_isStringNamespace(value)) {
return false;
}
return true;
}
function _isStringNamespace(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml/properties/prefix
export function isPrefix(value: unknown): value is types.Prefix {
if(!_isStringPrefix(value)) {
return false;
}
return true;
}
function _isStringPrefix(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml/properties/attribute
export function isAttribute(value: unknown): value is types.Attribute {
if(!_isBooleanAttribute(value)) {
return false;
}
return true;
}
function _isBooleanAttribute(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml/properties/wrapped
export function isWrapped(value: unknown): value is types.Wrapped {
if(!_isBooleanWrapped(value)) {
return false;
}
return true;
}
function _isBooleanWrapped(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/xml/additionalProperties
export function isXmlAdditionalProperties(value: unknown): value is types.XmlAdditionalProperties {
if(!_isNeverXmlAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverXmlAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/xml/patternProperties/^x-
export function isXmlX(value: unknown): value is types.XmlX {
if(!_isReferenceXmlX(value)) {
return false;
}
return true;
}
function _isReferenceXmlX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/tag/properties/name
export function isTagName(value: unknown): value is types.TagName {
if(!_isStringTagName(value)) {
return false;
}
return true;
}
function _isStringTagName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/tag/properties/description
export function isTagPropertiesDescription(value: unknown): value is types.TagPropertiesDescription {
if(!_isStringTagPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringTagPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/tag/properties/externalDocs
export function isTagPropertiesExternalDocs(value: unknown): value is types.TagPropertiesExternalDocs {
if(!_isReferenceTagPropertiesExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceTagPropertiesExternalDocs(value: unknown): value is unknown {
if(!isDefinitionsExternalDocs(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/tag/additionalProperties
export function isTagAdditionalProperties(value: unknown): value is types.TagAdditionalProperties {
if(!_isNeverTagAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverTagAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/tag/patternProperties/^x-
export function isTagX(value: unknown): value is types.TagX {
if(!_isReferenceTagX(value)) {
return false;
}
return true;
}
function _isReferenceTagX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties
export function isSecurityDefinitionsAdditionalProperties(value: unknown): value is types.SecurityDefinitionsAdditionalProperties {
if(!_isOneOfSecurityDefinitionsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isOneOfSecurityDefinitionsAdditionalProperties(value: unknown): value is unknown {
let validCounter = 0;
if(isAdditionalPropertiesOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isAdditionalPropertiesOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isAdditionalPropertiesOneOf2(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isAdditionalPropertiesOneOf3(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isOneOf4(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isOneOf5(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/properties/type
export function isBasicAuthenticationSecurityType(value: unknown): value is types.BasicAuthenticationSecurityType {
if(!_isStringBasicAuthenticationSecurityType(value)) {
return false;
}
return true;
}
function _isStringBasicAuthenticationSecurityType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "basic") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/properties/description
export function isBasicAuthenticationSecurityPropertiesDescription(value: unknown): value is types.BasicAuthenticationSecurityPropertiesDescription {
if(!_isStringBasicAuthenticationSecurityPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringBasicAuthenticationSecurityPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/additionalProperties
export function isBasicAuthenticationSecurityAdditionalProperties(value: unknown): value is types.BasicAuthenticationSecurityAdditionalProperties {
if(!_isNeverBasicAuthenticationSecurityAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverBasicAuthenticationSecurityAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/patternProperties/^x-
export function isBasicAuthenticationSecurityX(value: unknown): value is types.BasicAuthenticationSecurityX {
if(!_isReferenceBasicAuthenticationSecurityX(value)) {
return false;
}
return true;
}
function _isReferenceBasicAuthenticationSecurityX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/type
export function isApiKeySecurityType(value: unknown): value is types.ApiKeySecurityType {
if(!_isStringApiKeySecurityType(value)) {
return false;
}
return true;
}
function _isStringApiKeySecurityType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "apiKey") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/name
export function isApiKeySecurityName(value: unknown): value is types.ApiKeySecurityName {
if(!_isStringApiKeySecurityName(value)) {
return false;
}
return true;
}
function _isStringApiKeySecurityName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/in
export function isApiKeySecurityIn(value: unknown): value is types.ApiKeySecurityIn {
if(!_isStringApiKeySecurityIn(value)) {
return false;
}
return true;
}
function _isStringApiKeySecurityIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "header" && value !== "query") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/description
export function isApiKeySecurityPropertiesDescription(value: unknown): value is types.ApiKeySecurityPropertiesDescription {
if(!_isStringApiKeySecurityPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringApiKeySecurityPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/additionalProperties
export function isApiKeySecurityAdditionalProperties(value: unknown): value is types.ApiKeySecurityAdditionalProperties {
if(!_isNeverApiKeySecurityAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverApiKeySecurityAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/patternProperties/^x-
export function isApiKeySecurityX(value: unknown): value is types.ApiKeySecurityX {
if(!_isReferenceApiKeySecurityX(value)) {
return false;
}
return true;
}
function _isReferenceApiKeySecurityX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/type
export function isOauth2ImplicitSecurityType(value: unknown): value is types.Oauth2ImplicitSecurityType {
if(!_isStringOauth2ImplicitSecurityType(value)) {
return false;
}
return true;
}
function _isStringOauth2ImplicitSecurityType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "oauth2") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/flow
export function isOauth2ImplicitSecurityFlow(value: unknown): value is types.Oauth2ImplicitSecurityFlow {
if(!_isStringOauth2ImplicitSecurityFlow(value)) {
return false;
}
return true;
}
function _isStringOauth2ImplicitSecurityFlow(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "implicit") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/scopes
export function isOauth2ImplicitSecurityScopes(value: unknown): value is types.Oauth2ImplicitSecurityScopes {
if(!_isReferenceOauth2ImplicitSecurityScopes(value)) {
return false;
}
return true;
}
function _isReferenceOauth2ImplicitSecurityScopes(value: unknown): value is unknown {
if(!isOauth2Scopes(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/authorizationUrl
export function isOauth2ImplicitSecurityAuthorizationUrl(value: unknown): value is types.Oauth2ImplicitSecurityAuthorizationUrl {
if(!_isStringOauth2ImplicitSecurityAuthorizationUrl(value)) {
return false;
}
return true;
}
function _isStringOauth2ImplicitSecurityAuthorizationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/description
export function isOauth2ImplicitSecurityPropertiesDescription(value: unknown): value is types.Oauth2ImplicitSecurityPropertiesDescription {
if(!_isStringOauth2ImplicitSecurityPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringOauth2ImplicitSecurityPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/additionalProperties
export function isOauth2ImplicitSecurityAdditionalProperties(value: unknown): value is types.Oauth2ImplicitSecurityAdditionalProperties {
if(!_isNeverOauth2ImplicitSecurityAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOauth2ImplicitSecurityAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/patternProperties/^x-
export function isOauth2ImplicitSecurityX(value: unknown): value is types.Oauth2ImplicitSecurityX {
if(!_isReferenceOauth2ImplicitSecurityX(value)) {
return false;
}
return true;
}
function _isReferenceOauth2ImplicitSecurityX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/type
export function isOauth2PasswordSecurityType(value: unknown): value is types.Oauth2PasswordSecurityType {
if(!_isStringOauth2PasswordSecurityType(value)) {
return false;
}
return true;
}
function _isStringOauth2PasswordSecurityType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "oauth2") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/flow
export function isOauth2PasswordSecurityFlow(value: unknown): value is types.Oauth2PasswordSecurityFlow {
if(!_isStringOauth2PasswordSecurityFlow(value)) {
return false;
}
return true;
}
function _isStringOauth2PasswordSecurityFlow(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "password") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/scopes
export function isOauth2PasswordSecurityScopes(value: unknown): value is types.Oauth2PasswordSecurityScopes {
if(!_isReferenceOauth2PasswordSecurityScopes(value)) {
return false;
}
return true;
}
function _isReferenceOauth2PasswordSecurityScopes(value: unknown): value is unknown {
if(!isOauth2Scopes(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/tokenUrl
export function isOauth2PasswordSecurityTokenUrl(value: unknown): value is types.Oauth2PasswordSecurityTokenUrl {
if(!_isStringOauth2PasswordSecurityTokenUrl(value)) {
return false;
}
return true;
}
function _isStringOauth2PasswordSecurityTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/description
export function isOauth2PasswordSecurityPropertiesDescription(value: unknown): value is types.Oauth2PasswordSecurityPropertiesDescription {
if(!_isStringOauth2PasswordSecurityPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringOauth2PasswordSecurityPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/additionalProperties
export function isOauth2PasswordSecurityAdditionalProperties(value: unknown): value is types.Oauth2PasswordSecurityAdditionalProperties {
if(!_isNeverOauth2PasswordSecurityAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOauth2PasswordSecurityAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/patternProperties/^x-
export function isOauth2PasswordSecurityX(value: unknown): value is types.Oauth2PasswordSecurityX {
if(!_isReferenceOauth2PasswordSecurityX(value)) {
return false;
}
return true;
}
function _isReferenceOauth2PasswordSecurityX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/type
export function isOauth2ApplicationSecurityType(value: unknown): value is types.Oauth2ApplicationSecurityType {
if(!_isStringOauth2ApplicationSecurityType(value)) {
return false;
}
return true;
}
function _isStringOauth2ApplicationSecurityType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "oauth2") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/flow
export function isOauth2ApplicationSecurityFlow(value: unknown): value is types.Oauth2ApplicationSecurityFlow {
if(!_isStringOauth2ApplicationSecurityFlow(value)) {
return false;
}
return true;
}
function _isStringOauth2ApplicationSecurityFlow(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "application") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/scopes
export function isOauth2ApplicationSecurityScopes(value: unknown): value is types.Oauth2ApplicationSecurityScopes {
if(!_isReferenceOauth2ApplicationSecurityScopes(value)) {
return false;
}
return true;
}
function _isReferenceOauth2ApplicationSecurityScopes(value: unknown): value is unknown {
if(!isOauth2Scopes(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/tokenUrl
export function isOauth2ApplicationSecurityTokenUrl(value: unknown): value is types.Oauth2ApplicationSecurityTokenUrl {
if(!_isStringOauth2ApplicationSecurityTokenUrl(value)) {
return false;
}
return true;
}
function _isStringOauth2ApplicationSecurityTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/description
export function isOauth2ApplicationSecurityPropertiesDescription(value: unknown): value is types.Oauth2ApplicationSecurityPropertiesDescription {
if(!_isStringOauth2ApplicationSecurityPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringOauth2ApplicationSecurityPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/additionalProperties
export function isOauth2ApplicationSecurityAdditionalProperties(value: unknown): value is types.Oauth2ApplicationSecurityAdditionalProperties {
if(!_isNeverOauth2ApplicationSecurityAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOauth2ApplicationSecurityAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/patternProperties/^x-
export function isOauth2ApplicationSecurityX(value: unknown): value is types.Oauth2ApplicationSecurityX {
if(!_isReferenceOauth2ApplicationSecurityX(value)) {
return false;
}
return true;
}
function _isReferenceOauth2ApplicationSecurityX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/type
export function isOauth2AccessCodeSecurityType(value: unknown): value is types.Oauth2AccessCodeSecurityType {
if(!_isStringOauth2AccessCodeSecurityType(value)) {
return false;
}
return true;
}
function _isStringOauth2AccessCodeSecurityType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "oauth2") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/flow
export function isOauth2AccessCodeSecurityFlow(value: unknown): value is types.Oauth2AccessCodeSecurityFlow {
if(!_isStringOauth2AccessCodeSecurityFlow(value)) {
return false;
}
return true;
}
function _isStringOauth2AccessCodeSecurityFlow(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "accessCode") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/scopes
export function isOauth2AccessCodeSecurityScopes(value: unknown): value is types.Oauth2AccessCodeSecurityScopes {
if(!_isReferenceOauth2AccessCodeSecurityScopes(value)) {
return false;
}
return true;
}
function _isReferenceOauth2AccessCodeSecurityScopes(value: unknown): value is unknown {
if(!isOauth2Scopes(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/authorizationUrl
export function isOauth2AccessCodeSecurityAuthorizationUrl(value: unknown): value is types.Oauth2AccessCodeSecurityAuthorizationUrl {
if(!_isStringOauth2AccessCodeSecurityAuthorizationUrl(value)) {
return false;
}
return true;
}
function _isStringOauth2AccessCodeSecurityAuthorizationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/tokenUrl
export function isOauth2AccessCodeSecurityTokenUrl(value: unknown): value is types.Oauth2AccessCodeSecurityTokenUrl {
if(!_isStringOauth2AccessCodeSecurityTokenUrl(value)) {
return false;
}
return true;
}
function _isStringOauth2AccessCodeSecurityTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/description
export function isOauth2AccessCodeSecurityPropertiesDescription(value: unknown): value is types.Oauth2AccessCodeSecurityPropertiesDescription {
if(!_isStringOauth2AccessCodeSecurityPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringOauth2AccessCodeSecurityPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/additionalProperties
export function isOauth2AccessCodeSecurityAdditionalProperties(value: unknown): value is types.Oauth2AccessCodeSecurityAdditionalProperties {
if(!_isNeverOauth2AccessCodeSecurityAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverOauth2AccessCodeSecurityAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/patternProperties/^x-
export function isOauth2AccessCodeSecurityX(value: unknown): value is types.Oauth2AccessCodeSecurityX {
if(!_isReferenceOauth2AccessCodeSecurityX(value)) {
return false;
}
return true;
}
function _isReferenceOauth2AccessCodeSecurityX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/oauth2Scopes/additionalProperties
export function isOauth2ScopesAdditionalProperties(value: unknown): value is types.Oauth2ScopesAdditionalProperties {
if(!_isStringOauth2ScopesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringOauth2ScopesAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/mediaTypeList/items
export function isMediaTypeListItems(value: unknown): value is types.MediaTypeListItems {
if(!_isReferenceMediaTypeListItems(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeListItems(value: unknown): value is unknown {
if(!isMimeType(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parametersList/items
export function isParametersListItems(value: unknown): value is types.ParametersListItems {
if(!_isOneOfParametersListItems(value)) {
return false;
}
return true;
}
function _isOneOfParametersListItems(value: unknown): value is unknown {
let validCounter = 0;
if(isItemsOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isItemsOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parametersList/additionalItems
export function isParametersListAdditionalItems(value: unknown): value is types.ParametersListAdditionalItems {
if(!_isNeverParametersListAdditionalItems(value)) {
return false;
}
return true;
}
function _isNeverParametersListAdditionalItems(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/schemesList/items
export function isSchemesListItems(value: unknown): value is types.SchemesListItems {
if(!_isStringSchemesListItems(value)) {
return false;
}
return true;
}
function _isStringSchemesListItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "http" && value !== "https" && value !== "ws" && value !== "wss") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/jsonReference/properties/$ref
export function isJsonReferenceRef(value: unknown): value is types.JsonReferenceRef {
if(!_isStringJsonReferenceRef(value)) {
return false;
}
return true;
}
function _isStringJsonReferenceRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/jsonReference/additionalProperties
export function isJsonReferenceAdditionalProperties(value: unknown): value is types.JsonReferenceAdditionalProperties {
if(!_isNeverJsonReferenceAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverJsonReferenceAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/properties/consumes/allOf/0
export function isSchemaJsonConsumesAllOf0(value: unknown): value is types.SchemaJsonConsumesAllOf0 {
if(!_isReferenceSchemaJsonConsumesAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonConsumesAllOf0(value: unknown): value is unknown {
if(!isMediaTypeList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/produces/allOf/0
export function isSchemaJsonProducesAllOf0(value: unknown): value is types.SchemaJsonProducesAllOf0 {
if(!_isReferenceSchemaJsonProducesAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonProducesAllOf0(value: unknown): value is unknown {
if(!isMediaTypeList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/properties/tags/items
export function isSchemaJsonTagsItems(value: unknown): value is types.SchemaJsonTagsItems {
if(!_isReferenceSchemaJsonTagsItems(value)) {
return false;
}
return true;
}
function _isReferenceSchemaJsonTagsItems(value: unknown): value is unknown {
if(!isTag(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/tags/items
export function isOperationTagsItems(value: unknown): value is types.OperationTagsItems {
if(!_isStringOperationTagsItems(value)) {
return false;
}
return true;
}
function _isStringOperationTagsItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/produces/allOf/0
export function isOperationProducesAllOf0(value: unknown): value is types.OperationProducesAllOf0 {
if(!_isReferenceOperationProducesAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceOperationProducesAllOf0(value: unknown): value is unknown {
if(!isMediaTypeList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/operation/properties/consumes/allOf/0
export function isOperationConsumesAllOf0(value: unknown): value is types.OperationConsumesAllOf0 {
if(!_isReferenceOperationConsumesAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceOperationConsumesAllOf0(value: unknown): value is unknown {
if(!isMediaTypeList(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/responses/not/additionalProperties
export function isNotAdditionalProperties(value: unknown): value is types.NotAdditionalProperties {
if(!_isNeverNotAdditionalProperties(value)) {
return false;
}
return true;
}
function _isNeverNotAdditionalProperties(value: unknown): value is unknown {
return false;
}
// http://swagger.io/v2/schema.json#/definitions/responses/not/patternProperties/^x-
export function isNotX(value: unknown): value is types.NotX {
if(!_isReferenceNotX(value)) {
return false;
}
return true;
}
function _isReferenceNotX(value: unknown): value is unknown {
if(!isVendorExtension(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/properties/schema/oneOf/0
export function isSchemaOneOf0(value: unknown): value is types.SchemaOneOf0 {
if(!_isReferenceSchemaOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceSchemaOneOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/response/properties/schema/oneOf/1
export function isSchemaOneOf1(value: unknown): value is types.SchemaOneOf1 {
if(!_isReferenceSchemaOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceSchemaOneOf1(value: unknown): value is unknown {
if(!isFileSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties/anyOf/0
export function isAdditionalPropertiesAnyOf0(value: unknown): value is types.AdditionalPropertiesAnyOf0 {
if(!_isReferenceAdditionalPropertiesAnyOf0(value)) {
return false;
}
return true;
}
function _isReferenceAdditionalPropertiesAnyOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties/anyOf/1
export function isAdditionalPropertiesAnyOf1(value: unknown): value is types.AdditionalPropertiesAnyOf1 {
if(!_isBooleanAdditionalPropertiesAnyOf1(value)) {
return false;
}
return true;
}
function _isBooleanAdditionalPropertiesAnyOf1(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/0
export function isItemsAnyOf0(value: unknown): value is types.ItemsAnyOf0 {
if(!_isReferenceItemsAnyOf0(value)) {
return false;
}
return true;
}
function _isReferenceItemsAnyOf0(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/1
export function isItemsAnyOf1(value: unknown): value is types.ItemsAnyOf1 {
if(!_isArrayItemsAnyOf1(value)) {
return false;
}
return true;
}
function _isArrayItemsAnyOf1(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isItemsAnyOf1Items(elementValue)) {
return false;
}
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/allOf/items
export function isAllOfItems(value: unknown): value is types.AllOfItems {
if(!_isReferenceAllOfItems(value)) {
return false;
}
return true;
}
function _isReferenceAllOfItems(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/properties/additionalProperties
export function isPropertiesPropertiesAdditionalProperties(value: unknown): value is types.PropertiesPropertiesAdditionalProperties {
if(!_isReferencePropertiesPropertiesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferencePropertiesPropertiesAdditionalProperties(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityRequirement/additionalProperties/items
export function isAdditionalPropertiesItems(value: unknown): value is types.AdditionalPropertiesItems {
if(!_isStringAdditionalPropertiesItems(value)) {
return false;
}
return true;
}
function _isStringAdditionalPropertiesItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/0
export function isAdditionalPropertiesOneOf0(value: unknown): value is types.AdditionalPropertiesOneOf0 {
if(!_isReferenceAdditionalPropertiesOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceAdditionalPropertiesOneOf0(value: unknown): value is unknown {
if(!isBasicAuthenticationSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/1
export function isAdditionalPropertiesOneOf1(value: unknown): value is types.AdditionalPropertiesOneOf1 {
if(!_isReferenceAdditionalPropertiesOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceAdditionalPropertiesOneOf1(value: unknown): value is unknown {
if(!isApiKeySecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/2
export function isAdditionalPropertiesOneOf2(value: unknown): value is types.AdditionalPropertiesOneOf2 {
if(!_isReferenceAdditionalPropertiesOneOf2(value)) {
return false;
}
return true;
}
function _isReferenceAdditionalPropertiesOneOf2(value: unknown): value is unknown {
if(!isOauth2ImplicitSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/3
export function isAdditionalPropertiesOneOf3(value: unknown): value is types.AdditionalPropertiesOneOf3 {
if(!_isReferenceAdditionalPropertiesOneOf3(value)) {
return false;
}
return true;
}
function _isReferenceAdditionalPropertiesOneOf3(value: unknown): value is unknown {
if(!isOauth2PasswordSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/4
export function isOneOf4(value: unknown): value is types.OneOf4 {
if(!_isReferenceOneOf4(value)) {
return false;
}
return true;
}
function _isReferenceOneOf4(value: unknown): value is unknown {
if(!isOauth2ApplicationSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/5
export function isOneOf5(value: unknown): value is types.OneOf5 {
if(!_isReferenceOneOf5(value)) {
return false;
}
return true;
}
function _isReferenceOneOf5(value: unknown): value is unknown {
if(!isOauth2AccessCodeSecurity(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parametersList/items/oneOf/0
export function isItemsOneOf0(value: unknown): value is types.ItemsOneOf0 {
if(!_isReferenceItemsOneOf0(value)) {
return false;
}
return true;
}
function _isReferenceItemsOneOf0(value: unknown): value is unknown {
if(!isParameter(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/parametersList/items/oneOf/1
export function isItemsOneOf1(value: unknown): value is types.ItemsOneOf1 {
if(!_isReferenceItemsOneOf1(value)) {
return false;
}
return true;
}
function _isReferenceItemsOneOf1(value: unknown): value is unknown {
if(!isJsonReference(value)) {
return false;
}
return true;
}
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/1/items
export function isItemsAnyOf1Items(value: unknown): value is types.ItemsAnyOf1Items {
if(!_isReferenceItemsAnyOf1Items(value)) {
return false;
}
return true;
}
function _isReferenceItemsAnyOf1Items(value: unknown): value is unknown {
if(!isDefinitionsSchema(value)) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/title
export function isDraft04SchemaPropertiesTitle(value: unknown): value is types.Draft04SchemaPropertiesTitle {
if(!_isStringDraft04SchemaPropertiesTitle(value)) {
return false;
}
return true;
}
function _isStringDraft04SchemaPropertiesTitle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/description
export function isDraft04SchemaPropertiesDescription(value: unknown): value is types.Draft04SchemaPropertiesDescription {
if(!_isStringDraft04SchemaPropertiesDescription(value)) {
return false;
}
return true;
}
function _isStringDraft04SchemaPropertiesDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/default
export function isDraft04SchemaPropertiesDefault(value: unknown): value is types.Draft04SchemaPropertiesDefault {
return true;
}
// http://json-schema.org/draft-04/schema#/properties/multipleOf
export function isDraft04SchemaPropertiesMultipleOf(value: unknown): value is types.Draft04SchemaPropertiesMultipleOf {
if(!_isNumberDraft04SchemaPropertiesMultipleOf(value)) {
return false;
}
return true;
}
function _isNumberDraft04SchemaPropertiesMultipleOf(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value) || value % 1 !== 0) {
return false;
}
if(value <= 0) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/maximum
export function isDraft04SchemaPropertiesMaximum(value: unknown): value is types.Draft04SchemaPropertiesMaximum {
if(!_isNumberDraft04SchemaPropertiesMaximum(value)) {
return false;
}
return true;
}
function _isNumberDraft04SchemaPropertiesMaximum(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value) || value % 1 !== 0) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum
export function isDraft04SchemaPropertiesExclusiveMaximum(value: unknown): value is types.Draft04SchemaPropertiesExclusiveMaximum {
if(!_isBooleanDraft04SchemaPropertiesExclusiveMaximum(value)) {
return false;
}
return true;
}
function _isBooleanDraft04SchemaPropertiesExclusiveMaximum(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/minimum
export function isDraft04SchemaPropertiesMinimum(value: unknown): value is types.Draft04SchemaPropertiesMinimum {
if(!_isNumberDraft04SchemaPropertiesMinimum(value)) {
return false;
}
return true;
}
function _isNumberDraft04SchemaPropertiesMinimum(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value) || value % 1 !== 0) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum
export function isDraft04SchemaPropertiesExclusiveMinimum(value: unknown): value is types.Draft04SchemaPropertiesExclusiveMinimum {
if(!_isBooleanDraft04SchemaPropertiesExclusiveMinimum(value)) {
return false;
}
return true;
}
function _isBooleanDraft04SchemaPropertiesExclusiveMinimum(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/positiveInteger
export function isPositiveInteger(value: unknown): value is types.PositiveInteger {
if(!_isIntegerPositiveInteger(value)) {
return false;
}
return true;
}
function _isIntegerPositiveInteger(value: unknown): value is unknown {
if(typeof value !== "number" || isNaN(value)) {
return false;
}
if(value < 0) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0
export function isPositiveIntegerDefault0(value: unknown): value is types.PositiveIntegerDefault0 {
if(!_isAllOfPositiveIntegerDefault0(value)) {
return false;
}
return true;
}
function _isAllOfPositiveIntegerDefault0(value: unknown): value is unknown {
if(!isPositiveIntegerDefault0AllOf0(value)) {
return false;
}
if(!isAllOf1(value)) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/0
export function isPositiveIntegerDefault0AllOf0(value: unknown): value is types.PositiveIntegerDefault0AllOf0 {
if(!_isReferencePositiveIntegerDefault0AllOf0(value)) {
return false;
}
return true;
}
function _isReferencePositiveIntegerDefault0AllOf0(value: unknown): value is unknown {
if(!isPositiveInteger(value)) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/1
export function isAllOf1(value: unknown): value is types.AllOf1 {
return true;
}
// http://json-schema.org/draft-04/schema#/properties/pattern
export function isDraft04SchemaPropertiesPattern(value: unknown): value is types.Draft04SchemaPropertiesPattern {
if(!_isStringDraft04SchemaPropertiesPattern(value)) {
return false;
}
return true;
}
function _isStringDraft04SchemaPropertiesPattern(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/uniqueItems
export function isDraft04SchemaPropertiesUniqueItems(value: unknown): value is types.Draft04SchemaPropertiesUniqueItems {
if(!_isBooleanDraft04SchemaPropertiesUniqueItems(value)) {
return false;
}
return true;
}
function _isBooleanDraft04SchemaPropertiesUniqueItems(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/enum
export function isDraft04SchemaPropertiesEnum(value: unknown): value is types.Draft04SchemaPropertiesEnum {
if(!_isArrayDraft04SchemaPropertiesEnum(value)) {
return false;
}
return true;
}
function _isArrayDraft04SchemaPropertiesEnum(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/stringArray
export function isStringArray(value: unknown): value is types.StringArray {
if(!_isArrayStringArray(value)) {
return false;
}
return true;
}
function _isArrayStringArray(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isStringArrayItems(elementValue)) {
return false;
}
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/stringArray/items
export function isStringArrayItems(value: unknown): value is types.StringArrayItems {
if(!_isStringStringArrayItems(value)) {
return false;
}
return true;
}
function _isStringStringArrayItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/type
export function isDraft04SchemaType(value: unknown): value is types.Draft04SchemaType {
if(!_isAnyOfDraft04SchemaType(value)) {
return false;
}
return true;
}
function _isAnyOfDraft04SchemaType(value: unknown): value is unknown {
if(isTypeAnyOf0(value)) {
return true;
}
if(isTypeAnyOf1(value)) {
return true;
}
return false;
}
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/0
export function isTypeAnyOf0(value: unknown): value is types.TypeAnyOf0 {
if(!_isReferenceTypeAnyOf0(value)) {
return false;
}
return true;
}
function _isReferenceTypeAnyOf0(value: unknown): value is unknown {
if(!isSimpleTypes(value)) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/1
export function isTypeAnyOf1(value: unknown): value is types.TypeAnyOf1 {
if(!_isArrayTypeAnyOf1(value)) {
return false;
}
return true;
}
function _isArrayTypeAnyOf1(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
const elementValueSeen = new Set<unknown>();
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(elementValueSeen.has(elementValue)) {
return false;
}
elementValueSeen.add(elementValue);
if(!isTypeAnyOf1Items(elementValue)) {
return false;
}
}
return true;
}
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/1/items
export function isTypeAnyOf1Items(value: unknown): value is types.TypeAnyOf1Items {
if(!_isReferenceTypeAnyOf1Items(value)) {
return false;
}
return true;
}
function _isReferenceTypeAnyOf1Items(value: unknown): value is unknown {
if(!isSimpleTypes(value)) {
return false;
}
return true;
}
// http://json-schema.org/draft-04/schema#/definitions/simpleTypes
export function isSimpleTypes(value: unknown): value is types.SimpleTypes {
if(!_isStringSimpleTypes(value)) {
return false;
}
return true;
}
function _isStringSimpleTypes(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "array" && value !== "boolean" && value !== "integer" && value !== "null" && value !== "number" && value !== "object" && value !== "string") {
return false;
}
return true;
}
