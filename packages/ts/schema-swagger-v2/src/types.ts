// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.9.6                          -- www.JsonSchema42.org
// http://swagger.io/v2/schema.json#
/**
A JSON Schema for Swagger 2.0 API.
*/
export type SchemaJson = ((
{
"swagger": Swagger,
"info": PropertiesInfo,
"host"?: Host,
"basePath"?: BasePath,
"schemes"?: PropertiesSchemes,
"consumes"?: PropertiesConsumes,
"produces"?: PropertiesProduces,
"paths": PropertiesPaths,
"definitions"?: PropertiesDefinitions,
"parameters"?: PropertiesParameters,
"responses"?: PropertiesResponses,
"security"?: PropertiesSecurity,
"securityDefinitions"?: PropertiesSecurityDefinitions,
"tags"?: PropertiesTags,
"externalDocs"?: PropertiesExternalDocs,
[key: string]: V2AdditionalProperties |
V2PatternPropertiesX |
Swagger |
PropertiesInfo |
Host |
BasePath |
PropertiesSchemes |
PropertiesConsumes |
PropertiesProduces |
PropertiesPaths |
PropertiesDefinitions |
PropertiesParameters |
PropertiesResponses |
PropertiesSecurity |
PropertiesSecurityDefinitions |
PropertiesTags |
PropertiesExternalDocs |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/info
/**
General information about the API.
*/
export type DefinitionsInfo = ((
{
"title": InfoTitle,
"version": Version,
"description"?: InfoDescription,
"termsOfService"?: TermsOfService,
"contact"?: InfoContact,
"license"?: InfoLicense,
[key: string]: InfoAdditionalProperties |
InfoX |
InfoTitle |
Version |
InfoDescription |
TermsOfService |
InfoContact |
InfoLicense |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/contact
/**
Contact information for the owners of the API.
*/
export type DefinitionsContact = ((
{
"name"?: ContactName,
"url"?: ContactUrl,
"email"?: Email,
[key: string]: ContactAdditionalProperties |
ContactX |
ContactName |
ContactUrl |
Email |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/license
export type DefinitionsLicense = ((
{
"name": LicenseName,
"url"?: LicenseUrl,
[key: string]: LicenseAdditionalProperties |
LicenseX |
LicenseName |
LicenseUrl |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/paths
/**
Relative paths to the individual endpoints. They must be relative to the 'basePath'.
*/
export type DefinitionsPaths = ((
{
[key: string]: PathsAdditionalProperties |
PathsX |
PatternProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/definitions
/**
One or more JSON objects describing the schemas being consumed and produced by the API.
*/
export type DefinitionsDefinitions = ((
{
[key: string]: DefinitionsAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/parameterDefinitions
/**
One or more JSON representations for parameters
*/
export type ParameterDefinitions = ((
{
[key: string]: ParameterDefinitionsAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/responseDefinitions
/**
One or more JSON representations for parameters
*/
export type ResponseDefinitions = ((
{
[key: string]: ResponseDefinitionsAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/externalDocs
/**
information about external documentation
*/
export type DefinitionsExternalDocs = ((
{
"description"?: ExternalDocsDescription,
"url": ExternalDocsUrl,
[key: string]: ExternalDocsAdditionalProperties |
ExternalDocsX |
ExternalDocsDescription |
ExternalDocsUrl |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/examples
export type DefinitionsExamples = ((
{
[key: string]: ExamplesAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/mimeType
/**
The MIME type of the HTTP message.
*/
export type MimeType = ((string));
// http://swagger.io/v2/schema.json#/definitions/operation
export type Operation = ((
{
"tags"?: OperationTags,
"summary"?: Summary,
"description"?: OperationDescription,
"externalDocs"?: OperationExternalDocs,
"operationId"?: OperationId,
"produces"?: OperationProduces,
"consumes"?: OperationConsumes,
"parameters"?: OperationParameters,
"responses": OperationResponses,
"schemes"?: OperationSchemes,
"deprecated"?: Deprecated,
"security"?: OperationSecurity,
[key: string]: OperationAdditionalProperties |
OperationX |
OperationTags |
Summary |
OperationDescription |
OperationExternalDocs |
OperationId |
OperationProduces |
OperationConsumes |
OperationParameters |
OperationResponses |
OperationSchemes |
Deprecated |
OperationSecurity |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/pathItem
export type PathItem = ((
{
"$ref"?: PathItemRef,
"get"?: Get,
"put"?: Put,
"post"?: Post,
"delete"?: Delete,
"options"?: Options,
"head"?: Head,
"patch"?: Patch,
"parameters"?: PathItemParameters,
[key: string]: PathItemAdditionalProperties |
PathItemX |
PathItemRef |
Get |
Put |
Post |
Delete |
Options |
Head |
Patch |
PathItemParameters |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/responses
/**
Response objects names can either be any valid HTTP status code or 'default'.
*/
export type DefinitionsResponses = (Not) &
((
{
[key: string]: ResponsesAdditionalProperties |
Responses093Default |
ResponsesX,
}
));
// http://swagger.io/v2/schema.json#/definitions/responseValue
export type ResponseValue = (ResponseValue0 |
ResponseValue1);
// http://swagger.io/v2/schema.json#/definitions/response
export type Response = ((
{
"description": ResponseDescription,
"schema"?: ResponseSchema,
"headers"?: ResponseHeaders,
"examples"?: ResponseExamples,
[key: string]: ResponseAdditionalProperties |
ResponseX |
ResponseDescription |
ResponseSchema |
ResponseHeaders |
ResponseExamples |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/headers
export type DefinitionsHeaders = ((
{
[key: string]: HeadersAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/header
export type Header = ((
{
"type": HeaderType,
"format"?: HeaderFormat,
"items"?: HeaderItems,
"collectionFormat"?: HeaderCollectionFormat,
"default"?: HeaderDefault,
"maximum"?: HeaderMaximum,
"exclusiveMaximum"?: HeaderExclusiveMaximum,
"minimum"?: HeaderMinimum,
"exclusiveMinimum"?: HeaderExclusiveMinimum,
"maxLength"?: HeaderMaxLength,
"minLength"?: HeaderMinLength,
"pattern"?: HeaderPattern,
"maxItems"?: HeaderMaxItems,
"minItems"?: HeaderMinItems,
"uniqueItems"?: HeaderUniqueItems,
"enum"?: HeaderEnum,
"multipleOf"?: HeaderMultipleOf,
"description"?: HeaderDescription,
[key: string]: HeaderAdditionalProperties |
HeaderX |
HeaderType |
HeaderFormat |
HeaderItems |
HeaderCollectionFormat |
HeaderDefault |
HeaderMaximum |
HeaderExclusiveMaximum |
HeaderMinimum |
HeaderExclusiveMinimum |
HeaderMaxLength |
HeaderMinLength |
HeaderPattern |
HeaderMaxItems |
HeaderMinItems |
HeaderUniqueItems |
HeaderEnum |
HeaderMultipleOf |
HeaderDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/vendorExtension
/**
Any property starting with x- is valid.
*/
export type VendorExtension = unknown;
// http://swagger.io/v2/schema.json#/definitions/bodyParameter
export type BodyParameter = ((
{
"description"?: BodyParameterDescription,
"name": BodyParameterName,
"in": BodyParameterIn,
"required"?: BodyParameterRequired,
"schema": BodyParameterSchema,
[key: string]: BodyParameterAdditionalProperties |
BodyParameterX |
BodyParameterDescription |
BodyParameterName |
BodyParameterIn |
BodyParameterRequired |
BodyParameterSchema |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema
export type HeaderParameterSubSchema = ((
{
"required"?: HeaderParameterSubSchemaRequired,
"in"?: HeaderParameterSubSchemaIn,
"description"?: HeaderParameterSubSchemaDescription,
"name"?: HeaderParameterSubSchemaName,
"type"?: HeaderParameterSubSchemaType,
"format"?: HeaderParameterSubSchemaFormat,
"items"?: HeaderParameterSubSchemaItems,
"collectionFormat"?: HeaderParameterSubSchemaCollectionFormat,
"default"?: HeaderParameterSubSchemaDefault,
"maximum"?: HeaderParameterSubSchemaMaximum,
"exclusiveMaximum"?: HeaderParameterSubSchemaExclusiveMaximum,
"minimum"?: HeaderParameterSubSchemaMinimum,
"exclusiveMinimum"?: HeaderParameterSubSchemaExclusiveMinimum,
"maxLength"?: HeaderParameterSubSchemaMaxLength,
"minLength"?: HeaderParameterSubSchemaMinLength,
"pattern"?: HeaderParameterSubSchemaPattern,
"maxItems"?: HeaderParameterSubSchemaMaxItems,
"minItems"?: HeaderParameterSubSchemaMinItems,
"uniqueItems"?: HeaderParameterSubSchemaUniqueItems,
"enum"?: HeaderParameterSubSchemaEnum,
"multipleOf"?: HeaderParameterSubSchemaMultipleOf,
[key: string]: HeaderParameterSubSchemaAdditionalProperties |
HeaderParameterSubSchemaX |
HeaderParameterSubSchemaRequired |
HeaderParameterSubSchemaIn |
HeaderParameterSubSchemaDescription |
HeaderParameterSubSchemaName |
HeaderParameterSubSchemaType |
HeaderParameterSubSchemaFormat |
HeaderParameterSubSchemaItems |
HeaderParameterSubSchemaCollectionFormat |
HeaderParameterSubSchemaDefault |
HeaderParameterSubSchemaMaximum |
HeaderParameterSubSchemaExclusiveMaximum |
HeaderParameterSubSchemaMinimum |
HeaderParameterSubSchemaExclusiveMinimum |
HeaderParameterSubSchemaMaxLength |
HeaderParameterSubSchemaMinLength |
HeaderParameterSubSchemaPattern |
HeaderParameterSubSchemaMaxItems |
HeaderParameterSubSchemaMinItems |
HeaderParameterSubSchemaUniqueItems |
HeaderParameterSubSchemaEnum |
HeaderParameterSubSchemaMultipleOf |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema
export type QueryParameterSubSchema = ((
{
"required"?: QueryParameterSubSchemaRequired,
"in"?: QueryParameterSubSchemaIn,
"description"?: QueryParameterSubSchemaDescription,
"name"?: QueryParameterSubSchemaName,
"allowEmptyValue"?: QueryParameterSubSchemaAllowEmptyValue,
"type"?: QueryParameterSubSchemaType,
"format"?: QueryParameterSubSchemaFormat,
"items"?: QueryParameterSubSchemaItems,
"collectionFormat"?: QueryParameterSubSchemaCollectionFormat,
"default"?: QueryParameterSubSchemaDefault,
"maximum"?: QueryParameterSubSchemaMaximum,
"exclusiveMaximum"?: QueryParameterSubSchemaExclusiveMaximum,
"minimum"?: QueryParameterSubSchemaMinimum,
"exclusiveMinimum"?: QueryParameterSubSchemaExclusiveMinimum,
"maxLength"?: QueryParameterSubSchemaMaxLength,
"minLength"?: QueryParameterSubSchemaMinLength,
"pattern"?: QueryParameterSubSchemaPattern,
"maxItems"?: QueryParameterSubSchemaMaxItems,
"minItems"?: QueryParameterSubSchemaMinItems,
"uniqueItems"?: QueryParameterSubSchemaUniqueItems,
"enum"?: QueryParameterSubSchemaEnum,
"multipleOf"?: QueryParameterSubSchemaMultipleOf,
[key: string]: QueryParameterSubSchemaAdditionalProperties |
QueryParameterSubSchemaX |
QueryParameterSubSchemaRequired |
QueryParameterSubSchemaIn |
QueryParameterSubSchemaDescription |
QueryParameterSubSchemaName |
QueryParameterSubSchemaAllowEmptyValue |
QueryParameterSubSchemaType |
QueryParameterSubSchemaFormat |
QueryParameterSubSchemaItems |
QueryParameterSubSchemaCollectionFormat |
QueryParameterSubSchemaDefault |
QueryParameterSubSchemaMaximum |
QueryParameterSubSchemaExclusiveMaximum |
QueryParameterSubSchemaMinimum |
QueryParameterSubSchemaExclusiveMinimum |
QueryParameterSubSchemaMaxLength |
QueryParameterSubSchemaMinLength |
QueryParameterSubSchemaPattern |
QueryParameterSubSchemaMaxItems |
QueryParameterSubSchemaMinItems |
QueryParameterSubSchemaUniqueItems |
QueryParameterSubSchemaEnum |
QueryParameterSubSchemaMultipleOf |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema
export type FormDataParameterSubSchema = ((
{
"required"?: FormDataParameterSubSchemaRequired,
"in"?: FormDataParameterSubSchemaIn,
"description"?: FormDataParameterSubSchemaDescription,
"name"?: FormDataParameterSubSchemaName,
"allowEmptyValue"?: FormDataParameterSubSchemaAllowEmptyValue,
"type"?: FormDataParameterSubSchemaType,
"format"?: FormDataParameterSubSchemaFormat,
"items"?: FormDataParameterSubSchemaItems,
"collectionFormat"?: FormDataParameterSubSchemaCollectionFormat,
"default"?: FormDataParameterSubSchemaDefault,
"maximum"?: FormDataParameterSubSchemaMaximum,
"exclusiveMaximum"?: FormDataParameterSubSchemaExclusiveMaximum,
"minimum"?: FormDataParameterSubSchemaMinimum,
"exclusiveMinimum"?: FormDataParameterSubSchemaExclusiveMinimum,
"maxLength"?: FormDataParameterSubSchemaMaxLength,
"minLength"?: FormDataParameterSubSchemaMinLength,
"pattern"?: FormDataParameterSubSchemaPattern,
"maxItems"?: FormDataParameterSubSchemaMaxItems,
"minItems"?: FormDataParameterSubSchemaMinItems,
"uniqueItems"?: FormDataParameterSubSchemaUniqueItems,
"enum"?: FormDataParameterSubSchemaEnum,
"multipleOf"?: FormDataParameterSubSchemaMultipleOf,
[key: string]: FormDataParameterSubSchemaAdditionalProperties |
FormDataParameterSubSchemaX |
FormDataParameterSubSchemaRequired |
FormDataParameterSubSchemaIn |
FormDataParameterSubSchemaDescription |
FormDataParameterSubSchemaName |
FormDataParameterSubSchemaAllowEmptyValue |
FormDataParameterSubSchemaType |
FormDataParameterSubSchemaFormat |
FormDataParameterSubSchemaItems |
FormDataParameterSubSchemaCollectionFormat |
FormDataParameterSubSchemaDefault |
FormDataParameterSubSchemaMaximum |
FormDataParameterSubSchemaExclusiveMaximum |
FormDataParameterSubSchemaMinimum |
FormDataParameterSubSchemaExclusiveMinimum |
FormDataParameterSubSchemaMaxLength |
FormDataParameterSubSchemaMinLength |
FormDataParameterSubSchemaPattern |
FormDataParameterSubSchemaMaxItems |
FormDataParameterSubSchemaMinItems |
FormDataParameterSubSchemaUniqueItems |
FormDataParameterSubSchemaEnum |
FormDataParameterSubSchemaMultipleOf |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema
export type PathParameterSubSchema = ((
{
"required": PathParameterSubSchemaRequired,
"in"?: PathParameterSubSchemaIn,
"description"?: PathParameterSubSchemaDescription,
"name"?: PathParameterSubSchemaName,
"type"?: PathParameterSubSchemaType,
"format"?: PathParameterSubSchemaFormat,
"items"?: PathParameterSubSchemaItems,
"collectionFormat"?: PathParameterSubSchemaCollectionFormat,
"default"?: PathParameterSubSchemaDefault,
"maximum"?: PathParameterSubSchemaMaximum,
"exclusiveMaximum"?: PathParameterSubSchemaExclusiveMaximum,
"minimum"?: PathParameterSubSchemaMinimum,
"exclusiveMinimum"?: PathParameterSubSchemaExclusiveMinimum,
"maxLength"?: PathParameterSubSchemaMaxLength,
"minLength"?: PathParameterSubSchemaMinLength,
"pattern"?: PathParameterSubSchemaPattern,
"maxItems"?: PathParameterSubSchemaMaxItems,
"minItems"?: PathParameterSubSchemaMinItems,
"uniqueItems"?: PathParameterSubSchemaUniqueItems,
"enum"?: PathParameterSubSchemaEnum,
"multipleOf"?: PathParameterSubSchemaMultipleOf,
[key: string]: PathParameterSubSchemaAdditionalProperties |
PathParameterSubSchemaX |
PathParameterSubSchemaRequired |
PathParameterSubSchemaIn |
PathParameterSubSchemaDescription |
PathParameterSubSchemaName |
PathParameterSubSchemaType |
PathParameterSubSchemaFormat |
PathParameterSubSchemaItems |
PathParameterSubSchemaCollectionFormat |
PathParameterSubSchemaDefault |
PathParameterSubSchemaMaximum |
PathParameterSubSchemaExclusiveMaximum |
PathParameterSubSchemaMinimum |
PathParameterSubSchemaExclusiveMinimum |
PathParameterSubSchemaMaxLength |
PathParameterSubSchemaMinLength |
PathParameterSubSchemaPattern |
PathParameterSubSchemaMaxItems |
PathParameterSubSchemaMinItems |
PathParameterSubSchemaUniqueItems |
PathParameterSubSchemaEnum |
PathParameterSubSchemaMultipleOf |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter
export type NonBodyParameter = (NonBodyParameter0 |
NonBodyParameter1 |
NonBodyParameter2 |
NonBodyParameter3) &
((
{
}
));
// http://swagger.io/v2/schema.json#/definitions/parameter
export type Parameter = (Parameter0 |
Parameter1);
// http://swagger.io/v2/schema.json#/definitions/schema
/**
A deterministic version of a JSON Schema object.
*/
export type DefinitionsSchema = ((
{
"$ref"?: SchemaRef,
"format"?: SchemaFormat,
"title"?: SchemaTitle,
"description"?: SchemaDescription,
"default"?: SchemaDefault,
"multipleOf"?: SchemaMultipleOf,
"maximum"?: SchemaMaximum,
"exclusiveMaximum"?: SchemaExclusiveMaximum,
"minimum"?: SchemaMinimum,
"exclusiveMinimum"?: SchemaExclusiveMinimum,
"maxLength"?: SchemaMaxLength,
"minLength"?: SchemaMinLength,
"pattern"?: SchemaPattern,
"maxItems"?: SchemaMaxItems,
"minItems"?: SchemaMinItems,
"uniqueItems"?: SchemaUniqueItems,
"maxProperties"?: MaxProperties,
"minProperties"?: MinProperties,
"required"?: SchemaRequired,
"enum"?: SchemaEnum,
"additionalProperties"?: PropertiesSchemaAdditionalProperties,
"type"?: SchemaType,
"items"?: SchemaItems,
"allOf"?: AllOf,
"properties"?: Properties,
"discriminator"?: Discriminator,
"readOnly"?: SchemaReadOnly,
"xml"?: SchemaXml,
"externalDocs"?: SchemaExternalDocs,
"example"?: SchemaExample,
[key: string]: DefinitionsSchemaAdditionalProperties |
SchemaPatternPropertiesX |
SchemaRef |
SchemaFormat |
SchemaTitle |
SchemaDescription |
SchemaDefault |
SchemaMultipleOf |
SchemaMaximum |
SchemaExclusiveMaximum |
SchemaMinimum |
SchemaExclusiveMinimum |
SchemaMaxLength |
SchemaMinLength |
SchemaPattern |
SchemaMaxItems |
SchemaMinItems |
SchemaUniqueItems |
MaxProperties |
MinProperties |
SchemaRequired |
SchemaEnum |
PropertiesSchemaAdditionalProperties |
SchemaType |
SchemaItems |
AllOf |
Properties |
Discriminator |
SchemaReadOnly |
SchemaXml |
SchemaExternalDocs |
SchemaExample |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/fileSchema
/**
A deterministic version of a JSON Schema object.
*/
export type FileSchema = ((
{
"format"?: FileSchemaFormat,
"title"?: FileSchemaTitle,
"description"?: FileSchemaDescription,
"default"?: FileSchemaDefault,
"required"?: FileSchemaRequired,
"type": FileSchemaType,
"readOnly"?: FileSchemaReadOnly,
"externalDocs"?: FileSchemaExternalDocs,
"example"?: FileSchemaExample,
[key: string]: FileSchemaAdditionalProperties |
FileSchemaX |
FileSchemaFormat |
FileSchemaTitle |
FileSchemaDescription |
FileSchemaDefault |
FileSchemaRequired |
FileSchemaType |
FileSchemaReadOnly |
FileSchemaExternalDocs |
FileSchemaExample |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/primitivesItems
export type PrimitivesItems = ((
{
"type"?: PrimitivesItemsType,
"format"?: PrimitivesItemsFormat,
"items"?: PrimitivesItemsItems,
"collectionFormat"?: PrimitivesItemsCollectionFormat,
"default"?: PrimitivesItemsDefault,
"maximum"?: PrimitivesItemsMaximum,
"exclusiveMaximum"?: PrimitivesItemsExclusiveMaximum,
"minimum"?: PrimitivesItemsMinimum,
"exclusiveMinimum"?: PrimitivesItemsExclusiveMinimum,
"maxLength"?: PrimitivesItemsMaxLength,
"minLength"?: PrimitivesItemsMinLength,
"pattern"?: PrimitivesItemsPattern,
"maxItems"?: PrimitivesItemsMaxItems,
"minItems"?: PrimitivesItemsMinItems,
"uniqueItems"?: PrimitivesItemsUniqueItems,
"enum"?: PrimitivesItemsEnum,
"multipleOf"?: PrimitivesItemsMultipleOf,
[key: string]: PrimitivesItemsAdditionalProperties |
PrimitivesItemsX |
PrimitivesItemsType |
PrimitivesItemsFormat |
PrimitivesItemsItems |
PrimitivesItemsCollectionFormat |
PrimitivesItemsDefault |
PrimitivesItemsMaximum |
PrimitivesItemsExclusiveMaximum |
PrimitivesItemsMinimum |
PrimitivesItemsExclusiveMinimum |
PrimitivesItemsMaxLength |
PrimitivesItemsMinLength |
PrimitivesItemsPattern |
PrimitivesItemsMaxItems |
PrimitivesItemsMinItems |
PrimitivesItemsUniqueItems |
PrimitivesItemsEnum |
PrimitivesItemsMultipleOf |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/security
export type DefinitionsSecurity = (((SecurityItems)[]));
// http://swagger.io/v2/schema.json#/definitions/securityRequirement
export type SecurityRequirement = ((
{
[key: string]: SecurityRequirementAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/xml
export type DefinitionsXml = ((
{
"name"?: XmlName,
"namespace"?: Namespace,
"prefix"?: Prefix,
"attribute"?: Attribute,
"wrapped"?: Wrapped,
[key: string]: XmlAdditionalProperties |
XmlX |
XmlName |
Namespace |
Prefix |
Attribute |
Wrapped |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/tag
export type Tag = ((
{
"name": TagName,
"description"?: TagDescription,
"externalDocs"?: TagExternalDocs,
[key: string]: TagAdditionalProperties |
TagX |
TagName |
TagDescription |
TagExternalDocs |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions
export type DefinitionsSecurityDefinitions = ((
{
[key: string]: SecurityDefinitionsAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity
export type BasicAuthenticationSecurity = ((
{
"type": BasicAuthenticationSecurityType,
"description"?: BasicAuthenticationSecurityDescription,
[key: string]: BasicAuthenticationSecurityAdditionalProperties |
BasicAuthenticationSecurityX |
BasicAuthenticationSecurityType |
BasicAuthenticationSecurityDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity
export type ApiKeySecurity = ((
{
"type": ApiKeySecurityType,
"name": ApiKeySecurityName,
"in": ApiKeySecurityIn,
"description"?: ApiKeySecurityDescription,
[key: string]: ApiKeySecurityAdditionalProperties |
ApiKeySecurityX |
ApiKeySecurityType |
ApiKeySecurityName |
ApiKeySecurityIn |
ApiKeySecurityDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity
export type Oauth2ImplicitSecurity = ((
{
"type": Oauth2ImplicitSecurityType,
"flow": Oauth2ImplicitSecurityFlow,
"scopes"?: Oauth2ImplicitSecurityScopes,
"authorizationUrl": Oauth2ImplicitSecurityAuthorizationUrl,
"description"?: Oauth2ImplicitSecurityDescription,
[key: string]: Oauth2ImplicitSecurityAdditionalProperties |
Oauth2ImplicitSecurityX |
Oauth2ImplicitSecurityType |
Oauth2ImplicitSecurityFlow |
Oauth2ImplicitSecurityScopes |
Oauth2ImplicitSecurityAuthorizationUrl |
Oauth2ImplicitSecurityDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity
export type Oauth2PasswordSecurity = ((
{
"type": Oauth2PasswordSecurityType,
"flow": Oauth2PasswordSecurityFlow,
"scopes"?: Oauth2PasswordSecurityScopes,
"tokenUrl": Oauth2PasswordSecurityTokenUrl,
"description"?: Oauth2PasswordSecurityDescription,
[key: string]: Oauth2PasswordSecurityAdditionalProperties |
Oauth2PasswordSecurityX |
Oauth2PasswordSecurityType |
Oauth2PasswordSecurityFlow |
Oauth2PasswordSecurityScopes |
Oauth2PasswordSecurityTokenUrl |
Oauth2PasswordSecurityDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity
export type Oauth2ApplicationSecurity = ((
{
"type": Oauth2ApplicationSecurityType,
"flow": Oauth2ApplicationSecurityFlow,
"scopes"?: Oauth2ApplicationSecurityScopes,
"tokenUrl": Oauth2ApplicationSecurityTokenUrl,
"description"?: Oauth2ApplicationSecurityDescription,
[key: string]: Oauth2ApplicationSecurityAdditionalProperties |
Oauth2ApplicationSecurityX |
Oauth2ApplicationSecurityType |
Oauth2ApplicationSecurityFlow |
Oauth2ApplicationSecurityScopes |
Oauth2ApplicationSecurityTokenUrl |
Oauth2ApplicationSecurityDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity
export type Oauth2AccessCodeSecurity = ((
{
"type": Oauth2AccessCodeSecurityType,
"flow": Oauth2AccessCodeSecurityFlow,
"scopes"?: Oauth2AccessCodeSecurityScopes,
"authorizationUrl": Oauth2AccessCodeSecurityAuthorizationUrl,
"tokenUrl": Oauth2AccessCodeSecurityTokenUrl,
"description"?: Oauth2AccessCodeSecurityDescription,
[key: string]: Oauth2AccessCodeSecurityAdditionalProperties |
Oauth2AccessCodeSecurityX |
Oauth2AccessCodeSecurityType |
Oauth2AccessCodeSecurityFlow |
Oauth2AccessCodeSecurityScopes |
Oauth2AccessCodeSecurityAuthorizationUrl |
Oauth2AccessCodeSecurityTokenUrl |
Oauth2AccessCodeSecurityDescription |
undefined,
}
));
// http://swagger.io/v2/schema.json#/definitions/oauth2Scopes
export type Oauth2Scopes = ((
{
[key: string]: Oauth2ScopesAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/mediaTypeList
export type MediaTypeList = (((MediaTypeListItems)[]));
// http://swagger.io/v2/schema.json#/definitions/parametersList
/**
The parameters needed to send a valid API call.
*/
export type ParametersList = (((ParametersListItems)[]));
// http://swagger.io/v2/schema.json#/definitions/schemesList
/**
The transfer protocol of the API.
*/
export type SchemesList = (((SchemesListItems)[]));
// http://swagger.io/v2/schema.json#/definitions/collectionFormat
export type DefinitionsCollectionFormat = (("csv" |
"ssv" |
"tsv" |
"pipes"));
// http://swagger.io/v2/schema.json#/definitions/collectionFormatWithMulti
export type CollectionFormatWithMulti = (("csv" |
"ssv" |
"tsv" |
"pipes" |
"multi"));
// http://swagger.io/v2/schema.json#/definitions/title
export type DefinitionsTitle = (Draft04Title);
// http://swagger.io/v2/schema.json#/definitions/description
export type DefinitionsDescription = (Draft04Description);
// http://swagger.io/v2/schema.json#/definitions/default
export type DefinitionsDefault = (Draft04Default);
// http://swagger.io/v2/schema.json#/definitions/multipleOf
export type DefinitionsMultipleOf = (Draft04MultipleOf);
// http://swagger.io/v2/schema.json#/definitions/maximum
export type DefinitionsMaximum = (Draft04Maximum);
// http://swagger.io/v2/schema.json#/definitions/exclusiveMaximum
export type DefinitionsExclusiveMaximum = (Draft04ExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/minimum
export type DefinitionsMinimum = (Draft04Minimum);
// http://swagger.io/v2/schema.json#/definitions/exclusiveMinimum
export type DefinitionsExclusiveMinimum = (Draft04ExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/maxLength
export type DefinitionsMaxLength = (PositiveInteger);
// http://swagger.io/v2/schema.json#/definitions/minLength
export type DefinitionsMinLength = (PositiveIntegerDefault0);
// http://swagger.io/v2/schema.json#/definitions/pattern
export type DefinitionsPattern = (Draft04Pattern);
// http://swagger.io/v2/schema.json#/definitions/maxItems
export type DefinitionsMaxItems = (PositiveInteger);
// http://swagger.io/v2/schema.json#/definitions/minItems
export type DefinitionsMinItems = (PositiveIntegerDefault0);
// http://swagger.io/v2/schema.json#/definitions/uniqueItems
export type DefinitionsUniqueItems = (Draft04UniqueItems);
// http://swagger.io/v2/schema.json#/definitions/enum
export type DefinitionsEnum = (Draft04Enum);
// http://swagger.io/v2/schema.json#/definitions/jsonReference
export type JsonReference = ((
{
"$ref": JsonReferenceRef,
[key: string]: JsonReferenceAdditionalProperties |
JsonReferenceRef,
}
));
// http://swagger.io/v2/schema.json#/properties/swagger
/**
The Swagger version of this document.
*/
export type Swagger = (("2.0"));
// http://swagger.io/v2/schema.json#/properties/info
export type PropertiesInfo = (DefinitionsInfo);
// http://swagger.io/v2/schema.json#/properties/host
/**
The host (name or ip) of the API. Example: 'swagger.io'
*/
export type Host = ((string));
// http://swagger.io/v2/schema.json#/properties/basePath
/**
The base path to the API. Example: '/api'.
*/
export type BasePath = ((string));
// http://swagger.io/v2/schema.json#/properties/schemes
export type PropertiesSchemes = (SchemesList);
// http://swagger.io/v2/schema.json#/properties/consumes
/**
A list of MIME types accepted by the API.
*/
export type PropertiesConsumes = (PropertiesAllOfConsumes0);
// http://swagger.io/v2/schema.json#/properties/produces
/**
A list of MIME types the API can produce.
*/
export type PropertiesProduces = (PropertiesAllOfProduces0);
// http://swagger.io/v2/schema.json#/properties/paths
export type PropertiesPaths = (DefinitionsPaths);
// http://swagger.io/v2/schema.json#/properties/definitions
export type PropertiesDefinitions = (DefinitionsDefinitions);
// http://swagger.io/v2/schema.json#/properties/parameters
export type PropertiesParameters = (ParameterDefinitions);
// http://swagger.io/v2/schema.json#/properties/responses
export type PropertiesResponses = (ResponseDefinitions);
// http://swagger.io/v2/schema.json#/properties/security
export type PropertiesSecurity = (DefinitionsSecurity);
// http://swagger.io/v2/schema.json#/properties/securityDefinitions
export type PropertiesSecurityDefinitions = (DefinitionsSecurityDefinitions);
// http://swagger.io/v2/schema.json#/properties/tags
export type PropertiesTags = (((PropertiesTagsItems)[]));
// http://swagger.io/v2/schema.json#/properties/externalDocs
export type PropertiesExternalDocs = (DefinitionsExternalDocs);
// http://swagger.io/v2/schema.json#/additionalProperties
export type V2AdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/patternProperties/^x-
export type V2PatternPropertiesX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/info/properties/title
/**
A unique and precise title of the API.
*/
export type InfoTitle = ((string));
// http://swagger.io/v2/schema.json#/definitions/info/properties/version
/**
A semantic version number of the API.
*/
export type Version = ((string));
// http://swagger.io/v2/schema.json#/definitions/info/properties/description
/**
A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.
*/
export type InfoDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/info/properties/termsOfService
/**
The terms of service for the API.
*/
export type TermsOfService = ((string));
// http://swagger.io/v2/schema.json#/definitions/info/properties/contact
export type InfoContact = (DefinitionsContact);
// http://swagger.io/v2/schema.json#/definitions/info/properties/license
export type InfoLicense = (DefinitionsLicense);
// http://swagger.io/v2/schema.json#/definitions/info/additionalProperties
export type InfoAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/info/patternProperties/^x-
export type InfoX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/contact/properties/name
/**
The identifying name of the contact person/organization.
*/
export type ContactName = ((string));
// http://swagger.io/v2/schema.json#/definitions/contact/properties/url
/**
The URL pointing to the contact information.
*/
export type ContactUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/contact/properties/email
/**
The email address of the contact person/organization.
*/
export type Email = ((string));
// http://swagger.io/v2/schema.json#/definitions/contact/additionalProperties
export type ContactAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/contact/patternProperties/^x-
export type ContactX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/license/properties/name
/**
The name of the license type. It's encouraged to use an OSI compatible license.
*/
export type LicenseName = ((string));
// http://swagger.io/v2/schema.json#/definitions/license/properties/url
/**
The URL pointing to the license.
*/
export type LicenseUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/license/additionalProperties
export type LicenseAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/license/patternProperties/^x-
export type LicenseX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/paths/additionalProperties
export type PathsAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/paths/patternProperties/^x-
export type PathsX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/paths/patternProperties/^/
export type PatternProperties = (PathItem);
// http://swagger.io/v2/schema.json#/definitions/definitions/additionalProperties
export type DefinitionsAdditionalProperties = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/parameterDefinitions/additionalProperties
export type ParameterDefinitionsAdditionalProperties = (Parameter);
// http://swagger.io/v2/schema.json#/definitions/responseDefinitions/additionalProperties
export type ResponseDefinitionsAdditionalProperties = (Response);
// http://swagger.io/v2/schema.json#/definitions/externalDocs/properties/description
export type ExternalDocsDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/externalDocs/properties/url
export type ExternalDocsUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/externalDocs/additionalProperties
export type ExternalDocsAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/externalDocs/patternProperties/^x-
export type ExternalDocsX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/examples/additionalProperties
export type ExamplesAdditionalProperties = ((any));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/tags
export type OperationTags = (((OperationTagsItems)[]));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/summary
/**
A brief summary of the operation.
*/
export type Summary = ((string));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/description
/**
A longer description of the operation, GitHub Flavored Markdown is allowed.
*/
export type OperationDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/externalDocs
export type OperationExternalDocs = (DefinitionsExternalDocs);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/operationId
/**
A unique identifier of the operation.
*/
export type OperationId = ((string));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/produces
/**
A list of MIME types the API can produce.
*/
export type OperationProduces = (OperationAllOfProduces0);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/consumes
/**
A list of MIME types the API can consume.
*/
export type OperationConsumes = (OperationAllOfConsumes0);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/parameters
export type OperationParameters = (ParametersList);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/responses
export type OperationResponses = (DefinitionsResponses);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/schemes
export type OperationSchemes = (SchemesList);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/deprecated
export type Deprecated = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/security
export type OperationSecurity = (DefinitionsSecurity);
// http://swagger.io/v2/schema.json#/definitions/operation/additionalProperties
export type OperationAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/operation/patternProperties/^x-
export type OperationX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/$ref
export type PathItemRef = ((string));
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/get
export type Get = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/put
export type Put = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/post
export type Post = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/delete
export type Delete = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/options
export type Options = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/head
export type Head = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/patch
export type Patch = (Operation);
// http://swagger.io/v2/schema.json#/definitions/pathItem/properties/parameters
export type PathItemParameters = (ParametersList);
// http://swagger.io/v2/schema.json#/definitions/pathItem/additionalProperties
export type PathItemAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/pathItem/patternProperties/^x-
export type PathItemX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/responses/additionalProperties
export type ResponsesAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/responses/patternProperties/^([0-9]{3})$|^(default)$
export type Responses093Default = (ResponseValue);
// http://swagger.io/v2/schema.json#/definitions/responses/patternProperties/^x-
export type ResponsesX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/responses/not
export type Not = ((
{
[key: string]: NotAdditionalProperties |
NotX,
}
));
// http://swagger.io/v2/schema.json#/definitions/responseValue/oneOf/0
export type ResponseValue0 = (Response);
// http://swagger.io/v2/schema.json#/definitions/responseValue/oneOf/1
export type ResponseValue1 = (JsonReference);
// http://swagger.io/v2/schema.json#/definitions/response/properties/description
export type ResponseDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/response/properties/schema
export type ResponseSchema = (Response0 |
Response1);
// http://swagger.io/v2/schema.json#/definitions/response/properties/headers
export type ResponseHeaders = (DefinitionsHeaders);
// http://swagger.io/v2/schema.json#/definitions/response/properties/examples
export type ResponseExamples = (DefinitionsExamples);
// http://swagger.io/v2/schema.json#/definitions/response/additionalProperties
export type ResponseAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/response/patternProperties/^x-
export type ResponseX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/headers/additionalProperties
export type HeadersAdditionalProperties = (Header);
// http://swagger.io/v2/schema.json#/definitions/header/properties/type
export type HeaderType = (("string" |
"number" |
"integer" |
"boolean" |
"array"));
// http://swagger.io/v2/schema.json#/definitions/header/properties/format
export type HeaderFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/header/properties/items
export type HeaderItems = (PrimitivesItems);
// http://swagger.io/v2/schema.json#/definitions/header/properties/collectionFormat
export type HeaderCollectionFormat = (DefinitionsCollectionFormat);
// http://swagger.io/v2/schema.json#/definitions/header/properties/default
export type HeaderDefault = (DefinitionsDefault);
// http://swagger.io/v2/schema.json#/definitions/header/properties/maximum
export type HeaderMaximum = (DefinitionsMaximum);
// http://swagger.io/v2/schema.json#/definitions/header/properties/exclusiveMaximum
export type HeaderExclusiveMaximum = (DefinitionsExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/header/properties/minimum
export type HeaderMinimum = (DefinitionsMinimum);
// http://swagger.io/v2/schema.json#/definitions/header/properties/exclusiveMinimum
export type HeaderExclusiveMinimum = (DefinitionsExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/header/properties/maxLength
export type HeaderMaxLength = (DefinitionsMaxLength);
// http://swagger.io/v2/schema.json#/definitions/header/properties/minLength
export type HeaderMinLength = (DefinitionsMinLength);
// http://swagger.io/v2/schema.json#/definitions/header/properties/pattern
export type HeaderPattern = (DefinitionsPattern);
// http://swagger.io/v2/schema.json#/definitions/header/properties/maxItems
export type HeaderMaxItems = (DefinitionsMaxItems);
// http://swagger.io/v2/schema.json#/definitions/header/properties/minItems
export type HeaderMinItems = (DefinitionsMinItems);
// http://swagger.io/v2/schema.json#/definitions/header/properties/uniqueItems
export type HeaderUniqueItems = (DefinitionsUniqueItems);
// http://swagger.io/v2/schema.json#/definitions/header/properties/enum
export type HeaderEnum = (DefinitionsEnum);
// http://swagger.io/v2/schema.json#/definitions/header/properties/multipleOf
export type HeaderMultipleOf = (DefinitionsMultipleOf);
// http://swagger.io/v2/schema.json#/definitions/header/properties/description
export type HeaderDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/header/additionalProperties
export type HeaderAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/header/patternProperties/^x-
export type HeaderX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/vendorExtension/additionalProperties
export type VendorExtensionAdditionalProperties = ((any));
// http://swagger.io/v2/schema.json#/definitions/vendorExtension/additionalItems
export type VendorExtensionAdditionalItems = ((any));
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/description
/**
A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
*/
export type BodyParameterDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/name
/**
The name of the parameter.
*/
export type BodyParameterName = ((string));
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/in
/**
Determines the location of the parameter.
*/
export type BodyParameterIn = (("body"));
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/required
/**
Determines whether or not this parameter is required or optional.
*/
export type BodyParameterRequired = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/schema
export type BodyParameterSchema = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/additionalProperties
export type BodyParameterAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/bodyParameter/patternProperties/^x-
export type BodyParameterX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/required
/**
Determines whether or not this parameter is required or optional.
*/
export type HeaderParameterSubSchemaRequired = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/in
/**
Determines the location of the parameter.
*/
export type HeaderParameterSubSchemaIn = (("header"));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/description
/**
A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
*/
export type HeaderParameterSubSchemaDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/name
/**
The name of the parameter.
*/
export type HeaderParameterSubSchemaName = ((string));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/type
export type HeaderParameterSubSchemaType = (("string" |
"number" |
"boolean" |
"integer" |
"array"));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/format
export type HeaderParameterSubSchemaFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/items
export type HeaderParameterSubSchemaItems = (PrimitivesItems);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/collectionFormat
export type HeaderParameterSubSchemaCollectionFormat = (DefinitionsCollectionFormat);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/default
export type HeaderParameterSubSchemaDefault = (DefinitionsDefault);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maximum
export type HeaderParameterSubSchemaMaximum = (DefinitionsMaximum);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/exclusiveMaximum
export type HeaderParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minimum
export type HeaderParameterSubSchemaMinimum = (DefinitionsMinimum);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/exclusiveMinimum
export type HeaderParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maxLength
export type HeaderParameterSubSchemaMaxLength = (DefinitionsMaxLength);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minLength
export type HeaderParameterSubSchemaMinLength = (DefinitionsMinLength);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/pattern
export type HeaderParameterSubSchemaPattern = (DefinitionsPattern);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maxItems
export type HeaderParameterSubSchemaMaxItems = (DefinitionsMaxItems);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minItems
export type HeaderParameterSubSchemaMinItems = (DefinitionsMinItems);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/uniqueItems
export type HeaderParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/enum
export type HeaderParameterSubSchemaEnum = (DefinitionsEnum);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/multipleOf
export type HeaderParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/additionalProperties
export type HeaderParameterSubSchemaAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/patternProperties/^x-
export type HeaderParameterSubSchemaX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/required
/**
Determines whether or not this parameter is required or optional.
*/
export type QueryParameterSubSchemaRequired = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/in
/**
Determines the location of the parameter.
*/
export type QueryParameterSubSchemaIn = (("query"));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/description
/**
A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
*/
export type QueryParameterSubSchemaDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/name
/**
The name of the parameter.
*/
export type QueryParameterSubSchemaName = ((string));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/allowEmptyValue
/**
allows sending a parameter by name only or with an empty value.
*/
export type QueryParameterSubSchemaAllowEmptyValue = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/type
export type QueryParameterSubSchemaType = (("string" |
"number" |
"boolean" |
"integer" |
"array"));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/format
export type QueryParameterSubSchemaFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/items
export type QueryParameterSubSchemaItems = (PrimitivesItems);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/collectionFormat
export type QueryParameterSubSchemaCollectionFormat = (CollectionFormatWithMulti);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/default
export type QueryParameterSubSchemaDefault = (DefinitionsDefault);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maximum
export type QueryParameterSubSchemaMaximum = (DefinitionsMaximum);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/exclusiveMaximum
export type QueryParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minimum
export type QueryParameterSubSchemaMinimum = (DefinitionsMinimum);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/exclusiveMinimum
export type QueryParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maxLength
export type QueryParameterSubSchemaMaxLength = (DefinitionsMaxLength);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minLength
export type QueryParameterSubSchemaMinLength = (DefinitionsMinLength);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/pattern
export type QueryParameterSubSchemaPattern = (DefinitionsPattern);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maxItems
export type QueryParameterSubSchemaMaxItems = (DefinitionsMaxItems);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minItems
export type QueryParameterSubSchemaMinItems = (DefinitionsMinItems);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/uniqueItems
export type QueryParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/enum
export type QueryParameterSubSchemaEnum = (DefinitionsEnum);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/multipleOf
export type QueryParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/additionalProperties
export type QueryParameterSubSchemaAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/patternProperties/^x-
export type QueryParameterSubSchemaX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/required
/**
Determines whether or not this parameter is required or optional.
*/
export type FormDataParameterSubSchemaRequired = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/in
/**
Determines the location of the parameter.
*/
export type FormDataParameterSubSchemaIn = (("formData"));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/description
/**
A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
*/
export type FormDataParameterSubSchemaDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/name
/**
The name of the parameter.
*/
export type FormDataParameterSubSchemaName = ((string));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/allowEmptyValue
/**
allows sending a parameter by name only or with an empty value.
*/
export type FormDataParameterSubSchemaAllowEmptyValue = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/type
export type FormDataParameterSubSchemaType = (("string" |
"number" |
"boolean" |
"integer" |
"array" |
"file"));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/format
export type FormDataParameterSubSchemaFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/items
export type FormDataParameterSubSchemaItems = (PrimitivesItems);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/collectionFormat
export type FormDataParameterSubSchemaCollectionFormat = (CollectionFormatWithMulti);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/default
export type FormDataParameterSubSchemaDefault = (DefinitionsDefault);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maximum
export type FormDataParameterSubSchemaMaximum = (DefinitionsMaximum);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/exclusiveMaximum
export type FormDataParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minimum
export type FormDataParameterSubSchemaMinimum = (DefinitionsMinimum);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/exclusiveMinimum
export type FormDataParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maxLength
export type FormDataParameterSubSchemaMaxLength = (DefinitionsMaxLength);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minLength
export type FormDataParameterSubSchemaMinLength = (DefinitionsMinLength);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/pattern
export type FormDataParameterSubSchemaPattern = (DefinitionsPattern);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maxItems
export type FormDataParameterSubSchemaMaxItems = (DefinitionsMaxItems);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minItems
export type FormDataParameterSubSchemaMinItems = (DefinitionsMinItems);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/uniqueItems
export type FormDataParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/enum
export type FormDataParameterSubSchemaEnum = (DefinitionsEnum);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/multipleOf
export type FormDataParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/additionalProperties
export type FormDataParameterSubSchemaAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/patternProperties/^x-
export type FormDataParameterSubSchemaX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/required
/**
Determines whether or not this parameter is required or optional.
*/
export type PathParameterSubSchemaRequired = ((true));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/in
/**
Determines the location of the parameter.
*/
export type PathParameterSubSchemaIn = (("path"));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/description
/**
A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
*/
export type PathParameterSubSchemaDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/name
/**
The name of the parameter.
*/
export type PathParameterSubSchemaName = ((string));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/type
export type PathParameterSubSchemaType = (("string" |
"number" |
"boolean" |
"integer" |
"array"));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/format
export type PathParameterSubSchemaFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/items
export type PathParameterSubSchemaItems = (PrimitivesItems);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/collectionFormat
export type PathParameterSubSchemaCollectionFormat = (DefinitionsCollectionFormat);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/default
export type PathParameterSubSchemaDefault = (DefinitionsDefault);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maximum
export type PathParameterSubSchemaMaximum = (DefinitionsMaximum);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/exclusiveMaximum
export type PathParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minimum
export type PathParameterSubSchemaMinimum = (DefinitionsMinimum);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/exclusiveMinimum
export type PathParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maxLength
export type PathParameterSubSchemaMaxLength = (DefinitionsMaxLength);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minLength
export type PathParameterSubSchemaMinLength = (DefinitionsMinLength);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/pattern
export type PathParameterSubSchemaPattern = (DefinitionsPattern);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maxItems
export type PathParameterSubSchemaMaxItems = (DefinitionsMaxItems);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minItems
export type PathParameterSubSchemaMinItems = (DefinitionsMinItems);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/uniqueItems
export type PathParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/enum
export type PathParameterSubSchemaEnum = (DefinitionsEnum);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/multipleOf
export type PathParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/additionalProperties
export type PathParameterSubSchemaAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/patternProperties/^x-
export type PathParameterSubSchemaX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/0
export type NonBodyParameter0 = (HeaderParameterSubSchema);
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/1
export type NonBodyParameter1 = (FormDataParameterSubSchema);
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/2
export type NonBodyParameter2 = (QueryParameterSubSchema);
// http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/3
export type NonBodyParameter3 = (PathParameterSubSchema);
// http://swagger.io/v2/schema.json#/definitions/parameter/oneOf/0
export type Parameter0 = (BodyParameter);
// http://swagger.io/v2/schema.json#/definitions/parameter/oneOf/1
export type Parameter1 = (NonBodyParameter);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/$ref
export type SchemaRef = ((string));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/format
export type SchemaFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/title
export type SchemaTitle = (Draft04Title);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/description
export type SchemaDescription = (Draft04Description);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/default
export type SchemaDefault = (Draft04Default);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/multipleOf
export type SchemaMultipleOf = (Draft04MultipleOf);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maximum
export type SchemaMaximum = (Draft04Maximum);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/exclusiveMaximum
export type SchemaExclusiveMaximum = (Draft04ExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minimum
export type SchemaMinimum = (Draft04Minimum);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/exclusiveMinimum
export type SchemaExclusiveMinimum = (Draft04ExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maxLength
export type SchemaMaxLength = (PositiveInteger);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minLength
export type SchemaMinLength = (PositiveIntegerDefault0);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/pattern
export type SchemaPattern = (Draft04Pattern);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maxItems
export type SchemaMaxItems = (PositiveInteger);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minItems
export type SchemaMinItems = (PositiveIntegerDefault0);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/uniqueItems
export type SchemaUniqueItems = (Draft04UniqueItems);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/maxProperties
export type MaxProperties = (PositiveInteger);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/minProperties
export type MinProperties = (PositiveIntegerDefault0);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/required
export type SchemaRequired = (StringArray);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/enum
export type SchemaEnum = (Draft04Enum);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties
export type PropertiesSchemaAdditionalProperties = ((AdditionalPropertiesAnyOf0) |
(AdditionalPropertiesAnyOf1) |
(AdditionalPropertiesAnyOf0 & AdditionalPropertiesAnyOf1));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/type
export type SchemaType = (Draft04Type);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items
export type SchemaItems = ((ItemsAnyOf0) |
(ItemsAnyOf1) |
(ItemsAnyOf0 & ItemsAnyOf1));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/allOf
export type AllOf = (((AllOfItems)[]));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/properties
export type Properties = ((
{
[key: string]: PropertiesAdditionalProperties,
}
));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/discriminator
export type Discriminator = ((string));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/readOnly
export type SchemaReadOnly = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/xml
export type SchemaXml = (DefinitionsXml);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/externalDocs
export type SchemaExternalDocs = (DefinitionsExternalDocs);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/example
export type SchemaExample = unknown;
// http://swagger.io/v2/schema.json#/definitions/schema/additionalProperties
export type DefinitionsSchemaAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/schema/patternProperties/^x-
export type SchemaPatternPropertiesX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/format
export type FileSchemaFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/title
export type FileSchemaTitle = (Draft04Title);
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/description
export type FileSchemaDescription = (Draft04Description);
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/default
export type FileSchemaDefault = (Draft04Default);
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/required
export type FileSchemaRequired = (StringArray);
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/type
export type FileSchemaType = (("file"));
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/readOnly
export type FileSchemaReadOnly = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/externalDocs
export type FileSchemaExternalDocs = (DefinitionsExternalDocs);
// http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/example
export type FileSchemaExample = unknown;
// http://swagger.io/v2/schema.json#/definitions/fileSchema/additionalProperties
export type FileSchemaAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/fileSchema/patternProperties/^x-
export type FileSchemaX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/type
export type PrimitivesItemsType = (("string" |
"number" |
"integer" |
"boolean" |
"array"));
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/format
export type PrimitivesItemsFormat = ((string));
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/items
export type PrimitivesItemsItems = (PrimitivesItems);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/collectionFormat
export type PrimitivesItemsCollectionFormat = (DefinitionsCollectionFormat);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/default
export type PrimitivesItemsDefault = (DefinitionsDefault);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maximum
export type PrimitivesItemsMaximum = (DefinitionsMaximum);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/exclusiveMaximum
export type PrimitivesItemsExclusiveMaximum = (DefinitionsExclusiveMaximum);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minimum
export type PrimitivesItemsMinimum = (DefinitionsMinimum);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/exclusiveMinimum
export type PrimitivesItemsExclusiveMinimum = (DefinitionsExclusiveMinimum);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maxLength
export type PrimitivesItemsMaxLength = (DefinitionsMaxLength);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minLength
export type PrimitivesItemsMinLength = (DefinitionsMinLength);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/pattern
export type PrimitivesItemsPattern = (DefinitionsPattern);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maxItems
export type PrimitivesItemsMaxItems = (DefinitionsMaxItems);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minItems
export type PrimitivesItemsMinItems = (DefinitionsMinItems);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/uniqueItems
export type PrimitivesItemsUniqueItems = (DefinitionsUniqueItems);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/enum
export type PrimitivesItemsEnum = (DefinitionsEnum);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/multipleOf
export type PrimitivesItemsMultipleOf = (DefinitionsMultipleOf);
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/additionalProperties
export type PrimitivesItemsAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/primitivesItems/patternProperties/^x-
export type PrimitivesItemsX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/security/items
export type SecurityItems = (SecurityRequirement);
// http://swagger.io/v2/schema.json#/definitions/securityRequirement/additionalProperties
export type SecurityRequirementAdditionalProperties = (((SecurityRequirementItems)[]));
// http://swagger.io/v2/schema.json#/definitions/xml/properties/name
export type XmlName = ((string));
// http://swagger.io/v2/schema.json#/definitions/xml/properties/namespace
export type Namespace = ((string));
// http://swagger.io/v2/schema.json#/definitions/xml/properties/prefix
export type Prefix = ((string));
// http://swagger.io/v2/schema.json#/definitions/xml/properties/attribute
export type Attribute = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/xml/properties/wrapped
export type Wrapped = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/xml/additionalProperties
export type XmlAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/xml/patternProperties/^x-
export type XmlX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/tag/properties/name
export type TagName = ((string));
// http://swagger.io/v2/schema.json#/definitions/tag/properties/description
export type TagDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/tag/properties/externalDocs
export type TagExternalDocs = (DefinitionsExternalDocs);
// http://swagger.io/v2/schema.json#/definitions/tag/additionalProperties
export type TagAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/tag/patternProperties/^x-
export type TagX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties
export type SecurityDefinitionsAdditionalProperties = (SecurityDefinitions0 |
SecurityDefinitions1 |
SecurityDefinitions2 |
SecurityDefinitions3 |
SecurityDefinitions4 |
SecurityDefinitions5);
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/properties/type
export type BasicAuthenticationSecurityType = (("basic"));
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/properties/description
export type BasicAuthenticationSecurityDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/additionalProperties
export type BasicAuthenticationSecurityAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/patternProperties/^x-
export type BasicAuthenticationSecurityX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/type
export type ApiKeySecurityType = (("apiKey"));
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/name
export type ApiKeySecurityName = ((string));
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/in
export type ApiKeySecurityIn = (("header" |
"query"));
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/description
export type ApiKeySecurityDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/additionalProperties
export type ApiKeySecurityAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/patternProperties/^x-
export type ApiKeySecurityX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/type
export type Oauth2ImplicitSecurityType = (("oauth2"));
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/flow
export type Oauth2ImplicitSecurityFlow = (("implicit"));
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/scopes
export type Oauth2ImplicitSecurityScopes = (Oauth2Scopes);
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/authorizationUrl
export type Oauth2ImplicitSecurityAuthorizationUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/description
export type Oauth2ImplicitSecurityDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/additionalProperties
export type Oauth2ImplicitSecurityAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/patternProperties/^x-
export type Oauth2ImplicitSecurityX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/type
export type Oauth2PasswordSecurityType = (("oauth2"));
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/flow
export type Oauth2PasswordSecurityFlow = (("password"));
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/scopes
export type Oauth2PasswordSecurityScopes = (Oauth2Scopes);
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/tokenUrl
export type Oauth2PasswordSecurityTokenUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/description
export type Oauth2PasswordSecurityDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/additionalProperties
export type Oauth2PasswordSecurityAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/patternProperties/^x-
export type Oauth2PasswordSecurityX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/type
export type Oauth2ApplicationSecurityType = (("oauth2"));
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/flow
export type Oauth2ApplicationSecurityFlow = (("application"));
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/scopes
export type Oauth2ApplicationSecurityScopes = (Oauth2Scopes);
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/tokenUrl
export type Oauth2ApplicationSecurityTokenUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/description
export type Oauth2ApplicationSecurityDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/additionalProperties
export type Oauth2ApplicationSecurityAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/patternProperties/^x-
export type Oauth2ApplicationSecurityX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/type
export type Oauth2AccessCodeSecurityType = (("oauth2"));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/flow
export type Oauth2AccessCodeSecurityFlow = (("accessCode"));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/scopes
export type Oauth2AccessCodeSecurityScopes = (Oauth2Scopes);
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/authorizationUrl
export type Oauth2AccessCodeSecurityAuthorizationUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/tokenUrl
export type Oauth2AccessCodeSecurityTokenUrl = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/description
export type Oauth2AccessCodeSecurityDescription = ((string));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/additionalProperties
export type Oauth2AccessCodeSecurityAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/patternProperties/^x-
export type Oauth2AccessCodeSecurityX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/oauth2Scopes/additionalProperties
export type Oauth2ScopesAdditionalProperties = ((string));
// http://swagger.io/v2/schema.json#/definitions/mediaTypeList/items
export type MediaTypeListItems = (MimeType);
// http://swagger.io/v2/schema.json#/definitions/parametersList/items
export type ParametersListItems = (ParametersList0 |
ParametersList1);
// http://swagger.io/v2/schema.json#/definitions/parametersList/additionalItems
export type ParametersListAdditionalItems = ((never));
// http://swagger.io/v2/schema.json#/definitions/schemesList/items
export type SchemesListItems = (("http" |
"https" |
"ws" |
"wss"));
// http://swagger.io/v2/schema.json#/definitions/jsonReference/properties/$ref
export type JsonReferenceRef = ((string));
// http://swagger.io/v2/schema.json#/definitions/jsonReference/additionalProperties
export type JsonReferenceAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/properties/consumes/allOf/0
export type PropertiesAllOfConsumes0 = (MediaTypeList);
// http://swagger.io/v2/schema.json#/properties/produces/allOf/0
export type PropertiesAllOfProduces0 = (MediaTypeList);
// http://swagger.io/v2/schema.json#/properties/tags/items
export type PropertiesTagsItems = (Tag);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/tags/items
export type OperationTagsItems = ((string));
// http://swagger.io/v2/schema.json#/definitions/operation/properties/produces/allOf/0
export type OperationAllOfProduces0 = (MediaTypeList);
// http://swagger.io/v2/schema.json#/definitions/operation/properties/consumes/allOf/0
export type OperationAllOfConsumes0 = (MediaTypeList);
// http://swagger.io/v2/schema.json#/definitions/responses/not/additionalProperties
export type NotAdditionalProperties = ((never));
// http://swagger.io/v2/schema.json#/definitions/responses/not/patternProperties/^x-
export type NotX = (VendorExtension);
// http://swagger.io/v2/schema.json#/definitions/response/properties/schema/oneOf/0
export type Response0 = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/response/properties/schema/oneOf/1
export type Response1 = (FileSchema);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties/anyOf/0
export type AdditionalPropertiesAnyOf0 = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties/anyOf/1
export type AdditionalPropertiesAnyOf1 = ((boolean));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/0
export type ItemsAnyOf0 = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/1
export type ItemsAnyOf1 = (((Items1AnyOfItems)[]));
// http://swagger.io/v2/schema.json#/definitions/schema/properties/allOf/items
export type AllOfItems = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/properties/additionalProperties
export type PropertiesAdditionalProperties = (DefinitionsSchema);
// http://swagger.io/v2/schema.json#/definitions/securityRequirement/additionalProperties/items
export type SecurityRequirementItems = ((string));
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/0
export type SecurityDefinitions0 = (BasicAuthenticationSecurity);
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/1
export type SecurityDefinitions1 = (ApiKeySecurity);
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/2
export type SecurityDefinitions2 = (Oauth2ImplicitSecurity);
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/3
export type SecurityDefinitions3 = (Oauth2PasswordSecurity);
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/4
export type SecurityDefinitions4 = (Oauth2ApplicationSecurity);
// http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/5
export type SecurityDefinitions5 = (Oauth2AccessCodeSecurity);
// http://swagger.io/v2/schema.json#/definitions/parametersList/items/oneOf/0
export type ParametersList0 = (Parameter);
// http://swagger.io/v2/schema.json#/definitions/parametersList/items/oneOf/1
export type ParametersList1 = (JsonReference);
// http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/1/items
export type Items1AnyOfItems = (DefinitionsSchema);
// http://json-schema.org/draft-04/schema#/properties/title
export type Draft04Title = ((string));
// http://json-schema.org/draft-04/schema#/properties/description
export type Draft04Description = ((string));
// http://json-schema.org/draft-04/schema#/properties/default
export type Draft04Default = unknown;
// http://json-schema.org/draft-04/schema#/properties/multipleOf
export type Draft04MultipleOf = ((number));
// http://json-schema.org/draft-04/schema#/properties/maximum
export type Draft04Maximum = ((number));
// http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum
export type Draft04ExclusiveMaximum = ((boolean));
// http://json-schema.org/draft-04/schema#/properties/minimum
export type Draft04Minimum = ((number));
// http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum
export type Draft04ExclusiveMinimum = ((boolean));
// http://json-schema.org/draft-04/schema#/definitions/positiveInteger
export type PositiveInteger = ((number));
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0
export type PositiveIntegerDefault0 = (PositiveIntegerDefault00 &
PositiveIntegerDefault01);
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/0
export type PositiveIntegerDefault00 = (PositiveInteger);
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/1
export type PositiveIntegerDefault01 = unknown;
// http://json-schema.org/draft-04/schema#/properties/pattern
export type Draft04Pattern = ((string));
// http://json-schema.org/draft-04/schema#/properties/uniqueItems
export type Draft04UniqueItems = ((boolean));
// http://json-schema.org/draft-04/schema#/properties/enum
export type Draft04Enum = ((unknown[]));
// http://json-schema.org/draft-04/schema#/definitions/stringArray
export type StringArray = (((StringArrayItems)[]));
// http://json-schema.org/draft-04/schema#/definitions/stringArray/items
export type StringArrayItems = ((string));
// http://json-schema.org/draft-04/schema#/properties/type
export type Draft04Type = ((TypeAnyOf0) |
(TypeAnyOf1) |
(TypeAnyOf0 & TypeAnyOf1));
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/0
export type TypeAnyOf0 = (SimpleTypes);
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/1
export type TypeAnyOf1 = (((Type1AnyOfItems)[]));
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/1/items
export type Type1AnyOfItems = (SimpleTypes);
// http://json-schema.org/draft-04/schema#/definitions/simpleTypes
export type SimpleTypes = (("array" |
"boolean" |
"integer" |
"null" |
"number" |
"object" |
"string"));
