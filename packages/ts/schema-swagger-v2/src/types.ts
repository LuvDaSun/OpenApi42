// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.12.8                         -- www.JsonSchema42.org
//
/**
* @summary A JSON Schema for Swagger 2.0 API.
* @see {@link http://swagger.io/v2/schema.json#}
*/
export type SchemaJson = (
{
"swagger": Swagger,
"info": PropertiesInfo,
"host"?: Host,
"basePath"?: BasePath,
"schemes"?: PropertiesSchemes,
"consumes"?: PropertiesConsumes,
"produces"?: PropertiesProduces,
"paths": PropertiesPaths,
"definitions"?: PropertiesDefinitions,
"parameters"?: PropertiesParameters,
"responses"?: PropertiesResponses,
"security"?: PropertiesSecurity,
"securityDefinitions"?: PropertiesSecurityDefinitions,
"tags"?: PropertiesTags,
"externalDocs"?: PropertiesExternalDocs,
}
);
/**
* @description General information about the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/info}
*/
export type DefinitionsInfo = (
{
"title": InfoTitle,
"version": Version,
"description"?: InfoDescription,
"termsOfService"?: TermsOfService,
"contact"?: InfoContact,
"license"?: InfoLicense,
}
);
/**
* @description Contact information for the owners of the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/contact}
*/
export type DefinitionsContact = (
{
"name"?: ContactName,
"url"?: ContactUrl,
"email"?: Email,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/license}
*/
export type DefinitionsLicense = (
{
"name": LicenseName,
"url"?: LicenseUrl,
}
);
/**
* @description Relative paths to the individual endpoints. They must be relative to the &apos;basePath&apos;.
* @see {@link http://swagger.io/v2/schema.json#/definitions/paths}
*/
export type DefinitionsPaths = (
{
[
name: string
]: PathsAdditionalProperties |
PathsX |
PatternProperties
}
);
/**
* @description One or more JSON objects describing the schemas being consumed and produced by the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/definitions}
*/
export type DefinitionsDefinitions = (
{
[
name: string
]: DefinitionsAdditionalProperties
}
);
/**
* @description One or more JSON representations for parameters
* @see {@link http://swagger.io/v2/schema.json#/definitions/parameterDefinitions}
*/
export type ParameterDefinitions = (
{
[
name: string
]: ParameterDefinitionsAdditionalProperties
}
);
/**
* @description One or more JSON representations for parameters
* @see {@link http://swagger.io/v2/schema.json#/definitions/responseDefinitions}
*/
export type ResponseDefinitions = (
{
[
name: string
]: ResponseDefinitionsAdditionalProperties
}
);
/**
* @description information about external documentation
* @see {@link http://swagger.io/v2/schema.json#/definitions/externalDocs}
*/
export type DefinitionsExternalDocs = (
{
"description"?: ExternalDocsDescription,
"url": ExternalDocsUrl,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/examples}
*/
export type DefinitionsExamples = (
{
[
name: string
]: ExamplesAdditionalProperties
}
);
/**
* @description The MIME type of the HTTP message.
* @see {@link http://swagger.io/v2/schema.json#/definitions/mimeType}
*/
export type MimeType = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation}
*/
export type Operation = (
{
"tags"?: OperationTags,
"summary"?: Summary,
"description"?: OperationDescription,
"externalDocs"?: OperationExternalDocs,
"operationId"?: OperationId,
"produces"?: OperationProduces,
"consumes"?: OperationConsumes,
"parameters"?: OperationParameters,
"responses": OperationResponses,
"schemes"?: OperationSchemes,
"deprecated"?: Deprecated,
"security"?: OperationSecurity,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem}
*/
export type PathItem = (
{
"$ref"?: PathItemRef,
"get"?: Get,
"put"?: Put,
"post"?: Post,
"delete"?: Delete,
"options"?: Options,
"head"?: Head,
"patch"?: Patch,
"parameters"?: PathItemParameters,
}
);
/**
* @description Response objects names can either be any valid HTTP status code or &apos;default&apos;.
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses}
*/
export type DefinitionsResponses = (
{
[
name: string
]: ResponsesAdditionalProperties |
Responses093Default |
ResponsesX
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responseValue}
*/
export type ResponseValue = (
ResponseValue0
|
ResponseValue1
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response}
*/
export type Response = (
{
"description": ResponseDescription,
"schema"?: ResponseSchema,
"headers"?: ResponseHeaders,
"examples"?: ResponseExamples,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headers}
*/
export type DefinitionsHeaders = (
{
[
name: string
]: HeadersAdditionalProperties
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header}
*/
export type Header = (
{
"type": HeaderType,
"format"?: HeaderFormat,
"items"?: HeaderItems,
"collectionFormat"?: HeaderCollectionFormat,
"default"?: HeaderDefault,
"maximum"?: HeaderMaximum,
"exclusiveMaximum"?: HeaderExclusiveMaximum,
"minimum"?: HeaderMinimum,
"exclusiveMinimum"?: HeaderExclusiveMinimum,
"maxLength"?: HeaderMaxLength,
"minLength"?: HeaderMinLength,
"pattern"?: HeaderPattern,
"maxItems"?: HeaderMaxItems,
"minItems"?: HeaderMinItems,
"uniqueItems"?: HeaderUniqueItems,
"enum"?: HeaderEnum,
"multipleOf"?: HeaderMultipleOf,
"description"?: HeaderDescription,
}
);
/**
* @description Any property starting with x- is valid.
* @see {@link http://swagger.io/v2/schema.json#/definitions/vendorExtension}
*/
export type VendorExtension = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter}
*/
export type BodyParameter = (
{
"description"?: BodyParameterDescription,
"name": BodyParameterName,
"in": BodyParameterIn,
"required"?: BodyParameterRequired,
"schema": BodyParameterSchema,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema}
*/
export type HeaderParameterSubSchema = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema}
*/
export type QueryParameterSubSchema = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema}
*/
export type FormDataParameterSubSchema = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema}
*/
export type PathParameterSubSchema = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/nonBodyParameter}
*/
export type NonBodyParameter = (
(
{
"required"?: HeaderParameterSubSchemaRequired,
"in": HeaderParameterSubSchemaIn,
"description"?: HeaderParameterSubSchemaDescription,
"name": HeaderParameterSubSchemaName,
"type": HeaderParameterSubSchemaType,
"format"?: HeaderParameterSubSchemaFormat,
"items"?: HeaderParameterSubSchemaItems,
"collectionFormat"?: HeaderParameterSubSchemaCollectionFormat,
"default"?: HeaderParameterSubSchemaDefault,
"maximum"?: HeaderParameterSubSchemaMaximum,
"exclusiveMaximum"?: HeaderParameterSubSchemaExclusiveMaximum,
"minimum"?: HeaderParameterSubSchemaMinimum,
"exclusiveMinimum"?: HeaderParameterSubSchemaExclusiveMinimum,
"maxLength"?: HeaderParameterSubSchemaMaxLength,
"minLength"?: HeaderParameterSubSchemaMinLength,
"pattern"?: HeaderParameterSubSchemaPattern,
"maxItems"?: HeaderParameterSubSchemaMaxItems,
"minItems"?: HeaderParameterSubSchemaMinItems,
"uniqueItems"?: HeaderParameterSubSchemaUniqueItems,
"enum"?: HeaderParameterSubSchemaEnum,
"multipleOf"?: HeaderParameterSubSchemaMultipleOf,
}
)
|
(
{
"required"?: FormDataParameterSubSchemaRequired,
"in": FormDataParameterSubSchemaIn,
"description"?: FormDataParameterSubSchemaDescription,
"name": FormDataParameterSubSchemaName,
"allowEmptyValue"?: FormDataParameterSubSchemaAllowEmptyValue,
"type": FormDataParameterSubSchemaType,
"format"?: FormDataParameterSubSchemaFormat,
"items"?: FormDataParameterSubSchemaItems,
"collectionFormat"?: FormDataParameterSubSchemaCollectionFormat,
"default"?: FormDataParameterSubSchemaDefault,
"maximum"?: FormDataParameterSubSchemaMaximum,
"exclusiveMaximum"?: FormDataParameterSubSchemaExclusiveMaximum,
"minimum"?: FormDataParameterSubSchemaMinimum,
"exclusiveMinimum"?: FormDataParameterSubSchemaExclusiveMinimum,
"maxLength"?: FormDataParameterSubSchemaMaxLength,
"minLength"?: FormDataParameterSubSchemaMinLength,
"pattern"?: FormDataParameterSubSchemaPattern,
"maxItems"?: FormDataParameterSubSchemaMaxItems,
"minItems"?: FormDataParameterSubSchemaMinItems,
"uniqueItems"?: FormDataParameterSubSchemaUniqueItems,
"enum"?: FormDataParameterSubSchemaEnum,
"multipleOf"?: FormDataParameterSubSchemaMultipleOf,
}
)
|
(
{
"required"?: QueryParameterSubSchemaRequired,
"in": QueryParameterSubSchemaIn,
"description"?: QueryParameterSubSchemaDescription,
"name": QueryParameterSubSchemaName,
"allowEmptyValue"?: QueryParameterSubSchemaAllowEmptyValue,
"type": QueryParameterSubSchemaType,
"format"?: QueryParameterSubSchemaFormat,
"items"?: QueryParameterSubSchemaItems,
"collectionFormat"?: QueryParameterSubSchemaCollectionFormat,
"default"?: QueryParameterSubSchemaDefault,
"maximum"?: QueryParameterSubSchemaMaximum,
"exclusiveMaximum"?: QueryParameterSubSchemaExclusiveMaximum,
"minimum"?: QueryParameterSubSchemaMinimum,
"exclusiveMinimum"?: QueryParameterSubSchemaExclusiveMinimum,
"maxLength"?: QueryParameterSubSchemaMaxLength,
"minLength"?: QueryParameterSubSchemaMinLength,
"pattern"?: QueryParameterSubSchemaPattern,
"maxItems"?: QueryParameterSubSchemaMaxItems,
"minItems"?: QueryParameterSubSchemaMinItems,
"uniqueItems"?: QueryParameterSubSchemaUniqueItems,
"enum"?: QueryParameterSubSchemaEnum,
"multipleOf"?: QueryParameterSubSchemaMultipleOf,
}
)
|
(
{
"required": PathParameterSubSchemaRequired,
"in": PathParameterSubSchemaIn,
"description"?: PathParameterSubSchemaDescription,
"name": PathParameterSubSchemaName,
"type": PathParameterSubSchemaType,
"format"?: PathParameterSubSchemaFormat,
"items"?: PathParameterSubSchemaItems,
"collectionFormat"?: PathParameterSubSchemaCollectionFormat,
"default"?: PathParameterSubSchemaDefault,
"maximum"?: PathParameterSubSchemaMaximum,
"exclusiveMaximum"?: PathParameterSubSchemaExclusiveMaximum,
"minimum"?: PathParameterSubSchemaMinimum,
"exclusiveMinimum"?: PathParameterSubSchemaExclusiveMinimum,
"maxLength"?: PathParameterSubSchemaMaxLength,
"minLength"?: PathParameterSubSchemaMinLength,
"pattern"?: PathParameterSubSchemaPattern,
"maxItems"?: PathParameterSubSchemaMaxItems,
"minItems"?: PathParameterSubSchemaMinItems,
"uniqueItems"?: PathParameterSubSchemaUniqueItems,
"enum"?: PathParameterSubSchemaEnum,
"multipleOf"?: PathParameterSubSchemaMultipleOf,
}
)
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parameter}
*/
export type Parameter = (
Parameter0
|
(
{
"required"?: HeaderParameterSubSchemaRequired,
"in": HeaderParameterSubSchemaIn,
"description"?: HeaderParameterSubSchemaDescription,
"name": HeaderParameterSubSchemaName,
"type": HeaderParameterSubSchemaType,
"format"?: HeaderParameterSubSchemaFormat,
"items"?: HeaderParameterSubSchemaItems,
"collectionFormat"?: HeaderParameterSubSchemaCollectionFormat,
"default"?: HeaderParameterSubSchemaDefault,
"maximum"?: HeaderParameterSubSchemaMaximum,
"exclusiveMaximum"?: HeaderParameterSubSchemaExclusiveMaximum,
"minimum"?: HeaderParameterSubSchemaMinimum,
"exclusiveMinimum"?: HeaderParameterSubSchemaExclusiveMinimum,
"maxLength"?: HeaderParameterSubSchemaMaxLength,
"minLength"?: HeaderParameterSubSchemaMinLength,
"pattern"?: HeaderParameterSubSchemaPattern,
"maxItems"?: HeaderParameterSubSchemaMaxItems,
"minItems"?: HeaderParameterSubSchemaMinItems,
"uniqueItems"?: HeaderParameterSubSchemaUniqueItems,
"enum"?: HeaderParameterSubSchemaEnum,
"multipleOf"?: HeaderParameterSubSchemaMultipleOf,
}
)
|
(
{
"required"?: FormDataParameterSubSchemaRequired,
"in": FormDataParameterSubSchemaIn,
"description"?: FormDataParameterSubSchemaDescription,
"name": FormDataParameterSubSchemaName,
"allowEmptyValue"?: FormDataParameterSubSchemaAllowEmptyValue,
"type": FormDataParameterSubSchemaType,
"format"?: FormDataParameterSubSchemaFormat,
"items"?: FormDataParameterSubSchemaItems,
"collectionFormat"?: FormDataParameterSubSchemaCollectionFormat,
"default"?: FormDataParameterSubSchemaDefault,
"maximum"?: FormDataParameterSubSchemaMaximum,
"exclusiveMaximum"?: FormDataParameterSubSchemaExclusiveMaximum,
"minimum"?: FormDataParameterSubSchemaMinimum,
"exclusiveMinimum"?: FormDataParameterSubSchemaExclusiveMinimum,
"maxLength"?: FormDataParameterSubSchemaMaxLength,
"minLength"?: FormDataParameterSubSchemaMinLength,
"pattern"?: FormDataParameterSubSchemaPattern,
"maxItems"?: FormDataParameterSubSchemaMaxItems,
"minItems"?: FormDataParameterSubSchemaMinItems,
"uniqueItems"?: FormDataParameterSubSchemaUniqueItems,
"enum"?: FormDataParameterSubSchemaEnum,
"multipleOf"?: FormDataParameterSubSchemaMultipleOf,
}
)
|
(
{
"required"?: QueryParameterSubSchemaRequired,
"in": QueryParameterSubSchemaIn,
"description"?: QueryParameterSubSchemaDescription,
"name": QueryParameterSubSchemaName,
"allowEmptyValue"?: QueryParameterSubSchemaAllowEmptyValue,
"type": QueryParameterSubSchemaType,
"format"?: QueryParameterSubSchemaFormat,
"items"?: QueryParameterSubSchemaItems,
"collectionFormat"?: QueryParameterSubSchemaCollectionFormat,
"default"?: QueryParameterSubSchemaDefault,
"maximum"?: QueryParameterSubSchemaMaximum,
"exclusiveMaximum"?: QueryParameterSubSchemaExclusiveMaximum,
"minimum"?: QueryParameterSubSchemaMinimum,
"exclusiveMinimum"?: QueryParameterSubSchemaExclusiveMinimum,
"maxLength"?: QueryParameterSubSchemaMaxLength,
"minLength"?: QueryParameterSubSchemaMinLength,
"pattern"?: QueryParameterSubSchemaPattern,
"maxItems"?: QueryParameterSubSchemaMaxItems,
"minItems"?: QueryParameterSubSchemaMinItems,
"uniqueItems"?: QueryParameterSubSchemaUniqueItems,
"enum"?: QueryParameterSubSchemaEnum,
"multipleOf"?: QueryParameterSubSchemaMultipleOf,
}
)
|
(
{
"required": PathParameterSubSchemaRequired,
"in": PathParameterSubSchemaIn,
"description"?: PathParameterSubSchemaDescription,
"name": PathParameterSubSchemaName,
"type": PathParameterSubSchemaType,
"format"?: PathParameterSubSchemaFormat,
"items"?: PathParameterSubSchemaItems,
"collectionFormat"?: PathParameterSubSchemaCollectionFormat,
"default"?: PathParameterSubSchemaDefault,
"maximum"?: PathParameterSubSchemaMaximum,
"exclusiveMaximum"?: PathParameterSubSchemaExclusiveMaximum,
"minimum"?: PathParameterSubSchemaMinimum,
"exclusiveMinimum"?: PathParameterSubSchemaExclusiveMinimum,
"maxLength"?: PathParameterSubSchemaMaxLength,
"minLength"?: PathParameterSubSchemaMinLength,
"pattern"?: PathParameterSubSchemaPattern,
"maxItems"?: PathParameterSubSchemaMaxItems,
"minItems"?: PathParameterSubSchemaMinItems,
"uniqueItems"?: PathParameterSubSchemaUniqueItems,
"enum"?: PathParameterSubSchemaEnum,
"multipleOf"?: PathParameterSubSchemaMultipleOf,
}
)
);
/**
* @description A deterministic version of a JSON Schema object.
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema}
*/
export type DefinitionsSchema = (
{
"$ref"?: SchemaRef,
"format"?: SchemaFormat,
"title"?: SchemaTitle,
"description"?: SchemaDescription,
"default"?: SchemaDefault,
"multipleOf"?: SchemaMultipleOf,
"maximum"?: SchemaMaximum,
"exclusiveMaximum"?: SchemaExclusiveMaximum,
"minimum"?: SchemaMinimum,
"exclusiveMinimum"?: SchemaExclusiveMinimum,
"maxLength"?: SchemaMaxLength,
"minLength"?: SchemaMinLength,
"pattern"?: SchemaPattern,
"maxItems"?: SchemaMaxItems,
"minItems"?: SchemaMinItems,
"uniqueItems"?: SchemaUniqueItems,
"maxProperties"?: MaxProperties,
"minProperties"?: MinProperties,
"required"?: SchemaRequired,
"enum"?: SchemaEnum,
"additionalProperties"?: PropertiesSchemaAdditionalProperties,
"type"?: SchemaType,
"items"?: SchemaItems,
"allOf"?: AllOf,
"properties"?: Properties,
"discriminator"?: Discriminator,
"readOnly"?: SchemaReadOnly,
"xml"?: SchemaXml,
"externalDocs"?: SchemaExternalDocs,
"example"?: SchemaExample,
}
);
/**
* @description A deterministic version of a JSON Schema object.
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema}
*/
export type FileSchema = (
{
"format"?: FileSchemaFormat,
"title"?: FileSchemaTitle,
"description"?: FileSchemaDescription,
"default"?: FileSchemaDefault,
"required"?: FileSchemaRequired,
"type": FileSchemaType,
"readOnly"?: FileSchemaReadOnly,
"externalDocs"?: FileSchemaExternalDocs,
"example"?: FileSchemaExample,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems}
*/
export type PrimitivesItems = (
{
"type"?: PrimitivesItemsType,
"format"?: PrimitivesItemsFormat,
"items"?: PrimitivesItemsItems,
"collectionFormat"?: PrimitivesItemsCollectionFormat,
"default"?: PrimitivesItemsDefault,
"maximum"?: PrimitivesItemsMaximum,
"exclusiveMaximum"?: PrimitivesItemsExclusiveMaximum,
"minimum"?: PrimitivesItemsMinimum,
"exclusiveMinimum"?: PrimitivesItemsExclusiveMinimum,
"maxLength"?: PrimitivesItemsMaxLength,
"minLength"?: PrimitivesItemsMinLength,
"pattern"?: PrimitivesItemsPattern,
"maxItems"?: PrimitivesItemsMaxItems,
"minItems"?: PrimitivesItemsMinItems,
"uniqueItems"?: PrimitivesItemsUniqueItems,
"enum"?: PrimitivesItemsEnum,
"multipleOf"?: PrimitivesItemsMultipleOf,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/security}
*/
export type DefinitionsSecurity = (
[
...(SecurityItems)[]
]
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityRequirement}
*/
export type SecurityRequirement = (
{
[
name: string
]: SecurityRequirementAdditionalProperties
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml}
*/
export type DefinitionsXml = (
{
"name"?: XmlName,
"namespace"?: Namespace,
"prefix"?: Prefix,
"attribute"?: Attribute,
"wrapped"?: Wrapped,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/tag}
*/
export type Tag = (
{
"name": TagName,
"description"?: TagDescription,
"externalDocs"?: TagExternalDocs,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions}
*/
export type DefinitionsSecurityDefinitions = (
{
[
name: string
]: SecurityDefinitionsAdditionalProperties
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity}
*/
export type BasicAuthenticationSecurity = (
{
"type": BasicAuthenticationSecurityType,
"description"?: BasicAuthenticationSecurityDescription,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity}
*/
export type ApiKeySecurity = (
{
"type": ApiKeySecurityType,
"name": ApiKeySecurityName,
"in": ApiKeySecurityIn,
"description"?: ApiKeySecurityDescription,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity}
*/
export type Oauth2ImplicitSecurity = (
{
"type": Oauth2ImplicitSecurityType,
"flow": Oauth2ImplicitSecurityFlow,
"scopes"?: Oauth2ImplicitSecurityScopes,
"authorizationUrl": Oauth2ImplicitSecurityAuthorizationUrl,
"description"?: Oauth2ImplicitSecurityDescription,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity}
*/
export type Oauth2PasswordSecurity = (
{
"type": Oauth2PasswordSecurityType,
"flow": Oauth2PasswordSecurityFlow,
"scopes"?: Oauth2PasswordSecurityScopes,
"tokenUrl": Oauth2PasswordSecurityTokenUrl,
"description"?: Oauth2PasswordSecurityDescription,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity}
*/
export type Oauth2ApplicationSecurity = (
{
"type": Oauth2ApplicationSecurityType,
"flow": Oauth2ApplicationSecurityFlow,
"scopes"?: Oauth2ApplicationSecurityScopes,
"tokenUrl": Oauth2ApplicationSecurityTokenUrl,
"description"?: Oauth2ApplicationSecurityDescription,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity}
*/
export type Oauth2AccessCodeSecurity = (
{
"type": Oauth2AccessCodeSecurityType,
"flow": Oauth2AccessCodeSecurityFlow,
"scopes"?: Oauth2AccessCodeSecurityScopes,
"authorizationUrl": Oauth2AccessCodeSecurityAuthorizationUrl,
"tokenUrl": Oauth2AccessCodeSecurityTokenUrl,
"description"?: Oauth2AccessCodeSecurityDescription,
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2Scopes}
*/
export type Oauth2Scopes = (
{
[
name: string
]: Oauth2ScopesAdditionalProperties
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/mediaTypeList}
*/
export type MediaTypeList = (
[
...(MediaTypeListItems)[]
]
);
/**
* @description The parameters needed to send a valid API call.
* @see {@link http://swagger.io/v2/schema.json#/definitions/parametersList}
*/
export type ParametersList = (
[
...(ParametersListItems)[]
]
);
/**
* @description The transfer protocol of the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/schemesList}
*/
export type SchemesList = (
[
...(SchemesListItems)[]
]
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/collectionFormat}
*/
export type DefinitionsCollectionFormat = ("csv" |
"ssv" |
"tsv" |
"pipes");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/collectionFormatWithMulti}
*/
export type CollectionFormatWithMulti = ("csv" |
"ssv" |
"tsv" |
"pipes" |
"multi");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/title}
*/
export type DefinitionsTitle = (Draft04Title);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/description}
*/
export type DefinitionsDescription = (Draft04Description);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/default}
*/
export type DefinitionsDefault = (Draft04Default);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/multipleOf}
*/
export type DefinitionsMultipleOf = (Draft04MultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/maximum}
*/
export type DefinitionsMaximum = (Draft04Maximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/exclusiveMaximum}
*/
export type DefinitionsExclusiveMaximum = (Draft04ExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/minimum}
*/
export type DefinitionsMinimum = (Draft04Minimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/exclusiveMinimum}
*/
export type DefinitionsExclusiveMinimum = (Draft04ExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/maxLength}
*/
export type DefinitionsMaxLength = (PositiveInteger);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/minLength}
*/
export type DefinitionsMinLength = (PositiveIntegerDefault0);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pattern}
*/
export type DefinitionsPattern = (Draft04Pattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/maxItems}
*/
export type DefinitionsMaxItems = (PositiveInteger);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/minItems}
*/
export type DefinitionsMinItems = (PositiveIntegerDefault0);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/uniqueItems}
*/
export type DefinitionsUniqueItems = (Draft04UniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/enum}
*/
export type DefinitionsEnum = (Draft04Enum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/jsonReference}
*/
export type JsonReference = (
{
"$ref": JsonReferenceRef,
}
);
/**
* @description The Swagger version of this document.
* @see {@link http://swagger.io/v2/schema.json#/properties/swagger}
*/
export type Swagger = ("2.0");
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/info}
*/
export type PropertiesInfo = (DefinitionsInfo);
/**
* @description The host (name or ip) of the API. Example: &apos;swagger.io&apos;
* @see {@link http://swagger.io/v2/schema.json#/properties/host}
*/
export type Host = (string);
/**
* @description The base path to the API. Example: &apos;/api&apos;.
* @see {@link http://swagger.io/v2/schema.json#/properties/basePath}
*/
export type BasePath = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/schemes}
*/
export type PropertiesSchemes = (SchemesList);
/**
* @description A list of MIME types accepted by the API.
* @see {@link http://swagger.io/v2/schema.json#/properties/consumes}
*/
export type PropertiesConsumes = (PropertiesAllOfConsumes0);
/**
* @description A list of MIME types the API can produce.
* @see {@link http://swagger.io/v2/schema.json#/properties/produces}
*/
export type PropertiesProduces = (PropertiesAllOfProduces0);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/paths}
*/
export type PropertiesPaths = (DefinitionsPaths);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/definitions}
*/
export type PropertiesDefinitions = (DefinitionsDefinitions);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/parameters}
*/
export type PropertiesParameters = (ParameterDefinitions);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/responses}
*/
export type PropertiesResponses = (ResponseDefinitions);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/security}
*/
export type PropertiesSecurity = (DefinitionsSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/securityDefinitions}
*/
export type PropertiesSecurityDefinitions = (DefinitionsSecurityDefinitions);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/tags}
*/
export type PropertiesTags = (
[
...(PropertiesTagsItems)[]
]
);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/externalDocs}
*/
export type PropertiesExternalDocs = (DefinitionsExternalDocs);
/**
* @see {@link http://swagger.io/v2/schema.json#/additionalProperties}
*/
export type V2AdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/patternProperties/^x-}
*/
export type V2PatternPropertiesX = (VendorExtension);
/**
* @description A unique and precise title of the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/properties/title}
*/
export type InfoTitle = (string);
/**
* @description A semantic version number of the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/properties/version}
*/
export type Version = (string);
/**
* @description A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/properties/description}
*/
export type InfoDescription = (string);
/**
* @description The terms of service for the API.
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/properties/termsOfService}
*/
export type TermsOfService = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/properties/contact}
*/
export type InfoContact = (DefinitionsContact);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/properties/license}
*/
export type InfoLicense = (DefinitionsLicense);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/additionalProperties}
*/
export type InfoAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/info/patternProperties/^x-}
*/
export type InfoX = (VendorExtension);
/**
* @description The identifying name of the contact person/organization.
* @see {@link http://swagger.io/v2/schema.json#/definitions/contact/properties/name}
*/
export type ContactName = (string);
/**
* @description The URL pointing to the contact information.
* @see {@link http://swagger.io/v2/schema.json#/definitions/contact/properties/url}
*/
export type ContactUrl = (string);
/**
* @description The email address of the contact person/organization.
* @see {@link http://swagger.io/v2/schema.json#/definitions/contact/properties/email}
*/
export type Email = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/contact/additionalProperties}
*/
export type ContactAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/contact/patternProperties/^x-}
*/
export type ContactX = (VendorExtension);
/**
* @description The name of the license type. It&apos;s encouraged to use an OSI compatible license.
* @see {@link http://swagger.io/v2/schema.json#/definitions/license/properties/name}
*/
export type LicenseName = (string);
/**
* @description The URL pointing to the license.
* @see {@link http://swagger.io/v2/schema.json#/definitions/license/properties/url}
*/
export type LicenseUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/license/additionalProperties}
*/
export type LicenseAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/license/patternProperties/^x-}
*/
export type LicenseX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/paths/additionalProperties}
*/
export type PathsAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/paths/patternProperties/^x-}
*/
export type PathsX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/paths/patternProperties/^/}
*/
export type PatternProperties = (PathItem);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/definitions/additionalProperties}
*/
export type DefinitionsAdditionalProperties = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parameterDefinitions/additionalProperties}
*/
export type ParameterDefinitionsAdditionalProperties = (Parameter);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responseDefinitions/additionalProperties}
*/
export type ResponseDefinitionsAdditionalProperties = (Response);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/externalDocs/properties/description}
*/
export type ExternalDocsDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/externalDocs/properties/url}
*/
export type ExternalDocsUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/externalDocs/additionalProperties}
*/
export type ExternalDocsAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/externalDocs/patternProperties/^x-}
*/
export type ExternalDocsX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/examples/additionalProperties}
*/
export type ExamplesAdditionalProperties = (any);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/tags}
*/
export type OperationTags = (
[
...(OperationTagsItems)[]
]
);
/**
* @description A brief summary of the operation.
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/summary}
*/
export type Summary = (string);
/**
* @description A longer description of the operation, GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/description}
*/
export type OperationDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/externalDocs}
*/
export type OperationExternalDocs = (DefinitionsExternalDocs);
/**
* @description A unique identifier of the operation.
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/operationId}
*/
export type OperationId = (string);
/**
* @description A list of MIME types the API can produce.
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/produces}
*/
export type OperationProduces = (OperationAllOfProduces0);
/**
* @description A list of MIME types the API can consume.
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/consumes}
*/
export type OperationConsumes = (OperationAllOfConsumes0);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/parameters}
*/
export type OperationParameters = (ParametersList);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/responses}
*/
export type OperationResponses = (DefinitionsResponses);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/schemes}
*/
export type OperationSchemes = (SchemesList);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/deprecated}
*/
export type Deprecated = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/security}
*/
export type OperationSecurity = (DefinitionsSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/additionalProperties}
*/
export type OperationAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/patternProperties/^x-}
*/
export type OperationX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/$ref}
*/
export type PathItemRef = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/get}
*/
export type Get = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/put}
*/
export type Put = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/post}
*/
export type Post = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/delete}
*/
export type Delete = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/options}
*/
export type Options = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/head}
*/
export type Head = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/patch}
*/
export type Patch = (Operation);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/properties/parameters}
*/
export type PathItemParameters = (ParametersList);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/additionalProperties}
*/
export type PathItemAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathItem/patternProperties/^x-}
*/
export type PathItemX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses/additionalProperties}
*/
export type ResponsesAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses/patternProperties/^([0-9]{3})$|^(default)$}
*/
export type Responses093Default = (ResponseValue);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses/patternProperties/^x-}
*/
export type ResponsesX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses/not}
*/
export type Not = (
{
[
name: string
]: (never) |
NotX
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responseValue/oneOf/0}
*/
export type ResponseValue0 = (Response);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responseValue/oneOf/1}
*/
export type ResponseValue1 = (JsonReference);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/properties/description}
*/
export type ResponseDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/properties/schema}
*/
export type ResponseSchema = (
Response0
|
Response1
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/properties/headers}
*/
export type ResponseHeaders = (DefinitionsHeaders);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/properties/examples}
*/
export type ResponseExamples = (DefinitionsExamples);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/additionalProperties}
*/
export type ResponseAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/patternProperties/^x-}
*/
export type ResponseX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headers/additionalProperties}
*/
export type HeadersAdditionalProperties = (Header);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/type}
*/
export type HeaderType = ("string" |
"number" |
"integer" |
"boolean" |
"array");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/format}
*/
export type HeaderFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/items}
*/
export type HeaderItems = (PrimitivesItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/collectionFormat}
*/
export type HeaderCollectionFormat = (DefinitionsCollectionFormat);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/default}
*/
export type HeaderDefault = (DefinitionsDefault);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/maximum}
*/
export type HeaderMaximum = (DefinitionsMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/exclusiveMaximum}
*/
export type HeaderExclusiveMaximum = (DefinitionsExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/minimum}
*/
export type HeaderMinimum = (DefinitionsMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/exclusiveMinimum}
*/
export type HeaderExclusiveMinimum = (DefinitionsExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/maxLength}
*/
export type HeaderMaxLength = (DefinitionsMaxLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/minLength}
*/
export type HeaderMinLength = (DefinitionsMinLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/pattern}
*/
export type HeaderPattern = (DefinitionsPattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/maxItems}
*/
export type HeaderMaxItems = (DefinitionsMaxItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/minItems}
*/
export type HeaderMinItems = (DefinitionsMinItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/uniqueItems}
*/
export type HeaderUniqueItems = (DefinitionsUniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/enum}
*/
export type HeaderEnum = (DefinitionsEnum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/multipleOf}
*/
export type HeaderMultipleOf = (DefinitionsMultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/properties/description}
*/
export type HeaderDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/additionalProperties}
*/
export type HeaderAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/header/patternProperties/^x-}
*/
export type HeaderX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/vendorExtension/additionalProperties}
*/
export type VendorExtensionAdditionalProperties = (any);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/vendorExtension/additionalItems}
*/
export type VendorExtensionAdditionalItems = (any);
/**
* @description A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/description}
*/
export type BodyParameterDescription = (string);
/**
* @description The name of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/name}
*/
export type BodyParameterName = (string);
/**
* @description Determines the location of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/in}
*/
export type BodyParameterIn = ("body");
/**
* @description Determines whether or not this parameter is required or optional.
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/required}
*/
export type BodyParameterRequired = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/properties/schema}
*/
export type BodyParameterSchema = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/additionalProperties}
*/
export type BodyParameterAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/bodyParameter/patternProperties/^x-}
*/
export type BodyParameterX = (VendorExtension);
/**
* @description Determines whether or not this parameter is required or optional.
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/required}
*/
export type HeaderParameterSubSchemaRequired = (boolean);
/**
* @description Determines the location of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/in}
*/
export type HeaderParameterSubSchemaIn = ("header");
/**
* @description A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/description}
*/
export type HeaderParameterSubSchemaDescription = (string);
/**
* @description The name of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/name}
*/
export type HeaderParameterSubSchemaName = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/type}
*/
export type HeaderParameterSubSchemaType = ("string" |
"number" |
"boolean" |
"integer" |
"array");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/format}
*/
export type HeaderParameterSubSchemaFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/items}
*/
export type HeaderParameterSubSchemaItems = (PrimitivesItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/collectionFormat}
*/
export type HeaderParameterSubSchemaCollectionFormat = (DefinitionsCollectionFormat);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/default}
*/
export type HeaderParameterSubSchemaDefault = (DefinitionsDefault);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maximum}
*/
export type HeaderParameterSubSchemaMaximum = (DefinitionsMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/exclusiveMaximum}
*/
export type HeaderParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minimum}
*/
export type HeaderParameterSubSchemaMinimum = (DefinitionsMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/exclusiveMinimum}
*/
export type HeaderParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maxLength}
*/
export type HeaderParameterSubSchemaMaxLength = (DefinitionsMaxLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minLength}
*/
export type HeaderParameterSubSchemaMinLength = (DefinitionsMinLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/pattern}
*/
export type HeaderParameterSubSchemaPattern = (DefinitionsPattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/maxItems}
*/
export type HeaderParameterSubSchemaMaxItems = (DefinitionsMaxItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/minItems}
*/
export type HeaderParameterSubSchemaMinItems = (DefinitionsMinItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/uniqueItems}
*/
export type HeaderParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/enum}
*/
export type HeaderParameterSubSchemaEnum = (DefinitionsEnum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/properties/multipleOf}
*/
export type HeaderParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/additionalProperties}
*/
export type HeaderParameterSubSchemaAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/headerParameterSubSchema/patternProperties/^x-}
*/
export type HeaderParameterSubSchemaX = (VendorExtension);
/**
* @description Determines whether or not this parameter is required or optional.
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/required}
*/
export type QueryParameterSubSchemaRequired = (boolean);
/**
* @description Determines the location of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/in}
*/
export type QueryParameterSubSchemaIn = ("query");
/**
* @description A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/description}
*/
export type QueryParameterSubSchemaDescription = (string);
/**
* @description The name of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/name}
*/
export type QueryParameterSubSchemaName = (string);
/**
* @description allows sending a parameter by name only or with an empty value.
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/allowEmptyValue}
*/
export type QueryParameterSubSchemaAllowEmptyValue = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/type}
*/
export type QueryParameterSubSchemaType = ("string" |
"number" |
"boolean" |
"integer" |
"array");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/format}
*/
export type QueryParameterSubSchemaFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/items}
*/
export type QueryParameterSubSchemaItems = (PrimitivesItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/collectionFormat}
*/
export type QueryParameterSubSchemaCollectionFormat = (CollectionFormatWithMulti);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/default}
*/
export type QueryParameterSubSchemaDefault = (DefinitionsDefault);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maximum}
*/
export type QueryParameterSubSchemaMaximum = (DefinitionsMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/exclusiveMaximum}
*/
export type QueryParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minimum}
*/
export type QueryParameterSubSchemaMinimum = (DefinitionsMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/exclusiveMinimum}
*/
export type QueryParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maxLength}
*/
export type QueryParameterSubSchemaMaxLength = (DefinitionsMaxLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minLength}
*/
export type QueryParameterSubSchemaMinLength = (DefinitionsMinLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/pattern}
*/
export type QueryParameterSubSchemaPattern = (DefinitionsPattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/maxItems}
*/
export type QueryParameterSubSchemaMaxItems = (DefinitionsMaxItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/minItems}
*/
export type QueryParameterSubSchemaMinItems = (DefinitionsMinItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/uniqueItems}
*/
export type QueryParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/enum}
*/
export type QueryParameterSubSchemaEnum = (DefinitionsEnum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/properties/multipleOf}
*/
export type QueryParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/additionalProperties}
*/
export type QueryParameterSubSchemaAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/queryParameterSubSchema/patternProperties/^x-}
*/
export type QueryParameterSubSchemaX = (VendorExtension);
/**
* @description Determines whether or not this parameter is required or optional.
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/required}
*/
export type FormDataParameterSubSchemaRequired = (boolean);
/**
* @description Determines the location of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/in}
*/
export type FormDataParameterSubSchemaIn = ("formData");
/**
* @description A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/description}
*/
export type FormDataParameterSubSchemaDescription = (string);
/**
* @description The name of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/name}
*/
export type FormDataParameterSubSchemaName = (string);
/**
* @description allows sending a parameter by name only or with an empty value.
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/allowEmptyValue}
*/
export type FormDataParameterSubSchemaAllowEmptyValue = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/type}
*/
export type FormDataParameterSubSchemaType = ("string" |
"number" |
"boolean" |
"integer" |
"array" |
"file");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/format}
*/
export type FormDataParameterSubSchemaFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/items}
*/
export type FormDataParameterSubSchemaItems = (PrimitivesItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/collectionFormat}
*/
export type FormDataParameterSubSchemaCollectionFormat = (CollectionFormatWithMulti);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/default}
*/
export type FormDataParameterSubSchemaDefault = (DefinitionsDefault);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maximum}
*/
export type FormDataParameterSubSchemaMaximum = (DefinitionsMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/exclusiveMaximum}
*/
export type FormDataParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minimum}
*/
export type FormDataParameterSubSchemaMinimum = (DefinitionsMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/exclusiveMinimum}
*/
export type FormDataParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maxLength}
*/
export type FormDataParameterSubSchemaMaxLength = (DefinitionsMaxLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minLength}
*/
export type FormDataParameterSubSchemaMinLength = (DefinitionsMinLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/pattern}
*/
export type FormDataParameterSubSchemaPattern = (DefinitionsPattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/maxItems}
*/
export type FormDataParameterSubSchemaMaxItems = (DefinitionsMaxItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/minItems}
*/
export type FormDataParameterSubSchemaMinItems = (DefinitionsMinItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/uniqueItems}
*/
export type FormDataParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/enum}
*/
export type FormDataParameterSubSchemaEnum = (DefinitionsEnum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/properties/multipleOf}
*/
export type FormDataParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/additionalProperties}
*/
export type FormDataParameterSubSchemaAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/formDataParameterSubSchema/patternProperties/^x-}
*/
export type FormDataParameterSubSchemaX = (VendorExtension);
/**
* @description Determines whether or not this parameter is required or optional.
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/required}
*/
export type PathParameterSubSchemaRequired = (true);
/**
* @description Determines the location of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/in}
*/
export type PathParameterSubSchemaIn = ("path");
/**
* @description A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/description}
*/
export type PathParameterSubSchemaDescription = (string);
/**
* @description The name of the parameter.
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/name}
*/
export type PathParameterSubSchemaName = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/type}
*/
export type PathParameterSubSchemaType = ("string" |
"number" |
"boolean" |
"integer" |
"array");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/format}
*/
export type PathParameterSubSchemaFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/items}
*/
export type PathParameterSubSchemaItems = (PrimitivesItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/collectionFormat}
*/
export type PathParameterSubSchemaCollectionFormat = (DefinitionsCollectionFormat);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/default}
*/
export type PathParameterSubSchemaDefault = (DefinitionsDefault);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maximum}
*/
export type PathParameterSubSchemaMaximum = (DefinitionsMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/exclusiveMaximum}
*/
export type PathParameterSubSchemaExclusiveMaximum = (DefinitionsExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minimum}
*/
export type PathParameterSubSchemaMinimum = (DefinitionsMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/exclusiveMinimum}
*/
export type PathParameterSubSchemaExclusiveMinimum = (DefinitionsExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maxLength}
*/
export type PathParameterSubSchemaMaxLength = (DefinitionsMaxLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minLength}
*/
export type PathParameterSubSchemaMinLength = (DefinitionsMinLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/pattern}
*/
export type PathParameterSubSchemaPattern = (DefinitionsPattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/maxItems}
*/
export type PathParameterSubSchemaMaxItems = (DefinitionsMaxItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/minItems}
*/
export type PathParameterSubSchemaMinItems = (DefinitionsMinItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/uniqueItems}
*/
export type PathParameterSubSchemaUniqueItems = (DefinitionsUniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/enum}
*/
export type PathParameterSubSchemaEnum = (DefinitionsEnum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/properties/multipleOf}
*/
export type PathParameterSubSchemaMultipleOf = (DefinitionsMultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/additionalProperties}
*/
export type PathParameterSubSchemaAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/pathParameterSubSchema/patternProperties/^x-}
*/
export type PathParameterSubSchemaX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/0}
*/
export type NonBodyParameter0 = (HeaderParameterSubSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/1}
*/
export type NonBodyParameter1 = (FormDataParameterSubSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/2}
*/
export type NonBodyParameter2 = (QueryParameterSubSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/nonBodyParameter/oneOf/3}
*/
export type NonBodyParameter3 = (PathParameterSubSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parameter/oneOf/0}
*/
export type Parameter0 = (BodyParameter);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parameter/oneOf/1}
*/
export type Parameter1 = (NonBodyParameter);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/$ref}
*/
export type SchemaRef = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/format}
*/
export type SchemaFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/title}
*/
export type SchemaTitle = (Draft04Title);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/description}
*/
export type SchemaDescription = (Draft04Description);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/default}
*/
export type SchemaDefault = (Draft04Default);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/multipleOf}
*/
export type SchemaMultipleOf = (Draft04MultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/maximum}
*/
export type SchemaMaximum = (Draft04Maximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/exclusiveMaximum}
*/
export type SchemaExclusiveMaximum = (Draft04ExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/minimum}
*/
export type SchemaMinimum = (Draft04Minimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/exclusiveMinimum}
*/
export type SchemaExclusiveMinimum = (Draft04ExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/maxLength}
*/
export type SchemaMaxLength = (PositiveInteger);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/minLength}
*/
export type SchemaMinLength = (PositiveIntegerDefault0);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/pattern}
*/
export type SchemaPattern = (Draft04Pattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/maxItems}
*/
export type SchemaMaxItems = (PositiveInteger);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/minItems}
*/
export type SchemaMinItems = (PositiveIntegerDefault0);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/uniqueItems}
*/
export type SchemaUniqueItems = (Draft04UniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/maxProperties}
*/
export type MaxProperties = (PositiveInteger);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/minProperties}
*/
export type MinProperties = (PositiveIntegerDefault0);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/required}
*/
export type SchemaRequired = (StringArray);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/enum}
*/
export type SchemaEnum = (Draft04Enum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties}
*/
export type PropertiesSchemaAdditionalProperties = (
AdditionalPropertiesAnyOf0
|
AdditionalPropertiesAnyOf1
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/type}
*/
export type SchemaType = (Draft04Type);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/items}
*/
export type SchemaItems = (
ItemsAnyOf0
|
ItemsAnyOf1
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/allOf}
*/
export type AllOf = (
[
...(AllOfItems)[]
]
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/properties}
*/
export type Properties = (
{
[
name: string
]: PropertiesAdditionalProperties
}
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/discriminator}
*/
export type Discriminator = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/readOnly}
*/
export type SchemaReadOnly = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/xml}
*/
export type SchemaXml = (DefinitionsXml);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/externalDocs}
*/
export type SchemaExternalDocs = (DefinitionsExternalDocs);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/example}
*/
export type SchemaExample = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/additionalProperties}
*/
export type DefinitionsSchemaAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/patternProperties/^x-}
*/
export type SchemaPatternPropertiesX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/format}
*/
export type FileSchemaFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/title}
*/
export type FileSchemaTitle = (Draft04Title);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/description}
*/
export type FileSchemaDescription = (Draft04Description);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/default}
*/
export type FileSchemaDefault = (Draft04Default);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/required}
*/
export type FileSchemaRequired = (StringArray);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/type}
*/
export type FileSchemaType = ("file");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/readOnly}
*/
export type FileSchemaReadOnly = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/externalDocs}
*/
export type FileSchemaExternalDocs = (DefinitionsExternalDocs);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/properties/example}
*/
export type FileSchemaExample = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/additionalProperties}
*/
export type FileSchemaAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/fileSchema/patternProperties/^x-}
*/
export type FileSchemaX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/type}
*/
export type PrimitivesItemsType = ("string" |
"number" |
"integer" |
"boolean" |
"array");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/format}
*/
export type PrimitivesItemsFormat = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/items}
*/
export type PrimitivesItemsItems = (PrimitivesItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/collectionFormat}
*/
export type PrimitivesItemsCollectionFormat = (DefinitionsCollectionFormat);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/default}
*/
export type PrimitivesItemsDefault = (DefinitionsDefault);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maximum}
*/
export type PrimitivesItemsMaximum = (DefinitionsMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/exclusiveMaximum}
*/
export type PrimitivesItemsExclusiveMaximum = (DefinitionsExclusiveMaximum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minimum}
*/
export type PrimitivesItemsMinimum = (DefinitionsMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/exclusiveMinimum}
*/
export type PrimitivesItemsExclusiveMinimum = (DefinitionsExclusiveMinimum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maxLength}
*/
export type PrimitivesItemsMaxLength = (DefinitionsMaxLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minLength}
*/
export type PrimitivesItemsMinLength = (DefinitionsMinLength);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/pattern}
*/
export type PrimitivesItemsPattern = (DefinitionsPattern);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/maxItems}
*/
export type PrimitivesItemsMaxItems = (DefinitionsMaxItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/minItems}
*/
export type PrimitivesItemsMinItems = (DefinitionsMinItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/uniqueItems}
*/
export type PrimitivesItemsUniqueItems = (DefinitionsUniqueItems);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/enum}
*/
export type PrimitivesItemsEnum = (DefinitionsEnum);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/properties/multipleOf}
*/
export type PrimitivesItemsMultipleOf = (DefinitionsMultipleOf);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/additionalProperties}
*/
export type PrimitivesItemsAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/primitivesItems/patternProperties/^x-}
*/
export type PrimitivesItemsX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/security/items}
*/
export type SecurityItems = (SecurityRequirement);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityRequirement/additionalProperties}
*/
export type SecurityRequirementAdditionalProperties = (
[
...(SecurityRequirementItems)[]
]
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/properties/name}
*/
export type XmlName = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/properties/namespace}
*/
export type Namespace = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/properties/prefix}
*/
export type Prefix = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/properties/attribute}
*/
export type Attribute = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/properties/wrapped}
*/
export type Wrapped = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/additionalProperties}
*/
export type XmlAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/xml/patternProperties/^x-}
*/
export type XmlX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/tag/properties/name}
*/
export type TagName = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/tag/properties/description}
*/
export type TagDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/tag/properties/externalDocs}
*/
export type TagExternalDocs = (DefinitionsExternalDocs);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/tag/additionalProperties}
*/
export type TagAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/tag/patternProperties/^x-}
*/
export type TagX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties}
*/
export type SecurityDefinitionsAdditionalProperties = (
SecurityDefinitions0
|
SecurityDefinitions1
|
SecurityDefinitions2
|
SecurityDefinitions3
|
SecurityDefinitions4
|
SecurityDefinitions5
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/properties/type}
*/
export type BasicAuthenticationSecurityType = ("basic");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/properties/description}
*/
export type BasicAuthenticationSecurityDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/additionalProperties}
*/
export type BasicAuthenticationSecurityAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/basicAuthenticationSecurity/patternProperties/^x-}
*/
export type BasicAuthenticationSecurityX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/type}
*/
export type ApiKeySecurityType = ("apiKey");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/name}
*/
export type ApiKeySecurityName = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/in}
*/
export type ApiKeySecurityIn = ("header" |
"query");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/properties/description}
*/
export type ApiKeySecurityDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/additionalProperties}
*/
export type ApiKeySecurityAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/apiKeySecurity/patternProperties/^x-}
*/
export type ApiKeySecurityX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/type}
*/
export type Oauth2ImplicitSecurityType = ("oauth2");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/flow}
*/
export type Oauth2ImplicitSecurityFlow = ("implicit");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/scopes}
*/
export type Oauth2ImplicitSecurityScopes = (Oauth2Scopes);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/authorizationUrl}
*/
export type Oauth2ImplicitSecurityAuthorizationUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/properties/description}
*/
export type Oauth2ImplicitSecurityDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/additionalProperties}
*/
export type Oauth2ImplicitSecurityAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ImplicitSecurity/patternProperties/^x-}
*/
export type Oauth2ImplicitSecurityX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/type}
*/
export type Oauth2PasswordSecurityType = ("oauth2");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/flow}
*/
export type Oauth2PasswordSecurityFlow = ("password");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/scopes}
*/
export type Oauth2PasswordSecurityScopes = (Oauth2Scopes);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/tokenUrl}
*/
export type Oauth2PasswordSecurityTokenUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/properties/description}
*/
export type Oauth2PasswordSecurityDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/additionalProperties}
*/
export type Oauth2PasswordSecurityAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2PasswordSecurity/patternProperties/^x-}
*/
export type Oauth2PasswordSecurityX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/type}
*/
export type Oauth2ApplicationSecurityType = ("oauth2");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/flow}
*/
export type Oauth2ApplicationSecurityFlow = ("application");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/scopes}
*/
export type Oauth2ApplicationSecurityScopes = (Oauth2Scopes);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/tokenUrl}
*/
export type Oauth2ApplicationSecurityTokenUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/properties/description}
*/
export type Oauth2ApplicationSecurityDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/additionalProperties}
*/
export type Oauth2ApplicationSecurityAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2ApplicationSecurity/patternProperties/^x-}
*/
export type Oauth2ApplicationSecurityX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/type}
*/
export type Oauth2AccessCodeSecurityType = ("oauth2");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/flow}
*/
export type Oauth2AccessCodeSecurityFlow = ("accessCode");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/scopes}
*/
export type Oauth2AccessCodeSecurityScopes = (Oauth2Scopes);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/authorizationUrl}
*/
export type Oauth2AccessCodeSecurityAuthorizationUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/tokenUrl}
*/
export type Oauth2AccessCodeSecurityTokenUrl = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/properties/description}
*/
export type Oauth2AccessCodeSecurityDescription = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/additionalProperties}
*/
export type Oauth2AccessCodeSecurityAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2AccessCodeSecurity/patternProperties/^x-}
*/
export type Oauth2AccessCodeSecurityX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/oauth2Scopes/additionalProperties}
*/
export type Oauth2ScopesAdditionalProperties = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/mediaTypeList/items}
*/
export type MediaTypeListItems = (MimeType);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parametersList/items}
*/
export type ParametersListItems = (
Parameter0
|
(
{
"required"?: HeaderParameterSubSchemaRequired,
"in": HeaderParameterSubSchemaIn,
"description"?: HeaderParameterSubSchemaDescription,
"name": HeaderParameterSubSchemaName,
"type": HeaderParameterSubSchemaType,
"format"?: HeaderParameterSubSchemaFormat,
"items"?: HeaderParameterSubSchemaItems,
"collectionFormat"?: HeaderParameterSubSchemaCollectionFormat,
"default"?: HeaderParameterSubSchemaDefault,
"maximum"?: HeaderParameterSubSchemaMaximum,
"exclusiveMaximum"?: HeaderParameterSubSchemaExclusiveMaximum,
"minimum"?: HeaderParameterSubSchemaMinimum,
"exclusiveMinimum"?: HeaderParameterSubSchemaExclusiveMinimum,
"maxLength"?: HeaderParameterSubSchemaMaxLength,
"minLength"?: HeaderParameterSubSchemaMinLength,
"pattern"?: HeaderParameterSubSchemaPattern,
"maxItems"?: HeaderParameterSubSchemaMaxItems,
"minItems"?: HeaderParameterSubSchemaMinItems,
"uniqueItems"?: HeaderParameterSubSchemaUniqueItems,
"enum"?: HeaderParameterSubSchemaEnum,
"multipleOf"?: HeaderParameterSubSchemaMultipleOf,
}
)
|
(
{
"required"?: FormDataParameterSubSchemaRequired,
"in": FormDataParameterSubSchemaIn,
"description"?: FormDataParameterSubSchemaDescription,
"name": FormDataParameterSubSchemaName,
"allowEmptyValue"?: FormDataParameterSubSchemaAllowEmptyValue,
"type": FormDataParameterSubSchemaType,
"format"?: FormDataParameterSubSchemaFormat,
"items"?: FormDataParameterSubSchemaItems,
"collectionFormat"?: FormDataParameterSubSchemaCollectionFormat,
"default"?: FormDataParameterSubSchemaDefault,
"maximum"?: FormDataParameterSubSchemaMaximum,
"exclusiveMaximum"?: FormDataParameterSubSchemaExclusiveMaximum,
"minimum"?: FormDataParameterSubSchemaMinimum,
"exclusiveMinimum"?: FormDataParameterSubSchemaExclusiveMinimum,
"maxLength"?: FormDataParameterSubSchemaMaxLength,
"minLength"?: FormDataParameterSubSchemaMinLength,
"pattern"?: FormDataParameterSubSchemaPattern,
"maxItems"?: FormDataParameterSubSchemaMaxItems,
"minItems"?: FormDataParameterSubSchemaMinItems,
"uniqueItems"?: FormDataParameterSubSchemaUniqueItems,
"enum"?: FormDataParameterSubSchemaEnum,
"multipleOf"?: FormDataParameterSubSchemaMultipleOf,
}
)
|
(
{
"required"?: QueryParameterSubSchemaRequired,
"in": QueryParameterSubSchemaIn,
"description"?: QueryParameterSubSchemaDescription,
"name": QueryParameterSubSchemaName,
"allowEmptyValue"?: QueryParameterSubSchemaAllowEmptyValue,
"type": QueryParameterSubSchemaType,
"format"?: QueryParameterSubSchemaFormat,
"items"?: QueryParameterSubSchemaItems,
"collectionFormat"?: QueryParameterSubSchemaCollectionFormat,
"default"?: QueryParameterSubSchemaDefault,
"maximum"?: QueryParameterSubSchemaMaximum,
"exclusiveMaximum"?: QueryParameterSubSchemaExclusiveMaximum,
"minimum"?: QueryParameterSubSchemaMinimum,
"exclusiveMinimum"?: QueryParameterSubSchemaExclusiveMinimum,
"maxLength"?: QueryParameterSubSchemaMaxLength,
"minLength"?: QueryParameterSubSchemaMinLength,
"pattern"?: QueryParameterSubSchemaPattern,
"maxItems"?: QueryParameterSubSchemaMaxItems,
"minItems"?: QueryParameterSubSchemaMinItems,
"uniqueItems"?: QueryParameterSubSchemaUniqueItems,
"enum"?: QueryParameterSubSchemaEnum,
"multipleOf"?: QueryParameterSubSchemaMultipleOf,
}
)
|
(
{
"required": PathParameterSubSchemaRequired,
"in": PathParameterSubSchemaIn,
"description"?: PathParameterSubSchemaDescription,
"name": PathParameterSubSchemaName,
"type": PathParameterSubSchemaType,
"format"?: PathParameterSubSchemaFormat,
"items"?: PathParameterSubSchemaItems,
"collectionFormat"?: PathParameterSubSchemaCollectionFormat,
"default"?: PathParameterSubSchemaDefault,
"maximum"?: PathParameterSubSchemaMaximum,
"exclusiveMaximum"?: PathParameterSubSchemaExclusiveMaximum,
"minimum"?: PathParameterSubSchemaMinimum,
"exclusiveMinimum"?: PathParameterSubSchemaExclusiveMinimum,
"maxLength"?: PathParameterSubSchemaMaxLength,
"minLength"?: PathParameterSubSchemaMinLength,
"pattern"?: PathParameterSubSchemaPattern,
"maxItems"?: PathParameterSubSchemaMaxItems,
"minItems"?: PathParameterSubSchemaMinItems,
"uniqueItems"?: PathParameterSubSchemaUniqueItems,
"enum"?: PathParameterSubSchemaEnum,
"multipleOf"?: PathParameterSubSchemaMultipleOf,
}
)
|
ParametersList1
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parametersList/additionalItems}
*/
export type ParametersListAdditionalItems = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schemesList/items}
*/
export type SchemesListItems = ("http" |
"https" |
"ws" |
"wss");
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/jsonReference/properties/$ref}
*/
export type JsonReferenceRef = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/jsonReference/additionalProperties}
*/
export type JsonReferenceAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/consumes/allOf/0}
*/
export type PropertiesAllOfConsumes0 = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/produces/allOf/0}
*/
export type PropertiesAllOfProduces0 = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/properties/tags/items}
*/
export type PropertiesTagsItems = (Tag);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/tags/items}
*/
export type OperationTagsItems = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/produces/allOf/0}
*/
export type OperationAllOfProduces0 = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/operation/properties/consumes/allOf/0}
*/
export type OperationAllOfConsumes0 = (unknown);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses/not/additionalProperties}
*/
export type NotAdditionalProperties = (never);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/responses/not/patternProperties/^x-}
*/
export type NotX = (VendorExtension);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/properties/schema/oneOf/0}
*/
export type Response0 = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/response/properties/schema/oneOf/1}
*/
export type Response1 = (FileSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties/anyOf/0}
*/
export type AdditionalPropertiesAnyOf0 = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/additionalProperties/anyOf/1}
*/
export type AdditionalPropertiesAnyOf1 = (boolean);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/0}
*/
export type ItemsAnyOf0 = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/1}
*/
export type ItemsAnyOf1 = (
[
...(Items1AnyOfItems)[]
]
);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/allOf/items}
*/
export type AllOfItems = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/properties/additionalProperties}
*/
export type PropertiesAdditionalProperties = (DefinitionsSchema);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityRequirement/additionalProperties/items}
*/
export type SecurityRequirementItems = (string);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/0}
*/
export type SecurityDefinitions0 = (BasicAuthenticationSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/1}
*/
export type SecurityDefinitions1 = (ApiKeySecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/2}
*/
export type SecurityDefinitions2 = (Oauth2ImplicitSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/3}
*/
export type SecurityDefinitions3 = (Oauth2PasswordSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/4}
*/
export type SecurityDefinitions4 = (Oauth2ApplicationSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/securityDefinitions/additionalProperties/oneOf/5}
*/
export type SecurityDefinitions5 = (Oauth2AccessCodeSecurity);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parametersList/items/oneOf/0}
*/
export type ParametersList0 = (Parameter);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/parametersList/items/oneOf/1}
*/
export type ParametersList1 = (JsonReference);
/**
* @see {@link http://swagger.io/v2/schema.json#/definitions/schema/properties/items/anyOf/1/items}
*/
export type Items1AnyOfItems = (DefinitionsSchema);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/title}
*/
export type Draft04Title = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/description}
*/
export type Draft04Description = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/default}
*/
export type Draft04Default = (unknown);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/multipleOf}
*/
export type Draft04MultipleOf = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/maximum}
*/
export type Draft04Maximum = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum}
*/
export type Draft04ExclusiveMaximum = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/minimum}
*/
export type Draft04Minimum = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum}
*/
export type Draft04ExclusiveMinimum = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveInteger}
*/
export type PositiveInteger = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0}
*/
export type PositiveIntegerDefault0 = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/0}
*/
export type PositiveIntegerDefault00 = (PositiveInteger);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/1}
*/
export type PositiveIntegerDefault01 = (unknown);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/pattern}
*/
export type Draft04Pattern = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/uniqueItems}
*/
export type Draft04UniqueItems = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/enum}
*/
export type Draft04Enum = (
[
...any
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/stringArray}
*/
export type StringArray = (
[
...(StringArrayItems)[]
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/stringArray/items}
*/
export type StringArrayItems = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type}
*/
export type Draft04Type = (unknown);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type/anyOf/0}
*/
export type TypeAnyOf0 = (SimpleTypes);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type/anyOf/1}
*/
export type TypeAnyOf1 = (
[
...(Type1AnyOfItems)[]
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type/anyOf/1/items}
*/
export type Type1AnyOfItems = (SimpleTypes);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/simpleTypes}
*/
export type SimpleTypes = ("array" |
"boolean" |
"integer" |
"null" |
"number" |
"object" |
"string");
