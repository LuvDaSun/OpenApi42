// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.12.9                         -- www.JsonSchema42.org
//
import * as types from "./types.js";
export interface ParserGeneratorOptions {
trueStringValues?: string[];
falseStringValues?: string[];
}
const defaultParserGeneratorOptions = {
trueStringValues: ["", "true", "yes", "on", "1"],
falseStringValues: ["false", "no", "off", "0"],
}
/**
* @description The description of OpenAPI v3.1.x documents without schema validation, as defined by https://spec.openapis.org/oas/v3.1.0
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07}
*/
export function parseSchemaDocument(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info}
*/
export function parseInfo(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "title":
return [
name,
parseTitle(value, configuration),
]
case "summary":
return [
name,
parseInfoSummary(value, configuration),
]
case "description":
return [
name,
parseInfoDescription(value, configuration),
]
case "termsOfService":
return [
name,
parseTermsOfService(value, configuration),
]
case "contact":
return [
name,
parseInfoContact(value, configuration),
]
case "license":
return [
name,
parseInfoLicense(value, configuration),
]
case "version":
return [
name,
parseVersion(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact}
*/
export function parseContact(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "name":
return [
name,
parseContactName(value, configuration),
]
case "url":
return [
name,
parseContactUrl(value, configuration),
]
case "email":
return [
name,
parseEmail(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license}
*/
export function parseLicense(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "name":
return [
name,
parseLicenseName(value, configuration),
]
case "identifier":
return [
name,
parseIdentifier(value, configuration),
]
case "url":
return [
name,
parseLicenseUrl(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server}
*/
export function parseServer(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "url":
return [
name,
parseServerUrl(value, configuration),
]
case "description":
return [
name,
parseServerDescription(value, configuration),
]
case "variables":
return [
name,
parseVariables(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable}
*/
export function parseServerVariable(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "enum":
return [
name,
parseEnum(value, configuration),
]
case "default":
return [
name,
parseServerVariableDefault(value, configuration),
]
case "description":
return [
name,
parseServerVariableDescription(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components}
*/
export function parseComponents(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "schemas":
return [
name,
parseSchemas(value, configuration),
]
case "responses":
return [
name,
parseComponentsResponses(value, configuration),
]
case "parameters":
return [
name,
parseComponentsParameters(value, configuration),
]
case "examples":
return [
name,
parseComponentsExamples(value, configuration),
]
case "requestBodies":
return [
name,
parseRequestBodies(value, configuration),
]
case "headers":
return [
name,
parseComponentsHeaders(value, configuration),
]
case "securitySchemes":
return [
name,
parseSecuritySchemes(value, configuration),
]
case "links":
return [
name,
parseComponentsLinks(value, configuration),
]
case "callbacks":
return [
name,
parseComponentsCallbacks(value, configuration),
]
case "pathItems":
return [
name,
parsePathItems(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/paths}
*/
export function parsePaths(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item}
*/
export function parsePathItem(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "summary":
return [
name,
parsePathItemSummary(value, configuration),
]
case "description":
return [
name,
parsePathItemDescription(value, configuration),
]
case "servers":
return [
name,
parsePathItemServers(value, configuration),
]
case "parameters":
return [
name,
parsePathItemParameters(value, configuration),
]
case "get":
return [
name,
parseGet(value, configuration),
]
case "put":
return [
name,
parsePut(value, configuration),
]
case "post":
return [
name,
parsePost(value, configuration),
]
case "delete":
return [
name,
parseDelete(value, configuration),
]
case "options":
return [
name,
parseOptions(value, configuration),
]
case "head":
return [
name,
parseHead(value, configuration),
]
case "patch":
return [
name,
parsePatch(value, configuration),
]
case "trace":
return [
name,
parseTrace(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference}
*/
export function parsePathItemOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "summary":
return [
name,
parsePathItemSummary(value, configuration),
]
case "description":
return [
name,
parsePathItemDescription(value, configuration),
]
case "servers":
return [
name,
parsePathItemServers(value, configuration),
]
case "parameters":
return [
name,
parsePathItemParameters(value, configuration),
]
case "get":
return [
name,
parseGet(value, configuration),
]
case "put":
return [
name,
parsePut(value, configuration),
]
case "post":
return [
name,
parsePost(value, configuration),
]
case "delete":
return [
name,
parseDelete(value, configuration),
]
case "options":
return [
name,
parseOptions(value, configuration),
]
case "head":
return [
name,
parseHead(value, configuration),
]
case "patch":
return [
name,
parsePatch(value, configuration),
]
case "trace":
return [
name,
parseTrace(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation}
*/
export function parseOperation(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "tags":
return [
name,
parseOperationTags(value, configuration),
]
case "summary":
return [
name,
parseOperationSummary(value, configuration),
]
case "description":
return [
name,
parseOperationDescription(value, configuration),
]
case "externalDocs":
return [
name,
parseOperationExternalDocs(value, configuration),
]
case "operationId":
return [
name,
parseOperationOperationId(value, configuration),
]
case "parameters":
return [
name,
parseOperationParameters(value, configuration),
]
case "requestBody":
return [
name,
parseOperationRequestBody(value, configuration),
]
case "responses":
return [
name,
parseOperationResponses(value, configuration),
]
case "callbacks":
return [
name,
parseOperationCallbacks(value, configuration),
]
case "deprecated":
return [
name,
parseOperationDeprecated(value, configuration),
]
case "security":
return [
name,
parseOperationSecurity(value, configuration),
]
case "servers":
return [
name,
parseOperationServers(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation}
*/
export function parseExternalDocumentation(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseExternalDocumentationDescription(value, configuration),
]
case "url":
return [
name,
parseExternalDocumentationUrl(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter}
*/
export function parseParameter(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "in":
return [
name,
(value),
]
case "allowEmptyValue":
return [
name,
parseAllowEmptyValue(value, configuration),
]
case "name":
return [
name,
parseParameterName(value, configuration),
]
case "description":
return [
name,
parseParameterDescription(value, configuration),
]
case "required":
return [
name,
parseParameterRequired(value, configuration),
]
case "deprecated":
return [
name,
parseParameterDeprecated(value, configuration),
]
case "schema":
return [
name,
parseParameterSchema(value, configuration),
]
case "content":
return [
name,
parseParameterContent(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "in":
return [
name,
(value),
]
case "allowEmptyValue":
return [
name,
parseAllowEmptyValue(value, configuration),
]
case "name":
return [
name,
parseParameterName(value, configuration),
]
case "description":
return [
name,
parseParameterDescription(value, configuration),
]
case "required":
return [
name,
parseParameterRequired(value, configuration),
]
case "deprecated":
return [
name,
parseParameterDeprecated(value, configuration),
]
case "schema":
return [
name,
parseParameterSchema(value, configuration),
]
case "content":
return [
name,
parseParameterContent(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference}
*/
export function parseParameterOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "in":
return [
name,
(value),
]
case "allowEmptyValue":
return [
name,
parseAllowEmptyValue(value, configuration),
]
case "name":
return [
name,
parseParameterName(value, configuration),
]
case "description":
return [
name,
parseParameterDescription(value, configuration),
]
case "required":
return [
name,
parseParameterRequired(value, configuration),
]
case "deprecated":
return [
name,
parseParameterDeprecated(value, configuration),
]
case "schema":
return [
name,
parseParameterSchema(value, configuration),
]
case "content":
return [
name,
parseParameterContent(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "in":
return [
name,
(value),
]
case "allowEmptyValue":
return [
name,
parseAllowEmptyValue(value, configuration),
]
case "name":
return [
name,
parseParameterName(value, configuration),
]
case "description":
return [
name,
parseParameterDescription(value, configuration),
]
case "required":
return [
name,
parseParameterRequired(value, configuration),
]
case "deprecated":
return [
name,
parseParameterDeprecated(value, configuration),
]
case "schema":
return [
name,
parseParameterSchema(value, configuration),
]
case "content":
return [
name,
parseParameterContent(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body}
*/
export function parseRequestBody(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseRequestBodyDescription(value, configuration),
]
case "content":
return [
name,
parseRequestBodyContent(value, configuration),
]
case "required":
return [
name,
parseRequestBodyRequired(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference}
*/
export function parseRequestBodyOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseRequestBodyDescription(value, configuration),
]
case "content":
return [
name,
parseRequestBodyContent(value, configuration),
]
case "required":
return [
name,
parseRequestBodyRequired(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/content}
*/
export function parseContent(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseContentAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type}
*/
export function parseMediaType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "example":
return [
name,
parseExamplesExample(value, configuration),
]
case "examples":
return [
name,
parseExamplesExamples(value, configuration),
]
case "schema":
return [
name,
parseMediaTypeSchema(value, configuration),
]
case "encoding":
return [
name,
parseMediaTypeEncoding(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding}
*/
export function parseEncoding(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "contentType":
return [
name,
parseContentType(value, configuration),
]
case "headers":
return [
name,
parseEncodingHeaders(value, configuration),
]
case "style":
return [
name,
(value),
]
case "explode":
return [
name,
(
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
),
]
case "allowReserved":
return [
name,
parseAllowReserved(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "contentType":
return [
name,
parseContentType(value, configuration),
]
case "headers":
return [
name,
parseEncodingHeaders(value, configuration),
]
case "style":
return [
name,
parseEncodingStyle(value, configuration),
]
case "explode":
return [
name,
(
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
),
]
case "allowReserved":
return [
name,
parseAllowReserved(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/responses}
*/
export function parseResponses(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "default":
return [
name,
parseResponsesDefault(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response}
*/
export function parseResponse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseResponseDescription(value, configuration),
]
case "headers":
return [
name,
parseResponseHeaders(value, configuration),
]
case "content":
return [
name,
parseResponseContent(value, configuration),
]
case "links":
return [
name,
parseResponseLinks(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference}
*/
export function parseResponseOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseResponseDescription(value, configuration),
]
case "headers":
return [
name,
parseResponseHeaders(value, configuration),
]
case "content":
return [
name,
parseResponseContent(value, configuration),
]
case "links":
return [
name,
parseResponseLinks(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks}
*/
export function parseCallbacks(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseCallbacksAdditionalProperties(value, configuration) ??
parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference}
*/
export function parseCallbacksOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseCallbacksAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example}
*/
export function parseExample(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "summary":
return [
name,
parseExampleSummary(value, configuration),
]
case "description":
return [
name,
parseExampleDescription(value, configuration),
]
case "value":
return [
name,
parseValue(value, configuration),
]
case "externalValue":
return [
name,
parseExternalValue(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference}
*/
export function parseExampleOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "summary":
return [
name,
parseExampleSummary(value, configuration),
]
case "description":
return [
name,
parseExampleDescription(value, configuration),
]
case "value":
return [
name,
parseValue(value, configuration),
]
case "externalValue":
return [
name,
parseExternalValue(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link}
*/
export function parseLink(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "operationRef":
return [
name,
parseOperationRef(value, configuration),
]
case "operationId":
return [
name,
parseLinkOperationId(value, configuration),
]
case "parameters":
return [
name,
parseLinkParameters(value, configuration),
]
case "requestBody":
return [
name,
parseLinkRequestBody(value, configuration),
]
case "description":
return [
name,
parseLinkDescription(value, configuration),
]
case "body":
return [
name,
parseBody(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "operationRef":
return [
name,
parseOperationRef(value, configuration),
]
case "operationId":
return [
name,
parseLinkOperationId(value, configuration),
]
case "parameters":
return [
name,
parseLinkParameters(value, configuration),
]
case "requestBody":
return [
name,
parseLinkRequestBody(value, configuration),
]
case "description":
return [
name,
parseLinkDescription(value, configuration),
]
case "body":
return [
name,
parseBody(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference}
*/
export function parseLinkOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "operationRef":
return [
name,
parseOperationRef(value, configuration),
]
case "operationId":
return [
name,
parseLinkOperationId(value, configuration),
]
case "parameters":
return [
name,
parseLinkParameters(value, configuration),
]
case "requestBody":
return [
name,
parseLinkRequestBody(value, configuration),
]
case "description":
return [
name,
parseLinkDescription(value, configuration),
]
case "body":
return [
name,
parseBody(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "operationRef":
return [
name,
parseOperationRef(value, configuration),
]
case "operationId":
return [
name,
parseLinkOperationId(value, configuration),
]
case "parameters":
return [
name,
parseLinkParameters(value, configuration),
]
case "requestBody":
return [
name,
parseLinkRequestBody(value, configuration),
]
case "description":
return [
name,
parseLinkDescription(value, configuration),
]
case "body":
return [
name,
parseBody(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header}
*/
export function parseHeader(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseHeaderDescription(value, configuration),
]
case "required":
return [
name,
parseHeaderRequired(value, configuration),
]
case "deprecated":
return [
name,
parseHeaderDeprecated(value, configuration),
]
case "schema":
return [
name,
parseHeaderSchema(value, configuration),
]
case "content":
return [
name,
parseHeaderContent(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseHeaderDescription(value, configuration),
]
case "required":
return [
name,
parseHeaderRequired(value, configuration),
]
case "deprecated":
return [
name,
parseHeaderDeprecated(value, configuration),
]
case "schema":
return [
name,
parseHeaderSchema(value, configuration),
]
case "content":
return [
name,
parseHeaderContent(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference}
*/
export function parseHeaderOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseHeaderDescription(value, configuration),
]
case "required":
return [
name,
parseHeaderRequired(value, configuration),
]
case "deprecated":
return [
name,
parseHeaderDeprecated(value, configuration),
]
case "schema":
return [
name,
parseHeaderSchema(value, configuration),
]
case "content":
return [
name,
parseHeaderContent(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "description":
return [
name,
parseHeaderDescription(value, configuration),
]
case "required":
return [
name,
parseHeaderRequired(value, configuration),
]
case "deprecated":
return [
name,
parseHeaderDeprecated(value, configuration),
]
case "schema":
return [
name,
parseHeaderSchema(value, configuration),
]
case "content":
return [
name,
parseHeaderContent(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag}
*/
export function parseTag(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "name":
return [
name,
parseTagName(value, configuration),
]
case "description":
return [
name,
parseTagDescription(value, configuration),
]
case "externalDocs":
return [
name,
parseTagExternalDocs(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference}
*/
export function parseReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/schema}
*/
export function parseSchema(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
)
??
(
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme}
*/
export function parseSecurityScheme(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "type":
return [
name,
(value),
]
case "name":
return [
name,
parseTypeApikeyName(value, configuration),
]
case "in":
return [
name,
parseTypeApikeyIn(value, configuration),
]
case "scheme":
return [
name,
(
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
),
]
case "bearerFormat":
return [
name,
parseBearerFormat(value, configuration),
]
case "flows":
return [
name,
parseFlows(value, configuration),
]
case "openIdConnectUrl":
return [
name,
parseOpenIdConnectUrl(value, configuration),
]
case "description":
return [
name,
parseSecuritySchemeDescription(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference}
*/
export function parseSecuritySchemeOrReference(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "$ref":
return [
name,
parseRef(value, configuration),
]
case "summary":
return [
name,
parseReferenceSummary(value, configuration),
]
case "description":
return [
name,
parseReferenceDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
??
(
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "type":
return [
name,
(value),
]
case "name":
return [
name,
parseTypeApikeyName(value, configuration),
]
case "in":
return [
name,
parseTypeApikeyIn(value, configuration),
]
case "scheme":
return [
name,
(
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
),
]
case "bearerFormat":
return [
name,
parseBearerFormat(value, configuration),
]
case "flows":
return [
name,
parseFlows(value, configuration),
]
case "openIdConnectUrl":
return [
name,
parseOpenIdConnectUrl(value, configuration),
]
case "description":
return [
name,
parseSecuritySchemeDescription(value, configuration),
]
default:
return value;
}
})
) :
undefined
)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows}
*/
export function parseOauthFlows(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "implicit":
return [
name,
parsePropertiesOauthFlowsImplicit(value, configuration),
]
case "password":
return [
name,
parsePropertiesOauthFlowsPassword(value, configuration),
]
case "clientCredentials":
return [
name,
parsePropertiesOauthFlowsClientCredentials(value, configuration),
]
case "authorizationCode":
return [
name,
parsePropertiesOauthFlowsAuthorizationCode(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement}
*/
export function parseSecurityRequirement(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseSecurityRequirementAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/specification-extensions}
*/
export function parseSpecificationExtensions(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples}
*/
export function parseExamples(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/map-of-strings}
*/
export function parseMapOfStrings(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseMapOfStringsAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/openapi}
*/
export function parseOpenapi(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/info}
*/
export function parsePropertiesInfo(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseInfo(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/jsonSchemaDialect}
*/
export function parseJsonSchemaDialect(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/servers}
*/
export function parsePropertiesServers(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parsePropertiesServersItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/paths}
*/
export function parsePropertiesPaths(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parsePaths(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/webhooks}
*/
export function parseWebhooks(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseWebhooksAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/components}
*/
export function parsePropertiesComponents(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseComponents(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/security}
*/
export function parsePropertiesSecurity(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parsePropertiesSecurityItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/tags}
*/
export function parsePropertiesTags(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parsePropertiesTagsItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/externalDocs}
*/
export function parsePropertiesExternalDocs(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExternalDocumentation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/anyOf/0}
*/
export function parseAnyOf0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/anyOf/1}
*/
export function parseAnyOf1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/anyOf/2}
*/
export function parseAnyOf2(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/title}
*/
export function parseTitle(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/summary}
*/
export function parseInfoSummary(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/description}
*/
export function parseInfoDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/termsOfService}
*/
export function parseTermsOfService(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/contact}
*/
export function parseInfoContact(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseContact(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/license}
*/
export function parseInfoLicense(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseLicense(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/version}
*/
export function parseVersion(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/name}
*/
export function parseContactName(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/url}
*/
export function parseContactUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/email}
*/
export function parseEmail(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/name}
*/
export function parseLicenseName(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/identifier}
*/
export function parseIdentifier(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/url}
*/
export function parseLicenseUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/url}
*/
export function parseServerUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/description}
*/
export function parseServerDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/variables}
*/
export function parseVariables(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseVariablesAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/enum}
*/
export function parseEnum(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parseEnumItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/default}
*/
export function parseServerVariableDefault(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/description}
*/
export function parseServerVariableDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/schemas}
*/
export function parseSchemas(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseSchemasAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/responses}
*/
export function parseComponentsResponses(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseResponsesAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/parameters}
*/
export function parseComponentsParameters(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseParametersAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/examples}
*/
export function parseComponentsExamples(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseComponentsExamplesAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/requestBodies}
*/
export function parseRequestBodies(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseRequestBodiesAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/headers}
*/
export function parseComponentsHeaders(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseComponentsHeadersAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/securitySchemes}
*/
export function parseSecuritySchemes(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseSecuritySchemesAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/links}
*/
export function parseComponentsLinks(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseComponentsLinksAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/callbacks}
*/
export function parseComponentsCallbacks(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseComponentsCallbacksAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/pathItems}
*/
export function parsePathItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parsePathItemsAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/patternProperties/^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$}
*/
export function parseSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/paths/patternProperties/^/}
*/
export function parsePatternProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parsePathItem(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/summary}
*/
export function parsePathItemSummary(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/description}
*/
export function parsePathItemDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/servers}
*/
export function parsePathItemServers(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parsePathItemServersItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/parameters}
*/
export function parsePathItemParameters(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parsePathItemParametersItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/get}
*/
export function parseGet(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/put}
*/
export function parsePut(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/post}
*/
export function parsePost(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/delete}
*/
export function parseDelete(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/options}
*/
export function parseOptions(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/head}
*/
export function parseHead(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/patch}
*/
export function parsePatch(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/trace}
*/
export function parseTrace(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOperation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference/if}
*/
export function parsePathItemOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference/then}
*/
export function parsePathItemOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference/else}
*/
export function parsePathItemOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parsePathItem(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/tags}
*/
export function parseOperationTags(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parseOperationTagsItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/summary}
*/
export function parseOperationSummary(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/description}
*/
export function parseOperationDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/externalDocs}
*/
export function parseOperationExternalDocs(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExternalDocumentation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/operationId}
*/
export function parseOperationOperationId(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/parameters}
*/
export function parseOperationParameters(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parseOperationParametersItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/requestBody}
*/
export function parseOperationRequestBody(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseRequestBodyOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/responses}
*/
export function parseOperationResponses(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseResponses(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/callbacks}
*/
export function parseOperationCallbacks(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseOperationCallbacksAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/deprecated}
*/
export function parseOperationDeprecated(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/security}
*/
export function parseOperationSecurity(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parseOperationSecurityItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/servers}
*/
export function parseOperationServers(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parseOperationServersItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation/properties/description}
*/
export function parseExternalDocumentationDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation/properties/url}
*/
export function parseExternalDocumentationUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/name}
*/
export function parseParameterName(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/in}
*/
export function parsePropertiesParameterIn(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/description}
*/
export function parseParameterDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/required}
*/
export function parseParameterRequired(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/deprecated}
*/
export function parseParameterDeprecated(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/schema}
*/
export function parseParameterSchema(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSchema(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/content}
*/
export function parseParameterContent(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseContentAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/oneOf/0}
*/
export function parseParameterOneOf0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/oneOf/1}
*/
export function parseParameterOneOf1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/if}
*/
export function parseParameterIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/then}
*/
export function parseParameterThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference/if}
*/
export function parseParameterOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference/then}
*/
export function parseParameterOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference/else}
*/
export function parseParameterOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseParameter(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/description}
*/
export function parseRequestBodyDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/content}
*/
export function parseRequestBodyContent(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseContent(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/required}
*/
export function parseRequestBodyRequired(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference/if}
*/
export function parseRequestBodyOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference/then}
*/
export function parseRequestBodyOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference/else}
*/
export function parseRequestBodyOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseRequestBody(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/content/additionalProperties}
*/
export function parseContentAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseMediaType(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/content/propertyNames}
*/
export function parseContentPropertyNames(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/schema}
*/
export function parseMediaTypeSchema(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSchema(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/encoding}
*/
export function parseMediaTypeEncoding(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseMediaTypeAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/allOf/0}
*/
export function parseMediaType0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSpecificationExtensions(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/allOf/1}
*/
export function parseMediaType1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExamples(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default}
*/
export function parseExplodeDefault(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(value)
??
(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/contentType}
*/
export function parseContentType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/headers}
*/
export function parseEncodingHeaders(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseEncodingHeadersAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/style}
*/
export function parseEncodingStyle(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/explode}
*/
export function parseEncodingExplode(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/allowReserved}
*/
export function parseAllowReserved(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/allOf/0}
*/
export function parseEncodingAllOf0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSpecificationExtensions(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/allOf/1}
*/
export function parseEncodingAllOf1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExplodeDefault(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/responses/properties/default}
*/
export function parseResponsesDefault(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseResponseOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/responses/patternProperties/^[1-5](?:[0-9]{2}|XX)$}
*/
export function parsePatternProperties15092Xx(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseResponseOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/description}
*/
export function parseResponseDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/headers}
*/
export function parseResponseHeaders(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseResponseHeadersAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/content}
*/
export function parseResponseContent(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseContent(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/links}
*/
export function parseResponseLinks(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseResponseLinksAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference/if}
*/
export function parseResponseOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference/then}
*/
export function parseResponseOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference/else}
*/
export function parseResponseOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseResponse(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks/additionalProperties}
*/
export function parseCallbacksAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parsePathItemOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference/if}
*/
export function parseCallbacksOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference/then}
*/
export function parseCallbacksOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference/else}
*/
export function parseCallbacksOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseCallbacks(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/summary}
*/
export function parseExampleSummary(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/description}
*/
export function parseExampleDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/value}
*/
export function parseValue(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/externalValue}
*/
export function parseExternalValue(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/not}
*/
export function parseNot(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference/if}
*/
export function parseExampleOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference/then}
*/
export function parseExampleOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference/else}
*/
export function parseExampleOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExample(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/operationRef}
*/
export function parseOperationRef(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/operationId}
*/
export function parseLinkOperationId(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/parameters}
*/
export function parseLinkParameters(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseMapOfStrings(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/requestBody}
*/
export function parseLinkRequestBody(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/description}
*/
export function parseLinkDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/body}
*/
export function parseBody(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseServer(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/oneOf/0}
*/
export function parseLinkOneOf0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/oneOf/1}
*/
export function parseLinkOneOf1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference/if}
*/
export function parseLinkOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference/then}
*/
export function parseLinkOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference/else}
*/
export function parseLinkOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseLink(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/description}
*/
export function parseHeaderDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/required}
*/
export function parseHeaderRequired(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/deprecated}
*/
export function parseHeaderDeprecated(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/schema}
*/
export function parseHeaderSchema(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSchema(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/content}
*/
export function parseHeaderContent(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseContentAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/oneOf/0}
*/
export function parseHeaderOneOf0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/oneOf/1}
*/
export function parseHeaderOneOf1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference/if}
*/
export function parseHeaderOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference/then}
*/
export function parseHeaderOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference/else}
*/
export function parseHeaderOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseHeader(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/name}
*/
export function parseTagName(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/description}
*/
export function parseTagDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/externalDocs}
*/
export function parseTagExternalDocs(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExternalDocumentation(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/$ref}
*/
export function parseRef(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/summary}
*/
export function parseReferenceSummary(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/description}
*/
export function parseReferenceDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey}
*/
export function parseTypeApikey(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return ((value));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http}
*/
export function parseTypeHttp(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return ((value));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer}
*/
export function parseTypeHttpBearer(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return ((value));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2}
*/
export function parseTypeOauth2(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return ((value));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc}
*/
export function parseTypeOidc(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return ((value));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/properties/type}
*/
export function parseSecuritySchemeType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/properties/description}
*/
export function parseSecuritySchemeDescription(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/0}
*/
export function parseSecuritySchemeAllOf0(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSpecificationExtensions(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/1}
*/
export function parseSecuritySchemeAllOf1(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseTypeApikey(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/2}
*/
export function parseAllOf2(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseTypeHttp(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/3}
*/
export function parseAllOf3(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseTypeHttpBearer(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/4}
*/
export function parseAllOf4(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseTypeOauth2(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/5}
*/
export function parseAllOf5(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseTypeOidc(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference/if}
*/
export function parseSecuritySchemeOrReferenceIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return value;
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference/then}
*/
export function parseSecuritySchemeOrReferenceThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference/else}
*/
export function parseSecuritySchemeOrReferenceElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSecurityScheme(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit}
*/
export function parseDefsOauthFlowsImplicit(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "authorizationUrl":
return [
name,
parseImplicitAuthorizationUrl(value, configuration),
]
case "refreshUrl":
return [
name,
parseImplicitRefreshUrl(value, configuration),
]
case "scopes":
return [
name,
parseImplicitScopes(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password}
*/
export function parseDefsOauthFlowsPassword(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "tokenUrl":
return [
name,
parsePasswordTokenUrl(value, configuration),
]
case "refreshUrl":
return [
name,
parsePasswordRefreshUrl(value, configuration),
]
case "scopes":
return [
name,
parsePasswordScopes(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials}
*/
export function parseDefsOauthFlowsClientCredentials(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "tokenUrl":
return [
name,
parseClientCredentialsTokenUrl(value, configuration),
]
case "refreshUrl":
return [
name,
parseClientCredentialsRefreshUrl(value, configuration),
]
case "scopes":
return [
name,
parseClientCredentialsScopes(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code}
*/
export function parseDefsOauthFlowsAuthorizationCode(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
case "authorizationUrl":
return [
name,
parseAuthorizationCodeAuthorizationUrl(value, configuration),
]
case "tokenUrl":
return [
name,
parseAuthorizationCodeTokenUrl(value, configuration),
]
case "refreshUrl":
return [
name,
parseAuthorizationCodeRefreshUrl(value, configuration),
]
case "scopes":
return [
name,
parseAuthorizationCodeScopes(value, configuration),
]
default:
return [
name,
(parseX(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/implicit}
*/
export function parsePropertiesOauthFlowsImplicit(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseDefsOauthFlowsImplicit(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/password}
*/
export function parsePropertiesOauthFlowsPassword(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseDefsOauthFlowsPassword(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/clientCredentials}
*/
export function parsePropertiesOauthFlowsClientCredentials(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseDefsOauthFlowsClientCredentials(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/authorizationCode}
*/
export function parsePropertiesOauthFlowsAuthorizationCode(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseDefsOauthFlowsAuthorizationCode(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement/additionalProperties}
*/
export function parseSecurityRequirementAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
Array.isArray(value) ?
value.map((value, index) => {
switch(index) {
default:
return parseSecurityRequirementItems(value, configuration)
}
}) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/specification-extensions/patternProperties/^x-}
*/
export function parseX(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples/properties/example}
*/
export function parseExamplesExample(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples/properties/examples}
*/
export function parseExamplesExamples(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
(typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => {
switch(name) {
default:
return [
name,
(parseExamplesExamplesAdditionalProperties(value, configuration)),
]
}
})
) :
undefined
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/map-of-strings/additionalProperties}
*/
export function parseMapOfStringsAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/servers/items}
*/
export function parsePropertiesServersItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseServer(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/webhooks/additionalProperties}
*/
export function parseWebhooksAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parsePathItemOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/security/items}
*/
export function parsePropertiesSecurityItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSecurityRequirement(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/tags/items}
*/
export function parsePropertiesTagsItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseTag(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/variables/additionalProperties}
*/
export function parseVariablesAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseServerVariable(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/enum/items}
*/
export function parseEnumItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/schemas/additionalProperties}
*/
export function parseSchemasAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSchema(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/responses/additionalProperties}
*/
export function parseResponsesAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseResponseOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/parameters/additionalProperties}
*/
export function parseParametersAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseParameterOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/examples/additionalProperties}
*/
export function parseComponentsExamplesAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExampleOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/requestBodies/additionalProperties}
*/
export function parseRequestBodiesAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseRequestBodyOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/headers/additionalProperties}
*/
export function parseComponentsHeadersAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseHeaderOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/securitySchemes/additionalProperties}
*/
export function parseSecuritySchemesAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSecuritySchemeOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/links/additionalProperties}
*/
export function parseComponentsLinksAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseLinkOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/callbacks/additionalProperties}
*/
export function parseComponentsCallbacksAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseCallbacksOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/pathItems/additionalProperties}
*/
export function parsePathItemsAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parsePathItemOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/patternProperties/^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$/propertyNames}
*/
export function parseSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItemsPropertyNames(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/servers/items}
*/
export function parsePathItemServersItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseServer(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/parameters/items}
*/
export function parsePathItemParametersItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseParameterOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/tags/items}
*/
export function parseOperationTagsItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/parameters/items}
*/
export function parseOperationParametersItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseParameterOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/callbacks/additionalProperties}
*/
export function parseOperationCallbacksAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseCallbacksOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/security/items}
*/
export function parseOperationSecurityItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseSecurityRequirement(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/servers/items}
*/
export function parseOperationServersItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseServer(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/if/properties/in}
*/
export function parseIfParameterIn(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/then/properties/allowEmptyValue}
*/
export function parseAllowEmptyValue(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(value == null) {
return false;
}
if(Array.isArray(value)) {
switch(value.length) {
case 0:
return false;
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
value = value.trim();
for(const trueStringValue of configuration.trueStringValues) {
if(value === trueStringValue) {
return true;
}
}
for(const falseStringValue of configuration.falseStringValues) {
if(value === falseStringValue) {
return false;
}
}
return undefined;
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/encoding/additionalProperties}
*/
export function parseMediaTypeAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseEncoding(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/if}
*/
export function parseExplodeDefaultIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/then}
*/
export function parseExplodeDefaultThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/else}
*/
export function parseExplodeDefaultElse(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/headers/additionalProperties}
*/
export function parseEncodingHeadersAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseHeaderOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/headers/additionalProperties}
*/
export function parseResponseHeadersAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseHeaderOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/links/additionalProperties}
*/
export function parseResponseLinksAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseLinkOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/if}
*/
export function parseTypeApikeyIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then}
*/
export function parseTypeApikeyThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/if}
*/
export function parseTypeHttpIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/then}
*/
export function parseTypeHttpThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/if}
*/
export function parseTypeHttpBearerIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/then}
*/
export function parseTypeHttpBearerThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/if}
*/
export function parseTypeOauth2If(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/then}
*/
export function parseTypeOauth2Then(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/if}
*/
export function parseTypeOidcIf(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/then}
*/
export function parseTypeOidcThen(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/authorizationUrl}
*/
export function parseImplicitAuthorizationUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/refreshUrl}
*/
export function parseImplicitRefreshUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/scopes}
*/
export function parseImplicitScopes(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseMapOfStrings(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/tokenUrl}
*/
export function parsePasswordTokenUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/refreshUrl}
*/
export function parsePasswordRefreshUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/scopes}
*/
export function parsePasswordScopes(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseMapOfStrings(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/tokenUrl}
*/
export function parseClientCredentialsTokenUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/refreshUrl}
*/
export function parseClientCredentialsRefreshUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/scopes}
*/
export function parseClientCredentialsScopes(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseMapOfStrings(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/authorizationUrl}
*/
export function parseAuthorizationCodeAuthorizationUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/tokenUrl}
*/
export function parseAuthorizationCodeTokenUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/refreshUrl}
*/
export function parseAuthorizationCodeRefreshUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/scopes}
*/
export function parseAuthorizationCodeScopes(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseMapOfStrings(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement/additionalProperties/items}
*/
export function parseSecurityRequirementItems(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples/properties/examples/additionalProperties}
*/
export function parseExamplesExamplesAdditionalProperties(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseExampleOrReference(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/if/properties/style}
*/
export function parseExplodeDefaultStyle(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/then/properties/explode}
*/
export function parseEncodingExplodeDefaultExplode(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/else/properties/explode}
*/
export function parseElseExplodeDefaultExplode(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/if/properties/type}
*/
export function parseTypeApikeyType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then/properties/name}
*/
export function parseTypeApikeyName(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then/properties/in}
*/
export function parseTypeApikeyIn(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/if/properties/type}
*/
export function parseTypeHttpType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/then/properties/scheme}
*/
export function parseTypeHttpScheme(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/if/properties/type}
*/
export function parseTypeHttpBearerType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/if/properties/scheme}
*/
export function parseTypeHttpBearerScheme(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/then/properties/bearerFormat}
*/
export function parseBearerFormat(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/if/properties/type}
*/
export function parseTypeOauth2Type(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/then/properties/flows}
*/
export function parseFlows(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (parseOauthFlows(value, configuration));
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/if/properties/type}
*/
export function parseTypeOidcType(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (value);
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/then/properties/openIdConnectUrl}
*/
export function parseOpenIdConnectUrl(value: unknown, options: ParserGeneratorOptions = {}): unknown {
const configuration = {
...defaultParserGeneratorOptions,
...options,
};
return (
((value: unknown) => {
if(Array.isArray(value)) {
switch(value.length) {
case 1:
[value] = value
break;
default:
return undefined;
}
}
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(value)
);
}
