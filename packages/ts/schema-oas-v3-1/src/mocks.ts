// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.12.10                        -- www.JsonSchema42.org
//
import * as types from "./types.js";
const depthCounters: Record<string, number> = {};
export const unknownValue: any = {};
export const anyValue: any = {};
export const neverValue: any = {};
export interface MockGeneratorOptions {
maximumDepth?: number;
numberPrecision?: number;
stringCharacters?: string;
defaultMinimumValue?: number;
defaultMaximumValue?: number;
defaultMinimumItems?: number;
defaultMaximumItems?: number;
defaultMinimumProperties?: number;
defaultMaximumProperties?: number;
defaultMinimumStringLength?: number;
defaultMaximumStringLength?: number;
}
const defaultMockGeneratorOptions = {
maximumDepth: 1,
numberPrecision: 1000,
stringCharacters: "abcdefghijklmnopqrstuvwxyz",
defaultMinimumValue: -1000,
defaultMaximumValue: 1000,
defaultMinimumItems: 1,
defaultMaximumItems: 5,
defaultMinimumProperties: 1,
defaultMaximumProperties: 5,
defaultMinimumStringLength: 5,
defaultMaximumStringLength: 20,
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/schema}
*/
export function mockSchema(options: MockGeneratorOptions = {}): types.Schema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[32] ??= 0;
try {
depthCounters[32]++;
return (
(() => {
switch (
(
nextSeed() % 2
) as 0 | 1
) {
case 0:
return ((
{
}
));
case 1:
return ((Boolean(nextSeed() % 2)));
}
})()
);
}
finally {
depthCounters[32]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement}
*/
export function mockSecurityRequirement(options: MockGeneratorOptions = {}): types.SecurityRequirement {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[36] ??= 0;
try {
depthCounters[36]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockSecurityRequirementAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[36]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/map-of-strings}
*/
export function mockMapOfStrings(options: MockGeneratorOptions = {}): types.MapOfStrings {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[39] ??= 0;
try {
depthCounters[39]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockMapOfStringsAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[39]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/security}
*/
export function mockPropertiesSecurity(options: MockGeneratorOptions = {}): types.PropertiesSecurity {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[47] ??= 0;
try {
depthCounters[47]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockPropertiesSecurityItems())
]
);
}
finally {
depthCounters[47]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/title}
*/
export function mockTitle(options: MockGeneratorOptions = {}): types.Title {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[53] ??= 0;
try {
depthCounters[53]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[53]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/summary}
*/
export function mockInfoSummary(options: MockGeneratorOptions = {}): types.InfoSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[54] ??= 0;
try {
depthCounters[54]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[54]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/description}
*/
export function mockInfoDescription(options: MockGeneratorOptions = {}): types.InfoDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[55] ??= 0;
try {
depthCounters[55]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[55]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/version}
*/
export function mockVersion(options: MockGeneratorOptions = {}): types.Version {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[59] ??= 0;
try {
depthCounters[59]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[59]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/name}
*/
export function mockContactName(options: MockGeneratorOptions = {}): types.ContactName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[60] ??= 0;
try {
depthCounters[60]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[60]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/name}
*/
export function mockLicenseName(options: MockGeneratorOptions = {}): types.LicenseName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[63] ??= 0;
try {
depthCounters[63]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[63]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/identifier}
*/
export function mockIdentifier(options: MockGeneratorOptions = {}): types.Identifier {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[64] ??= 0;
try {
depthCounters[64]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[64]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/description}
*/
export function mockServerDescription(options: MockGeneratorOptions = {}): types.ServerDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[67] ??= 0;
try {
depthCounters[67]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[67]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/enum}
*/
export function mockEnum(options: MockGeneratorOptions = {}): types.Enum {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[69] ??= 0;
try {
depthCounters[69]++;
return (
[
...new Array(
Math.max(0, 1 - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, 1 - 0) +
1
)
)
.fill(undefined)
.map(() => mockEnumItems())
]
);
}
finally {
depthCounters[69]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/default}
*/
export function mockServerVariableDefault(options: MockGeneratorOptions = {}): types.ServerVariableDefault {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[70] ??= 0;
try {
depthCounters[70]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[70]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/description}
*/
export function mockServerVariableDescription(options: MockGeneratorOptions = {}): types.ServerVariableDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[71] ??= 0;
try {
depthCounters[71]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[71]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/schemas}
*/
export function mockSchemas(options: MockGeneratorOptions = {}): types.Schemas {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[72] ??= 0;
try {
depthCounters[72]++;
return (
{
...Object.fromEntries(
new Array(
Math.max(0, configuration.defaultMinimumProperties - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumProperties - 0) -
Math.max(0, configuration.defaultMinimumProperties - 0) +
1
)
)
.fill(undefined)
.map(() => [
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
,
(() => {
switch (
(
nextSeed() % 1
) as 0
) {
case 0:
return (mockSchemasAdditionalProperties());
}
})(),
]
)
)
}
);
}
finally {
depthCounters[72]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/summary}
*/
export function mockPathItemSummary(options: MockGeneratorOptions = {}): types.PathItemSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[84] ??= 0;
try {
depthCounters[84]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[84]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/description}
*/
export function mockPathItemDescription(options: MockGeneratorOptions = {}): types.PathItemDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[85] ??= 0;
try {
depthCounters[85]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[85]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/tags}
*/
export function mockOperationTags(options: MockGeneratorOptions = {}): types.OperationTags {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[99] ??= 0;
try {
depthCounters[99]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockOperationTagsItems())
]
);
}
finally {
depthCounters[99]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/summary}
*/
export function mockOperationSummary(options: MockGeneratorOptions = {}): types.OperationSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[100] ??= 0;
try {
depthCounters[100]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[100]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/description}
*/
export function mockOperationDescription(options: MockGeneratorOptions = {}): types.OperationDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[101] ??= 0;
try {
depthCounters[101]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[101]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/operationId}
*/
export function mockOperationOperationId(options: MockGeneratorOptions = {}): types.OperationOperationId {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[103] ??= 0;
try {
depthCounters[103]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[103]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/deprecated}
*/
export function mockOperationDeprecated(options: MockGeneratorOptions = {}): types.OperationDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[108] ??= 0;
try {
depthCounters[108]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[108]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/security}
*/
export function mockOperationSecurity(options: MockGeneratorOptions = {}): types.OperationSecurity {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[109] ??= 0;
try {
depthCounters[109]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockOperationSecurityItems())
]
);
}
finally {
depthCounters[109]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation/properties/description}
*/
export function mockExternalDocumentationDescription(options: MockGeneratorOptions = {}): types.ExternalDocumentationDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[111] ??= 0;
try {
depthCounters[111]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[111]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/name}
*/
export function mockParameterName(options: MockGeneratorOptions = {}): types.ParameterName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[113] ??= 0;
try {
depthCounters[113]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[113]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/description}
*/
export function mockParameterDescription(options: MockGeneratorOptions = {}): types.ParameterDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[115] ??= 0;
try {
depthCounters[115]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[115]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/required}
*/
export function mockParameterRequired(options: MockGeneratorOptions = {}): types.ParameterRequired {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[116] ??= 0;
try {
depthCounters[116]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[116]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/deprecated}
*/
export function mockParameterDeprecated(options: MockGeneratorOptions = {}): types.ParameterDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[117] ??= 0;
try {
depthCounters[117]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[117]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/schema}
*/
export function mockParameterSchema(options: MockGeneratorOptions = {}): types.ParameterSchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[118] ??= 0;
try {
depthCounters[118]++;
return (mockSchema());
}
finally {
depthCounters[118]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/description}
*/
export function mockRequestBodyDescription(options: MockGeneratorOptions = {}): types.RequestBodyDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[127] ??= 0;
try {
depthCounters[127]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[127]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/required}
*/
export function mockRequestBodyRequired(options: MockGeneratorOptions = {}): types.RequestBodyRequired {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[129] ??= 0;
try {
depthCounters[129]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[129]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/schema}
*/
export function mockMediaTypeSchema(options: MockGeneratorOptions = {}): types.MediaTypeSchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[135] ??= 0;
try {
depthCounters[135]++;
return (mockSchema());
}
finally {
depthCounters[135]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/explode}
*/
export function mockEncodingExplode(options: MockGeneratorOptions = {}): types.EncodingExplode {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[143] ??= 0;
try {
depthCounters[143]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[143]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/allowReserved}
*/
export function mockAllowReserved(options: MockGeneratorOptions = {}): types.AllowReserved {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[144] ??= 0;
try {
depthCounters[144]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[144]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/description}
*/
export function mockResponseDescription(options: MockGeneratorOptions = {}): types.ResponseDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[149] ??= 0;
try {
depthCounters[149]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[149]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/summary}
*/
export function mockExampleSummary(options: MockGeneratorOptions = {}): types.ExampleSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[160] ??= 0;
try {
depthCounters[160]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[160]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/description}
*/
export function mockExampleDescription(options: MockGeneratorOptions = {}): types.ExampleDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[161] ??= 0;
try {
depthCounters[161]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[161]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/operationId}
*/
export function mockLinkOperationId(options: MockGeneratorOptions = {}): types.LinkOperationId {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[169] ??= 0;
try {
depthCounters[169]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[169]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/parameters}
*/
export function mockLinkParameters(options: MockGeneratorOptions = {}): types.LinkParameters {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[170] ??= 0;
try {
depthCounters[170]++;
return (mockMapOfStrings());
}
finally {
depthCounters[170]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/description}
*/
export function mockLinkDescription(options: MockGeneratorOptions = {}): types.LinkDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[172] ??= 0;
try {
depthCounters[172]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[172]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/description}
*/
export function mockHeaderDescription(options: MockGeneratorOptions = {}): types.HeaderDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[179] ??= 0;
try {
depthCounters[179]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[179]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/required}
*/
export function mockHeaderRequired(options: MockGeneratorOptions = {}): types.HeaderRequired {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[180] ??= 0;
try {
depthCounters[180]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[180]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/deprecated}
*/
export function mockHeaderDeprecated(options: MockGeneratorOptions = {}): types.HeaderDeprecated {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[181] ??= 0;
try {
depthCounters[181]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[181]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/schema}
*/
export function mockHeaderSchema(options: MockGeneratorOptions = {}): types.HeaderSchema {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[182] ??= 0;
try {
depthCounters[182]++;
return (mockSchema());
}
finally {
depthCounters[182]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/name}
*/
export function mockTagName(options: MockGeneratorOptions = {}): types.TagName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[189] ??= 0;
try {
depthCounters[189]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[189]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/description}
*/
export function mockTagDescription(options: MockGeneratorOptions = {}): types.TagDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[190] ??= 0;
try {
depthCounters[190]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[190]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/summary}
*/
export function mockReferenceSummary(options: MockGeneratorOptions = {}): types.ReferenceSummary {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[193] ??= 0;
try {
depthCounters[193]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[193]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/description}
*/
export function mockReferenceDescription(options: MockGeneratorOptions = {}): types.ReferenceDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[194] ??= 0;
try {
depthCounters[194]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[194]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/properties/description}
*/
export function mockSecuritySchemeDescription(options: MockGeneratorOptions = {}): types.SecuritySchemeDescription {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[201] ??= 0;
try {
depthCounters[201]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[201]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement/additionalProperties}
*/
export function mockSecurityRequirementAdditionalProperties(options: MockGeneratorOptions = {}): types.SecurityRequirementAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[219] ??= 0;
try {
depthCounters[219]++;
return (
[
...new Array(
Math.max(0, configuration.defaultMinimumItems - 0) +
nextSeed() % (
Math.max(0, configuration.defaultMaximumItems - 0) -
Math.max(0, configuration.defaultMinimumItems - 0) +
1
)
)
.fill(undefined)
.map(() => mockSecurityRequirementItems())
]
);
}
finally {
depthCounters[219]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/map-of-strings/additionalProperties}
*/
export function mockMapOfStringsAdditionalProperties(options: MockGeneratorOptions = {}): types.MapOfStringsAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[223] ??= 0;
try {
depthCounters[223]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[223]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/security/items}
*/
export function mockPropertiesSecurityItems(options: MockGeneratorOptions = {}): types.PropertiesSecurityItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[226] ??= 0;
try {
depthCounters[226]++;
return (mockSecurityRequirement());
}
finally {
depthCounters[226]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/enum/items}
*/
export function mockEnumItems(options: MockGeneratorOptions = {}): types.EnumItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[229] ??= 0;
try {
depthCounters[229]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[229]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/schemas/additionalProperties}
*/
export function mockSchemasAdditionalProperties(options: MockGeneratorOptions = {}): types.SchemasAdditionalProperties {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[230] ??= 0;
try {
depthCounters[230]++;
return (mockSchema());
}
finally {
depthCounters[230]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/tags/items}
*/
export function mockOperationTagsItems(options: MockGeneratorOptions = {}): types.OperationTagsItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[243] ??= 0;
try {
depthCounters[243]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[243]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/security/items}
*/
export function mockOperationSecurityItems(options: MockGeneratorOptions = {}): types.OperationSecurityItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[246] ??= 0;
try {
depthCounters[246]++;
return (mockSecurityRequirement());
}
finally {
depthCounters[246]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/then/properties/allowEmptyValue}
*/
export function mockAllowEmptyValue(options: MockGeneratorOptions = {}): types.AllowEmptyValue {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[249] ??= 0;
try {
depthCounters[249]++;
return (Boolean(nextSeed() % 2));
}
finally {
depthCounters[249]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/scopes}
*/
export function mockImplicitScopes(options: MockGeneratorOptions = {}): types.ImplicitScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[269] ??= 0;
try {
depthCounters[269]++;
return (mockMapOfStrings());
}
finally {
depthCounters[269]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/scopes}
*/
export function mockPasswordScopes(options: MockGeneratorOptions = {}): types.PasswordScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[272] ??= 0;
try {
depthCounters[272]++;
return (mockMapOfStrings());
}
finally {
depthCounters[272]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/scopes}
*/
export function mockClientCredentialsScopes(options: MockGeneratorOptions = {}): types.ClientCredentialsScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[275] ??= 0;
try {
depthCounters[275]++;
return (mockMapOfStrings());
}
finally {
depthCounters[275]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/scopes}
*/
export function mockAuthorizationCodeScopes(options: MockGeneratorOptions = {}): types.AuthorizationCodeScopes {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[279] ??= 0;
try {
depthCounters[279]++;
return (mockMapOfStrings());
}
finally {
depthCounters[279]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement/additionalProperties/items}
*/
export function mockSecurityRequirementItems(options: MockGeneratorOptions = {}): types.SecurityRequirementItems {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[280] ??= 0;
try {
depthCounters[280]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[280]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then/properties/name}
*/
export function mockTypeApikeyName(options: MockGeneratorOptions = {}): types.TypeApikeyName {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[286] ??= 0;
try {
depthCounters[286]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[286]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/then/properties/scheme}
*/
export function mockTypeHttpScheme(options: MockGeneratorOptions = {}): types.TypeHttpScheme {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[289] ??= 0;
try {
depthCounters[289]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[289]--;
}
}
/**
* @see {@link https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/then/properties/bearerFormat}
*/
export function mockBearerFormat(options: MockGeneratorOptions = {}): types.BearerFormat {
const configuration = {
...defaultMockGeneratorOptions,
...options,
};
depthCounters[292] ??= 0;
try {
depthCounters[292]++;
return (
new Array(
configuration.defaultMinimumStringLength +
nextSeed() % (
configuration.defaultMaximumStringLength - configuration.defaultMinimumStringLength + 1
)
).
fill(undefined).
map(() => configuration.stringCharacters[nextSeed() % configuration.stringCharacters.length]).
join("")
);
}
finally {
depthCounters[292]--;
}
}
let seed = 1;
function nextSeed() {
// https://en.wikipedia.org/wiki/Linear_congruential_generator
// https://statmath.wu.ac.at/software/src/prng-3.0.2/doc/prng.html/Table_LCG.html
const p = Math.pow(2, 31) - 1;
const a = 950706376;
const b = 0;
seed = (a * seed + b) % p;
return seed;
}
