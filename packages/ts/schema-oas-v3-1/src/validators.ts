// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.9.0                          -- www.JsonSchema42.org
import * as types from "./types.js";
// https://spec.openapis.org/oas/3.1/schema/2022-10-07
export function isSchemaDocument(value: unknown): value is types.SchemaDocument {
if(!_isMapSchemaDocument(value)) {
return false;
}
if(!_isReferenceSchemaDocument(value) || !_isAnyOfSchemaDocument(value)) {
return false;
}
return true;
}
function _isMapSchemaDocument(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("openapi" in value)) {
return false;
}
if(!("info" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "openapi":
if(!isOpenapi(propertyValue)) {
return false;
}
continue;
case "info":
if(!isPropertiesInfo(propertyValue)) {
return false;
}
continue;
case "jsonSchemaDialect":
if(!isJsonSchemaDialect(propertyValue)) {
return false;
}
continue;
case "servers":
if(!isPropertiesServers(propertyValue)) {
return false;
}
continue;
case "paths":
if(!isPropertiesPaths(propertyValue)) {
return false;
}
continue;
case "webhooks":
if(!isWebhooks(propertyValue)) {
return false;
}
continue;
case "components":
if(!isPropertiesComponents(propertyValue)) {
return false;
}
continue;
case "security":
if(!isPropertiesSecurity(propertyValue)) {
return false;
}
continue;
case "tags":
if(!isPropertiesTags(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isPropertiesExternalDocs(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceSchemaDocument(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
function _isAnyOfSchemaDocument(value: unknown): value is unknown {
if(isAnyOf0(value)) {
return true;
}
if(isAnyOf1(value)) {
return true;
}
if(isAnyOf2(value)) {
return true;
}
return false;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info
export function isInfo(value: unknown): value is types.Info {
if(!_isMapInfo(value)) {
return false;
}
if(!_isReferenceInfo(value)) {
return false;
}
return true;
}
function _isMapInfo(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("title" in value)) {
return false;
}
if(!("version" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "title":
if(!isTitle(propertyValue)) {
return false;
}
continue;
case "summary":
if(!isInfoSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isInfoDescription(propertyValue)) {
return false;
}
continue;
case "termsOfService":
if(!isTermsOfService(propertyValue)) {
return false;
}
continue;
case "contact":
if(!isInfoContact(propertyValue)) {
return false;
}
continue;
case "license":
if(!isInfoLicense(propertyValue)) {
return false;
}
continue;
case "version":
if(!isVersion(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceInfo(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact
export function isContact(value: unknown): value is types.Contact {
if(!_isMapContact(value)) {
return false;
}
if(!_isReferenceContact(value)) {
return false;
}
return true;
}
function _isMapContact(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isContactName(propertyValue)) {
return false;
}
continue;
case "url":
if(!isContactUrl(propertyValue)) {
return false;
}
continue;
case "email":
if(!isEmail(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceContact(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license
export function isLicense(value: unknown): value is types.License {
if(!_isMapLicense(value)) {
return false;
}
if(!_isReferenceLicense(value)) {
return false;
}
return true;
}
function _isMapLicense(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isLicenseName(propertyValue)) {
return false;
}
continue;
case "identifier":
if(!isIdentifier(propertyValue)) {
return false;
}
continue;
case "url":
if(!isLicenseUrl(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceLicense(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server
export function isServer(value: unknown): value is types.Server {
if(!_isMapServer(value)) {
return false;
}
if(!_isReferenceServer(value)) {
return false;
}
return true;
}
function _isMapServer(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("url" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "url":
if(!isServerUrl(propertyValue)) {
return false;
}
continue;
case "description":
if(!isServerDescription(propertyValue)) {
return false;
}
continue;
case "variables":
if(!isVariables(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceServer(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable
export function isServerVariable(value: unknown): value is types.ServerVariable {
if(!_isMapServerVariable(value)) {
return false;
}
if(!_isReferenceServerVariable(value)) {
return false;
}
return true;
}
function _isMapServerVariable(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("default" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "enum":
if(!isEnum(propertyValue)) {
return false;
}
continue;
case "default":
if(!isServerVariableDefault(propertyValue)) {
return false;
}
continue;
case "description":
if(!isServerVariableDescription(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceServerVariable(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components
export function isComponents(value: unknown): value is types.Components {
if(!_isMapComponents(value)) {
return false;
}
if(!_isReferenceComponents(value)) {
return false;
}
return true;
}
function _isMapComponents(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "schemas":
if(!isSchemas(propertyValue)) {
return false;
}
continue;
case "responses":
if(!isComponentsResponses(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isComponentsParameters(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isComponentsExamples(propertyValue)) {
return false;
}
continue;
case "requestBodies":
if(!isRequestBodies(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isComponentsHeaders(propertyValue)) {
return false;
}
continue;
case "securitySchemes":
if(!isSecuritySchemes(propertyValue)) {
return false;
}
continue;
case "links":
if(!isComponentsLinks(propertyValue)) {
return false;
}
continue;
case "callbacks":
if(!isComponentsCallbacks(propertyValue)) {
return false;
}
continue;
case "pathItems":
if(!isPathItems(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$").test(propertyName)) {
if(!isSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItems(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceComponents(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/paths
export function isPaths(value: unknown): value is types.Paths {
if(!_isMapPaths(value)) {
return false;
}
if(!_isReferencePaths(value)) {
return false;
}
return true;
}
function _isMapPaths(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(new RegExp("^/").test(propertyName)) {
if(!isPatternProperties(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferencePaths(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item
export function isPathItem(value: unknown): value is types.PathItem {
if(!_isMapPathItem(value)) {
return false;
}
if(!_isReferencePathItem(value)) {
return false;
}
return true;
}
function _isMapPathItem(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "summary":
if(!isPathItemSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isPathItemDescription(propertyValue)) {
return false;
}
continue;
case "servers":
if(!isPathItemServers(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isPathItemParameters(propertyValue)) {
return false;
}
continue;
case "get":
if(!isGet(propertyValue)) {
return false;
}
continue;
case "put":
if(!isPut(propertyValue)) {
return false;
}
continue;
case "post":
if(!isPost(propertyValue)) {
return false;
}
continue;
case "delete":
if(!isDelete(propertyValue)) {
return false;
}
continue;
case "options":
if(!isOptions(propertyValue)) {
return false;
}
continue;
case "head":
if(!isHead(propertyValue)) {
return false;
}
continue;
case "patch":
if(!isPatch(propertyValue)) {
return false;
}
continue;
case "trace":
if(!isTrace(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferencePathItem(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference
export function isPathItemOrReference(value: unknown): value is types.PathItemOrReference {
if(!_isIfPathItemOrReference(value)) {
return false;
}
return true;
}
function _isIfPathItemOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation
export function isOperation(value: unknown): value is types.Operation {
if(!_isMapOperation(value)) {
return false;
}
if(!_isReferenceOperation(value)) {
return false;
}
return true;
}
function _isMapOperation(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tags":
if(!isOperationTags(propertyValue)) {
return false;
}
continue;
case "summary":
if(!isOperationSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isOperationDescription(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isOperationExternalDocs(propertyValue)) {
return false;
}
continue;
case "operationId":
if(!isOperationOperationId(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isOperationParameters(propertyValue)) {
return false;
}
continue;
case "requestBody":
if(!isOperationRequestBody(propertyValue)) {
return false;
}
continue;
case "responses":
if(!isOperationResponses(propertyValue)) {
return false;
}
continue;
case "callbacks":
if(!isOperationCallbacks(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isOperationDeprecated(propertyValue)) {
return false;
}
continue;
case "security":
if(!isOperationSecurity(propertyValue)) {
return false;
}
continue;
case "servers":
if(!isOperationServers(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceOperation(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation
export function isExternalDocumentation(value: unknown): value is types.ExternalDocumentation {
if(!_isMapExternalDocumentation(value)) {
return false;
}
if(!_isReferenceExternalDocumentation(value)) {
return false;
}
return true;
}
function _isMapExternalDocumentation(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("url" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isExternalDocumentationDescription(propertyValue)) {
return false;
}
continue;
case "url":
if(!isExternalDocumentationUrl(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceExternalDocumentation(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter
export function isParameter(value: unknown): value is types.Parameter {
if(!_isMapParameter(value)) {
return false;
}
if(!_isReferenceParameter(value) || !_isOneOfParameter(value) || !_isIfParameter(value)) {
return false;
}
return true;
}
function _isMapParameter(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isParameterName(propertyValue)) {
return false;
}
continue;
case "in":
if(!isPropertiesParameterIn(propertyValue)) {
return false;
}
continue;
case "description":
if(!isParameterDescription(propertyValue)) {
return false;
}
continue;
case "required":
if(!isParameterRequired(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isParameterDeprecated(propertyValue)) {
return false;
}
continue;
case "schema":
if(!isParameterSchema(propertyValue)) {
return false;
}
continue;
case "content":
if(!isParameterContent(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceParameter(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
function _isOneOfParameter(value: unknown): value is unknown {
let validCounter = 0;
if(isParameterOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isParameterOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
function _isIfParameter(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference
export function isParameterOrReference(value: unknown): value is types.ParameterOrReference {
if(!_isIfParameterOrReference(value)) {
return false;
}
return true;
}
function _isIfParameterOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body
export function isRequestBody(value: unknown): value is types.RequestBody {
if(!_isMapRequestBody(value)) {
return false;
}
if(!_isReferenceRequestBody(value)) {
return false;
}
return true;
}
function _isMapRequestBody(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("content" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isRequestBodyDescription(propertyValue)) {
return false;
}
continue;
case "content":
if(!isRequestBodyContent(propertyValue)) {
return false;
}
continue;
case "required":
if(!isRequestBodyRequired(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceRequestBody(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference
export function isRequestBodyOrReference(value: unknown): value is types.RequestBodyOrReference {
if(!_isIfRequestBodyOrReference(value)) {
return false;
}
return true;
}
function _isIfRequestBodyOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/content
export function isContent(value: unknown): value is types.Content {
if(!_isMapContent(value)) {
return false;
}
return true;
}
function _isMapContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isContentPropertyNames(propertyName)) {
return false;
}
continue;
if(!isContentAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type
export function isMediaType(value: unknown): value is types.MediaType {
if(!_isMapMediaType(value)) {
return false;
}
if(!_isAllOfMediaType(value)) {
return false;
}
return true;
}
function _isMapMediaType(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "schema":
if(!isMediaTypeSchema(propertyValue)) {
return false;
}
continue;
case "encoding":
if(!isMediaTypeEncoding(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isAllOfMediaType(value: unknown): value is unknown {
if(!isMediaType0(value)) {
return false;
}
if(!isMediaType1(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding
export function isEncoding(value: unknown): value is types.Encoding {
if(!_isMapEncoding(value)) {
return false;
}
if(!_isAllOfEncoding(value)) {
return false;
}
return true;
}
function _isMapEncoding(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "contentType":
if(!isContentType(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isEncodingHeaders(propertyValue)) {
return false;
}
continue;
case "style":
if(!isEncodingStyle(propertyValue)) {
return false;
}
continue;
case "explode":
if(!isEncodingExplode(propertyValue)) {
return false;
}
continue;
case "allowReserved":
if(!isAllowReserved(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isAllOfEncoding(value: unknown): value is unknown {
if(!isEncodingAllOf0(value)) {
return false;
}
if(!isEncodingAllOf1(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/responses
export function isResponses(value: unknown): value is types.Responses {
if(!_isMapResponses(value)) {
return false;
}
if(!_isReferenceResponses(value)) {
return false;
}
return true;
}
function _isMapResponses(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "default":
if(!isResponsesDefault(propertyValue)) {
return false;
}
continue;
}
if(new RegExp("^[1-5](?:[0-9]{2}|XX)$").test(propertyName)) {
if(!isPatternProperties15092Xx(propertyValue)) {
return false;
}
continue;
}
}
if(propertyCount < 1) {
return false;
}
return true;
}
function _isReferenceResponses(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response
export function isResponse(value: unknown): value is types.Response {
if(!_isMapResponse(value)) {
return false;
}
if(!_isReferenceResponse(value)) {
return false;
}
return true;
}
function _isMapResponse(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("description" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isResponseDescription(propertyValue)) {
return false;
}
continue;
case "headers":
if(!isResponseHeaders(propertyValue)) {
return false;
}
continue;
case "content":
if(!isResponseContent(propertyValue)) {
return false;
}
continue;
case "links":
if(!isResponseLinks(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceResponse(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference
export function isResponseOrReference(value: unknown): value is types.ResponseOrReference {
if(!_isIfResponseOrReference(value)) {
return false;
}
return true;
}
function _isIfResponseOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks
export function isCallbacks(value: unknown): value is types.Callbacks {
if(!_isMapCallbacks(value)) {
return false;
}
if(!_isReferenceCallbacks(value)) {
return false;
}
return true;
}
function _isMapCallbacks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isCallbacksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
function _isReferenceCallbacks(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference
export function isCallbacksOrReference(value: unknown): value is types.CallbacksOrReference {
if(!_isIfCallbacksOrReference(value)) {
return false;
}
return true;
}
function _isIfCallbacksOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example
export function isExample(value: unknown): value is types.Example {
if(!_isMapExample(value)) {
return false;
}
if(!_isReferenceExample(value) || !_isNotExample(value)) {
return false;
}
return true;
}
function _isMapExample(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "summary":
if(!isExampleSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isExampleDescription(propertyValue)) {
return false;
}
continue;
case "value":
if(!isValue(propertyValue)) {
return false;
}
continue;
case "externalValue":
if(!isExternalValue(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceExample(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
function _isNotExample(value: unknown): value is unknown {
if(isNot(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference
export function isExampleOrReference(value: unknown): value is types.ExampleOrReference {
if(!_isIfExampleOrReference(value)) {
return false;
}
return true;
}
function _isIfExampleOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link
export function isLink(value: unknown): value is types.Link {
if(!_isMapLink(value)) {
return false;
}
if(!_isReferenceLink(value) || !_isOneOfLink(value)) {
return false;
}
return true;
}
function _isMapLink(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "operationRef":
if(!isOperationRef(propertyValue)) {
return false;
}
continue;
case "operationId":
if(!isLinkOperationId(propertyValue)) {
return false;
}
continue;
case "parameters":
if(!isLinkParameters(propertyValue)) {
return false;
}
continue;
case "requestBody":
if(!isLinkRequestBody(propertyValue)) {
return false;
}
continue;
case "description":
if(!isLinkDescription(propertyValue)) {
return false;
}
continue;
case "body":
if(!isBody(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceLink(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
function _isOneOfLink(value: unknown): value is unknown {
let validCounter = 0;
if(isLinkOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isLinkOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference
export function isLinkOrReference(value: unknown): value is types.LinkOrReference {
if(!_isIfLinkOrReference(value)) {
return false;
}
return true;
}
function _isIfLinkOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header
export function isHeader(value: unknown): value is types.Header {
if(!_isMapHeader(value)) {
return false;
}
if(!_isReferenceHeader(value) || !_isOneOfHeader(value)) {
return false;
}
return true;
}
function _isMapHeader(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "description":
if(!isHeaderDescription(propertyValue)) {
return false;
}
continue;
case "required":
if(!isHeaderRequired(propertyValue)) {
return false;
}
continue;
case "deprecated":
if(!isHeaderDeprecated(propertyValue)) {
return false;
}
continue;
case "schema":
if(!isHeaderSchema(propertyValue)) {
return false;
}
continue;
case "content":
if(!isHeaderContent(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceHeader(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
function _isOneOfHeader(value: unknown): value is unknown {
let validCounter = 0;
if(isHeaderOneOf0(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(isHeaderOneOf1(value)) {
validCounter++;
}
if(validCounter > 1) {
return false
}
if(validCounter < 1) {
return false
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference
export function isHeaderOrReference(value: unknown): value is types.HeaderOrReference {
if(!_isIfHeaderOrReference(value)) {
return false;
}
return true;
}
function _isIfHeaderOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag
export function isTag(value: unknown): value is types.Tag {
if(!_isMapTag(value)) {
return false;
}
if(!_isReferenceTag(value)) {
return false;
}
return true;
}
function _isMapTag(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isTagName(propertyValue)) {
return false;
}
continue;
case "description":
if(!isTagDescription(propertyValue)) {
return false;
}
continue;
case "externalDocs":
if(!isTagExternalDocs(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceTag(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference
export function isReference(value: unknown): value is types.Reference {
if(!_isMapReference(value)) {
return false;
}
return true;
}
function _isMapReference(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "$ref":
if(!isRef(propertyValue)) {
return false;
}
continue;
case "summary":
if(!isReferenceSummary(propertyValue)) {
return false;
}
continue;
case "description":
if(!isReferenceDescription(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/schema
export function isSchema(value: unknown): value is types.Schema {
if(!_isMapSchema(value) && !_isBooleanSchema(value)) {
return false;
}
return true;
}
function _isMapSchema(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
function _isBooleanSchema(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme
export function isSecurityScheme(value: unknown): value is types.SecurityScheme {
if(!_isMapSecurityScheme(value)) {
return false;
}
if(!_isAllOfSecurityScheme(value)) {
return false;
}
return true;
}
function _isMapSecurityScheme(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isSecuritySchemeType(propertyValue)) {
return false;
}
continue;
case "description":
if(!isSecuritySchemeDescription(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isAllOfSecurityScheme(value: unknown): value is unknown {
if(!isSecuritySchemeAllOf0(value)) {
return false;
}
if(!isSecuritySchemeAllOf1(value)) {
return false;
}
if(!isAllOf2(value)) {
return false;
}
if(!isAllOf3(value)) {
return false;
}
if(!isAllOf4(value)) {
return false;
}
if(!isAllOf5(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference
export function isSecuritySchemeOrReference(value: unknown): value is types.SecuritySchemeOrReference {
if(!_isIfSecuritySchemeOrReference(value)) {
return false;
}
return true;
}
function _isIfSecuritySchemeOrReference(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows
export function isOauthFlows(value: unknown): value is types.OauthFlows {
if(!_isMapOauthFlows(value)) {
return false;
}
if(!_isReferenceOauthFlows(value)) {
return false;
}
return true;
}
function _isMapOauthFlows(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "implicit":
if(!isPropertiesOauthFlowsImplicit(propertyValue)) {
return false;
}
continue;
case "password":
if(!isPropertiesOauthFlowsPassword(propertyValue)) {
return false;
}
continue;
case "clientCredentials":
if(!isPropertiesOauthFlowsClientCredentials(propertyValue)) {
return false;
}
continue;
case "authorizationCode":
if(!isPropertiesOauthFlowsAuthorizationCode(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceOauthFlows(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement
export function isSecurityRequirement(value: unknown): value is types.SecurityRequirement {
if(!_isMapSecurityRequirement(value)) {
return false;
}
return true;
}
function _isMapSecurityRequirement(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isSecurityRequirementAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/specification-extensions
export function isSpecificationExtensions(value: unknown): value is types.SpecificationExtensions {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples
export function isExamples(value: unknown): value is types.Examples {
if(!_isMapExamples(value)) {
return false;
}
return true;
}
function _isMapExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "example":
if(!isExamplesExample(propertyValue)) {
return false;
}
continue;
case "examples":
if(!isExamplesExamples(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/map-of-strings
export function isMapOfStrings(value: unknown): value is types.MapOfStrings {
if(!_isMapMapOfStrings(value)) {
return false;
}
return true;
}
function _isMapMapOfStrings(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isMapOfStringsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/openapi
export function isOpenapi(value: unknown): value is types.Openapi {
if(!_isStringOpenapi(value)) {
return false;
}
return true;
}
function _isStringOpenapi(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^3\\.1\\.\\d+(-.+)?$").test(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/info
export function isPropertiesInfo(value: unknown): value is types.PropertiesInfo {
if(!_isReferencePropertiesInfo(value)) {
return false;
}
return true;
}
function _isReferencePropertiesInfo(value: unknown): value is unknown {
if(!isInfo(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/jsonSchemaDialect
export function isJsonSchemaDialect(value: unknown): value is types.JsonSchemaDialect {
if(!_isStringJsonSchemaDialect(value)) {
return false;
}
return true;
}
function _isStringJsonSchemaDialect(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/servers
export function isPropertiesServers(value: unknown): value is types.PropertiesServers {
if(!_isArrayPropertiesServers(value)) {
return false;
}
return true;
}
function _isArrayPropertiesServers(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isPropertiesServersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/paths
export function isPropertiesPaths(value: unknown): value is types.PropertiesPaths {
if(!_isReferencePropertiesPaths(value)) {
return false;
}
return true;
}
function _isReferencePropertiesPaths(value: unknown): value is unknown {
if(!isPaths(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/webhooks
export function isWebhooks(value: unknown): value is types.Webhooks {
if(!_isMapWebhooks(value)) {
return false;
}
return true;
}
function _isMapWebhooks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isWebhooksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/components
export function isPropertiesComponents(value: unknown): value is types.PropertiesComponents {
if(!_isReferencePropertiesComponents(value)) {
return false;
}
return true;
}
function _isReferencePropertiesComponents(value: unknown): value is unknown {
if(!isComponents(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/security
export function isPropertiesSecurity(value: unknown): value is types.PropertiesSecurity {
if(!_isArrayPropertiesSecurity(value)) {
return false;
}
return true;
}
function _isArrayPropertiesSecurity(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isPropertiesSecurityItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/tags
export function isPropertiesTags(value: unknown): value is types.PropertiesTags {
if(!_isArrayPropertiesTags(value)) {
return false;
}
return true;
}
function _isArrayPropertiesTags(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isPropertiesTagsItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/externalDocs
export function isPropertiesExternalDocs(value: unknown): value is types.PropertiesExternalDocs {
if(!_isReferencePropertiesExternalDocs(value)) {
return false;
}
return true;
}
function _isReferencePropertiesExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/anyOf/0
export function isAnyOf0(value: unknown): value is types.AnyOf0 {
if(!_isMapAnyOf0(value)) {
return false;
}
return true;
}
function _isMapAnyOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("paths" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/anyOf/1
export function isAnyOf1(value: unknown): value is types.AnyOf1 {
if(!_isMapAnyOf1(value)) {
return false;
}
return true;
}
function _isMapAnyOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("components" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/anyOf/2
export function isAnyOf2(value: unknown): value is types.AnyOf2 {
if(!_isMapAnyOf2(value)) {
return false;
}
return true;
}
function _isMapAnyOf2(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("webhooks" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/title
export function isTitle(value: unknown): value is types.Title {
if(!_isStringTitle(value)) {
return false;
}
return true;
}
function _isStringTitle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/summary
export function isInfoSummary(value: unknown): value is types.InfoSummary {
if(!_isStringInfoSummary(value)) {
return false;
}
return true;
}
function _isStringInfoSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/description
export function isInfoDescription(value: unknown): value is types.InfoDescription {
if(!_isStringInfoDescription(value)) {
return false;
}
return true;
}
function _isStringInfoDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/termsOfService
export function isTermsOfService(value: unknown): value is types.TermsOfService {
if(!_isStringTermsOfService(value)) {
return false;
}
return true;
}
function _isStringTermsOfService(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/contact
export function isInfoContact(value: unknown): value is types.InfoContact {
if(!_isReferenceInfoContact(value)) {
return false;
}
return true;
}
function _isReferenceInfoContact(value: unknown): value is unknown {
if(!isContact(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/license
export function isInfoLicense(value: unknown): value is types.InfoLicense {
if(!_isReferenceInfoLicense(value)) {
return false;
}
return true;
}
function _isReferenceInfoLicense(value: unknown): value is unknown {
if(!isLicense(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/info/properties/version
export function isVersion(value: unknown): value is types.Version {
if(!_isStringVersion(value)) {
return false;
}
return true;
}
function _isStringVersion(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/name
export function isContactName(value: unknown): value is types.ContactName {
if(!_isStringContactName(value)) {
return false;
}
return true;
}
function _isStringContactName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/url
export function isContactUrl(value: unknown): value is types.ContactUrl {
if(!_isStringContactUrl(value)) {
return false;
}
return true;
}
function _isStringContactUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/contact/properties/email
export function isEmail(value: unknown): value is types.Email {
if(!_isStringEmail(value)) {
return false;
}
return true;
}
function _isStringEmail(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/name
export function isLicenseName(value: unknown): value is types.LicenseName {
if(!_isStringLicenseName(value)) {
return false;
}
return true;
}
function _isStringLicenseName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/identifier
export function isIdentifier(value: unknown): value is types.Identifier {
if(!_isStringIdentifier(value)) {
return false;
}
return true;
}
function _isStringIdentifier(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/license/properties/url
export function isLicenseUrl(value: unknown): value is types.LicenseUrl {
if(!_isStringLicenseUrl(value)) {
return false;
}
return true;
}
function _isStringLicenseUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/url
export function isServerUrl(value: unknown): value is types.ServerUrl {
if(!_isStringServerUrl(value)) {
return false;
}
return true;
}
function _isStringServerUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/description
export function isServerDescription(value: unknown): value is types.ServerDescription {
if(!_isStringServerDescription(value)) {
return false;
}
return true;
}
function _isStringServerDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/variables
export function isVariables(value: unknown): value is types.Variables {
if(!_isMapVariables(value)) {
return false;
}
return true;
}
function _isMapVariables(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isVariablesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/enum
export function isEnum(value: unknown): value is types.Enum {
if(!_isArrayEnum(value)) {
return false;
}
return true;
}
function _isArrayEnum(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
if(value.length < 1) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isEnumItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/default
export function isServerVariableDefault(value: unknown): value is types.ServerVariableDefault {
if(!_isStringServerVariableDefault(value)) {
return false;
}
return true;
}
function _isStringServerVariableDefault(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/description
export function isServerVariableDescription(value: unknown): value is types.ServerVariableDescription {
if(!_isStringServerVariableDescription(value)) {
return false;
}
return true;
}
function _isStringServerVariableDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/schemas
export function isSchemas(value: unknown): value is types.Schemas {
if(!_isMapSchemas(value)) {
return false;
}
return true;
}
function _isMapSchemas(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isSchemasAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/responses
export function isComponentsResponses(value: unknown): value is types.ComponentsResponses {
if(!_isMapComponentsResponses(value)) {
return false;
}
return true;
}
function _isMapComponentsResponses(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isResponsesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/parameters
export function isComponentsParameters(value: unknown): value is types.ComponentsParameters {
if(!_isMapComponentsParameters(value)) {
return false;
}
return true;
}
function _isMapComponentsParameters(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isParametersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/examples
export function isComponentsExamples(value: unknown): value is types.ComponentsExamples {
if(!_isMapComponentsExamples(value)) {
return false;
}
return true;
}
function _isMapComponentsExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isComponentsExamplesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/requestBodies
export function isRequestBodies(value: unknown): value is types.RequestBodies {
if(!_isMapRequestBodies(value)) {
return false;
}
return true;
}
function _isMapRequestBodies(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isRequestBodiesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/headers
export function isComponentsHeaders(value: unknown): value is types.ComponentsHeaders {
if(!_isMapComponentsHeaders(value)) {
return false;
}
return true;
}
function _isMapComponentsHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isComponentsHeadersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/securitySchemes
export function isSecuritySchemes(value: unknown): value is types.SecuritySchemes {
if(!_isMapSecuritySchemes(value)) {
return false;
}
return true;
}
function _isMapSecuritySchemes(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isSecuritySchemesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/links
export function isComponentsLinks(value: unknown): value is types.ComponentsLinks {
if(!_isMapComponentsLinks(value)) {
return false;
}
return true;
}
function _isMapComponentsLinks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isComponentsLinksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/callbacks
export function isComponentsCallbacks(value: unknown): value is types.ComponentsCallbacks {
if(!_isMapComponentsCallbacks(value)) {
return false;
}
return true;
}
function _isMapComponentsCallbacks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isComponentsCallbacksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/pathItems
export function isPathItems(value: unknown): value is types.PathItems {
if(!_isMapPathItems(value)) {
return false;
}
return true;
}
function _isMapPathItems(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isPathItemsAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/patternProperties/^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$
export function isSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItems(value: unknown): value is types.SchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItems {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/paths/patternProperties/^/
export function isPatternProperties(value: unknown): value is types.PatternProperties {
if(!_isReferencePatternProperties(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties(value: unknown): value is unknown {
if(!isPathItem(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/summary
export function isPathItemSummary(value: unknown): value is types.PathItemSummary {
if(!_isStringPathItemSummary(value)) {
return false;
}
return true;
}
function _isStringPathItemSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/description
export function isPathItemDescription(value: unknown): value is types.PathItemDescription {
if(!_isStringPathItemDescription(value)) {
return false;
}
return true;
}
function _isStringPathItemDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/servers
export function isPathItemServers(value: unknown): value is types.PathItemServers {
if(!_isArrayPathItemServers(value)) {
return false;
}
return true;
}
function _isArrayPathItemServers(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isPathItemServersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/parameters
export function isPathItemParameters(value: unknown): value is types.PathItemParameters {
if(!_isArrayPathItemParameters(value)) {
return false;
}
return true;
}
function _isArrayPathItemParameters(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isPathItemParametersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/get
export function isGet(value: unknown): value is types.Get {
if(!_isReferenceGet(value)) {
return false;
}
return true;
}
function _isReferenceGet(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/put
export function isPut(value: unknown): value is types.Put {
if(!_isReferencePut(value)) {
return false;
}
return true;
}
function _isReferencePut(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/post
export function isPost(value: unknown): value is types.Post {
if(!_isReferencePost(value)) {
return false;
}
return true;
}
function _isReferencePost(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/delete
export function isDelete(value: unknown): value is types.Delete {
if(!_isReferenceDelete(value)) {
return false;
}
return true;
}
function _isReferenceDelete(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/options
export function isOptions(value: unknown): value is types.Options {
if(!_isReferenceOptions(value)) {
return false;
}
return true;
}
function _isReferenceOptions(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/head
export function isHead(value: unknown): value is types.Head {
if(!_isReferenceHead(value)) {
return false;
}
return true;
}
function _isReferenceHead(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/patch
export function isPatch(value: unknown): value is types.Patch {
if(!_isReferencePatch(value)) {
return false;
}
return true;
}
function _isReferencePatch(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/trace
export function isTrace(value: unknown): value is types.Trace {
if(!_isReferenceTrace(value)) {
return false;
}
return true;
}
function _isReferenceTrace(value: unknown): value is unknown {
if(!isOperation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference/if
export function isPathItemOrReferenceIf(value: unknown): value is types.PathItemOrReferenceIf {
if(!_isMapPathItemOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapPathItemOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference/then
export function isPathItemOrReferenceThen(value: unknown): value is types.PathItemOrReferenceThen {
if(!_isReferencePathItemOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferencePathItemOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item-or-reference/else
export function isPathItemOrReferenceElse(value: unknown): value is types.PathItemOrReferenceElse {
if(!_isReferencePathItemOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferencePathItemOrReferenceElse(value: unknown): value is unknown {
if(!isPathItem(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/tags
export function isOperationTags(value: unknown): value is types.OperationTags {
if(!_isArrayOperationTags(value)) {
return false;
}
return true;
}
function _isArrayOperationTags(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationTagsItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/summary
export function isOperationSummary(value: unknown): value is types.OperationSummary {
if(!_isStringOperationSummary(value)) {
return false;
}
return true;
}
function _isStringOperationSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/description
export function isOperationDescription(value: unknown): value is types.OperationDescription {
if(!_isStringOperationDescription(value)) {
return false;
}
return true;
}
function _isStringOperationDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/externalDocs
export function isOperationExternalDocs(value: unknown): value is types.OperationExternalDocs {
if(!_isReferenceOperationExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceOperationExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/operationId
export function isOperationOperationId(value: unknown): value is types.OperationOperationId {
if(!_isStringOperationOperationId(value)) {
return false;
}
return true;
}
function _isStringOperationOperationId(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/parameters
export function isOperationParameters(value: unknown): value is types.OperationParameters {
if(!_isArrayOperationParameters(value)) {
return false;
}
return true;
}
function _isArrayOperationParameters(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationParametersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/requestBody
export function isOperationRequestBody(value: unknown): value is types.OperationRequestBody {
if(!_isReferenceOperationRequestBody(value)) {
return false;
}
return true;
}
function _isReferenceOperationRequestBody(value: unknown): value is unknown {
if(!isRequestBodyOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/responses
export function isOperationResponses(value: unknown): value is types.OperationResponses {
if(!_isReferenceOperationResponses(value)) {
return false;
}
return true;
}
function _isReferenceOperationResponses(value: unknown): value is unknown {
if(!isResponses(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/callbacks
export function isOperationCallbacks(value: unknown): value is types.OperationCallbacks {
if(!_isMapOperationCallbacks(value)) {
return false;
}
return true;
}
function _isMapOperationCallbacks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isOperationCallbacksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/deprecated
export function isOperationDeprecated(value: unknown): value is types.OperationDeprecated {
if(!_isBooleanOperationDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanOperationDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/security
export function isOperationSecurity(value: unknown): value is types.OperationSecurity {
if(!_isArrayOperationSecurity(value)) {
return false;
}
return true;
}
function _isArrayOperationSecurity(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationSecurityItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/servers
export function isOperationServers(value: unknown): value is types.OperationServers {
if(!_isArrayOperationServers(value)) {
return false;
}
return true;
}
function _isArrayOperationServers(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOperationServersItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation/properties/description
export function isExternalDocumentationDescription(value: unknown): value is types.ExternalDocumentationDescription {
if(!_isStringExternalDocumentationDescription(value)) {
return false;
}
return true;
}
function _isStringExternalDocumentationDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/external-documentation/properties/url
export function isExternalDocumentationUrl(value: unknown): value is types.ExternalDocumentationUrl {
if(!_isStringExternalDocumentationUrl(value)) {
return false;
}
return true;
}
function _isStringExternalDocumentationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/name
export function isParameterName(value: unknown): value is types.ParameterName {
if(!_isStringParameterName(value)) {
return false;
}
return true;
}
function _isStringParameterName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/in
export function isPropertiesParameterIn(value: unknown): value is types.PropertiesParameterIn {
if(!_isStringPropertiesParameterIn(value)) {
return false;
}
return true;
}
function _isStringPropertiesParameterIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "query" && value !== "header" && value !== "path" && value !== "cookie") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/description
export function isParameterDescription(value: unknown): value is types.ParameterDescription {
if(!_isStringParameterDescription(value)) {
return false;
}
return true;
}
function _isStringParameterDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/required
export function isParameterRequired(value: unknown): value is types.ParameterRequired {
if(!_isBooleanParameterRequired(value)) {
return false;
}
return true;
}
function _isBooleanParameterRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/deprecated
export function isParameterDeprecated(value: unknown): value is types.ParameterDeprecated {
if(!_isBooleanParameterDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanParameterDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/schema
export function isParameterSchema(value: unknown): value is types.ParameterSchema {
if(!_isReferenceParameterSchema(value)) {
return false;
}
return true;
}
function _isReferenceParameterSchema(value: unknown): value is unknown {
if(!isSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/properties/content
export function isParameterContent(value: unknown): value is types.ParameterContent {
if(!_isMapParameterContent(value)) {
return false;
}
if(!_isReferenceParameterContent(value)) {
return false;
}
return true;
}
function _isMapParameterContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
}
if(propertyCount < 1) {
return false;
}
if(propertyCount > 1) {
return false;
}
return true;
}
function _isReferenceParameterContent(value: unknown): value is unknown {
if(!isContent(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/oneOf/0
export function isParameterOneOf0(value: unknown): value is types.ParameterOneOf0 {
if(!_isMapParameterOneOf0(value)) {
return false;
}
return true;
}
function _isMapParameterOneOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("schema" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/oneOf/1
export function isParameterOneOf1(value: unknown): value is types.ParameterOneOf1 {
if(!_isMapParameterOneOf1(value)) {
return false;
}
return true;
}
function _isMapParameterOneOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("content" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/if
export function isParameterIf(value: unknown): value is types.ParameterIf {
if(!_isMapParameterIf(value)) {
return false;
}
return true;
}
function _isMapParameterIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("in" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "in":
if(!isIfParameterIn(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/then
export function isParameterThen(value: unknown): value is types.ParameterThen {
if(!_isMapParameterThen(value)) {
return false;
}
return true;
}
function _isMapParameterThen(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "allowEmptyValue":
if(!isAllowEmptyValue(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference/if
export function isParameterOrReferenceIf(value: unknown): value is types.ParameterOrReferenceIf {
if(!_isMapParameterOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapParameterOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference/then
export function isParameterOrReferenceThen(value: unknown): value is types.ParameterOrReferenceThen {
if(!_isReferenceParameterOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceParameterOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter-or-reference/else
export function isParameterOrReferenceElse(value: unknown): value is types.ParameterOrReferenceElse {
if(!_isReferenceParameterOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceParameterOrReferenceElse(value: unknown): value is unknown {
if(!isParameter(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/description
export function isRequestBodyDescription(value: unknown): value is types.RequestBodyDescription {
if(!_isStringRequestBodyDescription(value)) {
return false;
}
return true;
}
function _isStringRequestBodyDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/content
export function isRequestBodyContent(value: unknown): value is types.RequestBodyContent {
if(!_isReferenceRequestBodyContent(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodyContent(value: unknown): value is unknown {
if(!isContent(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body/properties/required
export function isRequestBodyRequired(value: unknown): value is types.RequestBodyRequired {
if(!_isBooleanRequestBodyRequired(value)) {
return false;
}
return true;
}
function _isBooleanRequestBodyRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference/if
export function isRequestBodyOrReferenceIf(value: unknown): value is types.RequestBodyOrReferenceIf {
if(!_isMapRequestBodyOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapRequestBodyOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference/then
export function isRequestBodyOrReferenceThen(value: unknown): value is types.RequestBodyOrReferenceThen {
if(!_isReferenceRequestBodyOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodyOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/request-body-or-reference/else
export function isRequestBodyOrReferenceElse(value: unknown): value is types.RequestBodyOrReferenceElse {
if(!_isReferenceRequestBodyOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodyOrReferenceElse(value: unknown): value is unknown {
if(!isRequestBody(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/content/additionalProperties
export function isContentAdditionalProperties(value: unknown): value is types.ContentAdditionalProperties {
if(!_isReferenceContentAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceContentAdditionalProperties(value: unknown): value is unknown {
if(!isMediaType(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/content/propertyNames
export function isContentPropertyNames(value: unknown): value is types.ContentPropertyNames {
if(!_isStringContentPropertyNames(value)) {
return false;
}
return true;
}
function _isStringContentPropertyNames(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/schema
export function isMediaTypeSchema(value: unknown): value is types.MediaTypeSchema {
if(!_isReferenceMediaTypeSchema(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeSchema(value: unknown): value is unknown {
if(!isSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/encoding
export function isMediaTypeEncoding(value: unknown): value is types.MediaTypeEncoding {
if(!_isMapMediaTypeEncoding(value)) {
return false;
}
return true;
}
function _isMapMediaTypeEncoding(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isMediaTypeAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/allOf/0
export function isMediaType0(value: unknown): value is types.MediaType0 {
if(!_isReferenceMediaType0(value)) {
return false;
}
return true;
}
function _isReferenceMediaType0(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/allOf/1
export function isMediaType1(value: unknown): value is types.MediaType1 {
if(!_isReferenceMediaType1(value)) {
return false;
}
return true;
}
function _isReferenceMediaType1(value: unknown): value is unknown {
if(!isExamples(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default
export function isExplodeDefault(value: unknown): value is types.ExplodeDefault {
if(!_isIfExplodeDefault(value)) {
return false;
}
return true;
}
function _isIfExplodeDefault(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/contentType
export function isContentType(value: unknown): value is types.ContentType {
if(!_isStringContentType(value)) {
return false;
}
return true;
}
function _isStringContentType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/headers
export function isEncodingHeaders(value: unknown): value is types.EncodingHeaders {
if(!_isMapEncodingHeaders(value)) {
return false;
}
return true;
}
function _isMapEncodingHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isEncodingHeadersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/style
export function isEncodingStyle(value: unknown): value is types.EncodingStyle {
if(!_isStringEncodingStyle(value)) {
return false;
}
return true;
}
function _isStringEncodingStyle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "form" && value !== "spaceDelimited" && value !== "pipeDelimited" && value !== "deepObject") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/explode
export function isEncodingExplode(value: unknown): value is types.EncodingExplode {
if(!_isBooleanEncodingExplode(value)) {
return false;
}
return true;
}
function _isBooleanEncodingExplode(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/allowReserved
export function isAllowReserved(value: unknown): value is types.AllowReserved {
if(!_isBooleanAllowReserved(value)) {
return false;
}
return true;
}
function _isBooleanAllowReserved(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/allOf/0
export function isEncodingAllOf0(value: unknown): value is types.EncodingAllOf0 {
if(!_isReferenceEncodingAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceEncodingAllOf0(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/allOf/1
export function isEncodingAllOf1(value: unknown): value is types.EncodingAllOf1 {
if(!_isReferenceEncodingAllOf1(value)) {
return false;
}
return true;
}
function _isReferenceEncodingAllOf1(value: unknown): value is unknown {
if(!isExplodeDefault(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/responses/properties/default
export function isResponsesDefault(value: unknown): value is types.ResponsesDefault {
if(!_isReferenceResponsesDefault(value)) {
return false;
}
return true;
}
function _isReferenceResponsesDefault(value: unknown): value is unknown {
if(!isResponseOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/responses/patternProperties/^[1-5](?:[0-9]{2}|XX)$
export function isPatternProperties15092Xx(value: unknown): value is types.PatternProperties15092Xx {
if(!_isReferencePatternProperties15092Xx(value)) {
return false;
}
return true;
}
function _isReferencePatternProperties15092Xx(value: unknown): value is unknown {
if(!isResponseOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/description
export function isResponseDescription(value: unknown): value is types.ResponseDescription {
if(!_isStringResponseDescription(value)) {
return false;
}
return true;
}
function _isStringResponseDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/headers
export function isResponseHeaders(value: unknown): value is types.ResponseHeaders {
if(!_isMapResponseHeaders(value)) {
return false;
}
return true;
}
function _isMapResponseHeaders(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isResponseHeadersAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/content
export function isResponseContent(value: unknown): value is types.ResponseContent {
if(!_isReferenceResponseContent(value)) {
return false;
}
return true;
}
function _isReferenceResponseContent(value: unknown): value is unknown {
if(!isContent(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/links
export function isResponseLinks(value: unknown): value is types.ResponseLinks {
if(!_isMapResponseLinks(value)) {
return false;
}
return true;
}
function _isMapResponseLinks(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isResponseLinksAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference/if
export function isResponseOrReferenceIf(value: unknown): value is types.ResponseOrReferenceIf {
if(!_isMapResponseOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapResponseOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference/then
export function isResponseOrReferenceThen(value: unknown): value is types.ResponseOrReferenceThen {
if(!_isReferenceResponseOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceResponseOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response-or-reference/else
export function isResponseOrReferenceElse(value: unknown): value is types.ResponseOrReferenceElse {
if(!_isReferenceResponseOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceResponseOrReferenceElse(value: unknown): value is unknown {
if(!isResponse(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks/additionalProperties
export function isCallbacksAdditionalProperties(value: unknown): value is types.CallbacksAdditionalProperties {
if(!_isReferenceCallbacksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksAdditionalProperties(value: unknown): value is unknown {
if(!isPathItemOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference/if
export function isCallbacksOrReferenceIf(value: unknown): value is types.CallbacksOrReferenceIf {
if(!_isMapCallbacksOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapCallbacksOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference/then
export function isCallbacksOrReferenceThen(value: unknown): value is types.CallbacksOrReferenceThen {
if(!_isReferenceCallbacksOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/callbacks-or-reference/else
export function isCallbacksOrReferenceElse(value: unknown): value is types.CallbacksOrReferenceElse {
if(!_isReferenceCallbacksOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceCallbacksOrReferenceElse(value: unknown): value is unknown {
if(!isCallbacks(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/summary
export function isExampleSummary(value: unknown): value is types.ExampleSummary {
if(!_isStringExampleSummary(value)) {
return false;
}
return true;
}
function _isStringExampleSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/description
export function isExampleDescription(value: unknown): value is types.ExampleDescription {
if(!_isStringExampleDescription(value)) {
return false;
}
return true;
}
function _isStringExampleDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/value
export function isValue(value: unknown): value is types.Value {
if(!_isAnyValue(value)) {
return false;
}
return true;
}
function _isAnyValue(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/properties/externalValue
export function isExternalValue(value: unknown): value is types.ExternalValue {
if(!_isStringExternalValue(value)) {
return false;
}
return true;
}
function _isStringExternalValue(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example/not
export function isNot(value: unknown): value is types.Not {
if(!_isMapNot(value)) {
return false;
}
return true;
}
function _isMapNot(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("value" in value)) {
return false;
}
if(!("externalValue" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference/if
export function isExampleOrReferenceIf(value: unknown): value is types.ExampleOrReferenceIf {
if(!_isMapExampleOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapExampleOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference/then
export function isExampleOrReferenceThen(value: unknown): value is types.ExampleOrReferenceThen {
if(!_isReferenceExampleOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceExampleOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/example-or-reference/else
export function isExampleOrReferenceElse(value: unknown): value is types.ExampleOrReferenceElse {
if(!_isReferenceExampleOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceExampleOrReferenceElse(value: unknown): value is unknown {
if(!isExample(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/operationRef
export function isOperationRef(value: unknown): value is types.OperationRef {
if(!_isStringOperationRef(value)) {
return false;
}
return true;
}
function _isStringOperationRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/operationId
export function isLinkOperationId(value: unknown): value is types.LinkOperationId {
if(!_isStringLinkOperationId(value)) {
return false;
}
return true;
}
function _isStringLinkOperationId(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/parameters
export function isLinkParameters(value: unknown): value is types.LinkParameters {
if(!_isReferenceLinkParameters(value)) {
return false;
}
return true;
}
function _isReferenceLinkParameters(value: unknown): value is unknown {
if(!isMapOfStrings(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/requestBody
export function isLinkRequestBody(value: unknown): value is types.LinkRequestBody {
if(!_isAnyLinkRequestBody(value)) {
return false;
}
return true;
}
function _isAnyLinkRequestBody(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/description
export function isLinkDescription(value: unknown): value is types.LinkDescription {
if(!_isStringLinkDescription(value)) {
return false;
}
return true;
}
function _isStringLinkDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/properties/body
export function isBody(value: unknown): value is types.Body {
if(!_isReferenceBody(value)) {
return false;
}
return true;
}
function _isReferenceBody(value: unknown): value is unknown {
if(!isServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/oneOf/0
export function isLinkOneOf0(value: unknown): value is types.LinkOneOf0 {
if(!_isMapLinkOneOf0(value)) {
return false;
}
return true;
}
function _isMapLinkOneOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("operationRef" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link/oneOf/1
export function isLinkOneOf1(value: unknown): value is types.LinkOneOf1 {
if(!_isMapLinkOneOf1(value)) {
return false;
}
return true;
}
function _isMapLinkOneOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("operationId" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference/if
export function isLinkOrReferenceIf(value: unknown): value is types.LinkOrReferenceIf {
if(!_isMapLinkOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapLinkOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference/then
export function isLinkOrReferenceThen(value: unknown): value is types.LinkOrReferenceThen {
if(!_isReferenceLinkOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceLinkOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/link-or-reference/else
export function isLinkOrReferenceElse(value: unknown): value is types.LinkOrReferenceElse {
if(!_isReferenceLinkOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceLinkOrReferenceElse(value: unknown): value is unknown {
if(!isLink(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/description
export function isHeaderDescription(value: unknown): value is types.HeaderDescription {
if(!_isStringHeaderDescription(value)) {
return false;
}
return true;
}
function _isStringHeaderDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/required
export function isHeaderRequired(value: unknown): value is types.HeaderRequired {
if(!_isBooleanHeaderRequired(value)) {
return false;
}
return true;
}
function _isBooleanHeaderRequired(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/deprecated
export function isHeaderDeprecated(value: unknown): value is types.HeaderDeprecated {
if(!_isBooleanHeaderDeprecated(value)) {
return false;
}
return true;
}
function _isBooleanHeaderDeprecated(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/schema
export function isHeaderSchema(value: unknown): value is types.HeaderSchema {
if(!_isReferenceHeaderSchema(value)) {
return false;
}
return true;
}
function _isReferenceHeaderSchema(value: unknown): value is unknown {
if(!isSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/properties/content
export function isHeaderContent(value: unknown): value is types.HeaderContent {
if(!_isMapHeaderContent(value)) {
return false;
}
if(!_isReferenceHeaderContent(value)) {
return false;
}
return true;
}
function _isMapHeaderContent(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
let propertyCount = 0;
for(const propertyName in value) {
propertyCount++;
const propertyValue = value[propertyName as keyof typeof value];
}
if(propertyCount < 1) {
return false;
}
if(propertyCount > 1) {
return false;
}
return true;
}
function _isReferenceHeaderContent(value: unknown): value is unknown {
if(!isContent(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/oneOf/0
export function isHeaderOneOf0(value: unknown): value is types.HeaderOneOf0 {
if(!_isMapHeaderOneOf0(value)) {
return false;
}
return true;
}
function _isMapHeaderOneOf0(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("schema" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header/oneOf/1
export function isHeaderOneOf1(value: unknown): value is types.HeaderOneOf1 {
if(!_isMapHeaderOneOf1(value)) {
return false;
}
return true;
}
function _isMapHeaderOneOf1(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("content" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference/if
export function isHeaderOrReferenceIf(value: unknown): value is types.HeaderOrReferenceIf {
if(!_isMapHeaderOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapHeaderOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference/then
export function isHeaderOrReferenceThen(value: unknown): value is types.HeaderOrReferenceThen {
if(!_isReferenceHeaderOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceHeaderOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/header-or-reference/else
export function isHeaderOrReferenceElse(value: unknown): value is types.HeaderOrReferenceElse {
if(!_isReferenceHeaderOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceHeaderOrReferenceElse(value: unknown): value is unknown {
if(!isHeader(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/name
export function isTagName(value: unknown): value is types.TagName {
if(!_isStringTagName(value)) {
return false;
}
return true;
}
function _isStringTagName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/description
export function isTagDescription(value: unknown): value is types.TagDescription {
if(!_isStringTagDescription(value)) {
return false;
}
return true;
}
function _isStringTagDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/tag/properties/externalDocs
export function isTagExternalDocs(value: unknown): value is types.TagExternalDocs {
if(!_isReferenceTagExternalDocs(value)) {
return false;
}
return true;
}
function _isReferenceTagExternalDocs(value: unknown): value is unknown {
if(!isExternalDocumentation(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/$ref
export function isRef(value: unknown): value is types.Ref {
if(!_isStringRef(value)) {
return false;
}
return true;
}
function _isStringRef(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/summary
export function isReferenceSummary(value: unknown): value is types.ReferenceSummary {
if(!_isStringReferenceSummary(value)) {
return false;
}
return true;
}
function _isStringReferenceSummary(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/reference/properties/description
export function isReferenceDescription(value: unknown): value is types.ReferenceDescription {
if(!_isStringReferenceDescription(value)) {
return false;
}
return true;
}
function _isStringReferenceDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey
export function isTypeApikey(value: unknown): value is types.TypeApikey {
if(!_isIfTypeApikey(value)) {
return false;
}
return true;
}
function _isIfTypeApikey(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http
export function isTypeHttp(value: unknown): value is types.TypeHttp {
if(!_isIfTypeHttp(value)) {
return false;
}
return true;
}
function _isIfTypeHttp(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer
export function isTypeHttpBearer(value: unknown): value is types.TypeHttpBearer {
if(!_isIfTypeHttpBearer(value)) {
return false;
}
return true;
}
function _isIfTypeHttpBearer(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2
export function isTypeOauth2(value: unknown): value is types.TypeOauth2 {
if(!_isIfTypeOauth2(value)) {
return false;
}
return true;
}
function _isIfTypeOauth2(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc
export function isTypeOidc(value: unknown): value is types.TypeOidc {
if(!_isIfTypeOidc(value)) {
return false;
}
return true;
}
function _isIfTypeOidc(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/properties/type
export function isSecuritySchemeType(value: unknown): value is types.SecuritySchemeType {
if(!_isStringSecuritySchemeType(value)) {
return false;
}
return true;
}
function _isStringSecuritySchemeType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "apiKey" && value !== "http" && value !== "mutualTLS" && value !== "oauth2" && value !== "openIdConnect") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/properties/description
export function isSecuritySchemeDescription(value: unknown): value is types.SecuritySchemeDescription {
if(!_isStringSecuritySchemeDescription(value)) {
return false;
}
return true;
}
function _isStringSecuritySchemeDescription(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/0
export function isSecuritySchemeAllOf0(value: unknown): value is types.SecuritySchemeAllOf0 {
if(!_isReferenceSecuritySchemeAllOf0(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeAllOf0(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/1
export function isSecuritySchemeAllOf1(value: unknown): value is types.SecuritySchemeAllOf1 {
if(!_isReferenceSecuritySchemeAllOf1(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeAllOf1(value: unknown): value is unknown {
if(!isTypeApikey(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/2
export function isAllOf2(value: unknown): value is types.AllOf2 {
if(!_isReferenceAllOf2(value)) {
return false;
}
return true;
}
function _isReferenceAllOf2(value: unknown): value is unknown {
if(!isTypeHttp(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/3
export function isAllOf3(value: unknown): value is types.AllOf3 {
if(!_isReferenceAllOf3(value)) {
return false;
}
return true;
}
function _isReferenceAllOf3(value: unknown): value is unknown {
if(!isTypeHttpBearer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/4
export function isAllOf4(value: unknown): value is types.AllOf4 {
if(!_isReferenceAllOf4(value)) {
return false;
}
return true;
}
function _isReferenceAllOf4(value: unknown): value is unknown {
if(!isTypeOauth2(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/allOf/5
export function isAllOf5(value: unknown): value is types.AllOf5 {
if(!_isReferenceAllOf5(value)) {
return false;
}
return true;
}
function _isReferenceAllOf5(value: unknown): value is unknown {
if(!isTypeOidc(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference/if
export function isSecuritySchemeOrReferenceIf(value: unknown): value is types.SecuritySchemeOrReferenceIf {
if(!_isMapSecuritySchemeOrReferenceIf(value)) {
return false;
}
return true;
}
function _isMapSecuritySchemeOrReferenceIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("$ref" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference/then
export function isSecuritySchemeOrReferenceThen(value: unknown): value is types.SecuritySchemeOrReferenceThen {
if(!_isReferenceSecuritySchemeOrReferenceThen(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeOrReferenceThen(value: unknown): value is unknown {
if(!isReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme-or-reference/else
export function isSecuritySchemeOrReferenceElse(value: unknown): value is types.SecuritySchemeOrReferenceElse {
if(!_isReferenceSecuritySchemeOrReferenceElse(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemeOrReferenceElse(value: unknown): value is unknown {
if(!isSecurityScheme(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit
export function isDefsOauthFlowsImplicit(value: unknown): value is types.DefsOauthFlowsImplicit {
if(!_isMapDefsOauthFlowsImplicit(value)) {
return false;
}
if(!_isReferenceDefsOauthFlowsImplicit(value)) {
return false;
}
return true;
}
function _isMapDefsOauthFlowsImplicit(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("authorizationUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "authorizationUrl":
if(!isImplicitAuthorizationUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isImplicitRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isImplicitScopes(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceDefsOauthFlowsImplicit(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password
export function isDefsOauthFlowsPassword(value: unknown): value is types.DefsOauthFlowsPassword {
if(!_isMapDefsOauthFlowsPassword(value)) {
return false;
}
if(!_isReferenceDefsOauthFlowsPassword(value)) {
return false;
}
return true;
}
function _isMapDefsOauthFlowsPassword(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tokenUrl":
if(!isPasswordTokenUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isPasswordRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isPasswordScopes(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceDefsOauthFlowsPassword(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials
export function isDefsOauthFlowsClientCredentials(value: unknown): value is types.DefsOauthFlowsClientCredentials {
if(!_isMapDefsOauthFlowsClientCredentials(value)) {
return false;
}
if(!_isReferenceDefsOauthFlowsClientCredentials(value)) {
return false;
}
return true;
}
function _isMapDefsOauthFlowsClientCredentials(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "tokenUrl":
if(!isClientCredentialsTokenUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isClientCredentialsRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isClientCredentialsScopes(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceDefsOauthFlowsClientCredentials(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code
export function isDefsOauthFlowsAuthorizationCode(value: unknown): value is types.DefsOauthFlowsAuthorizationCode {
if(!_isMapDefsOauthFlowsAuthorizationCode(value)) {
return false;
}
if(!_isReferenceDefsOauthFlowsAuthorizationCode(value)) {
return false;
}
return true;
}
function _isMapDefsOauthFlowsAuthorizationCode(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("authorizationUrl" in value)) {
return false;
}
if(!("tokenUrl" in value)) {
return false;
}
if(!("scopes" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "authorizationUrl":
if(!isAuthorizationCodeAuthorizationUrl(propertyValue)) {
return false;
}
continue;
case "tokenUrl":
if(!isAuthorizationCodeTokenUrl(propertyValue)) {
return false;
}
continue;
case "refreshUrl":
if(!isAuthorizationCodeRefreshUrl(propertyValue)) {
return false;
}
continue;
case "scopes":
if(!isAuthorizationCodeScopes(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
function _isReferenceDefsOauthFlowsAuthorizationCode(value: unknown): value is unknown {
if(!isSpecificationExtensions(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/implicit
export function isPropertiesOauthFlowsImplicit(value: unknown): value is types.PropertiesOauthFlowsImplicit {
if(!_isReferencePropertiesOauthFlowsImplicit(value)) {
return false;
}
return true;
}
function _isReferencePropertiesOauthFlowsImplicit(value: unknown): value is unknown {
if(!isDefsOauthFlowsImplicit(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/password
export function isPropertiesOauthFlowsPassword(value: unknown): value is types.PropertiesOauthFlowsPassword {
if(!_isReferencePropertiesOauthFlowsPassword(value)) {
return false;
}
return true;
}
function _isReferencePropertiesOauthFlowsPassword(value: unknown): value is unknown {
if(!isDefsOauthFlowsPassword(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/clientCredentials
export function isPropertiesOauthFlowsClientCredentials(value: unknown): value is types.PropertiesOauthFlowsClientCredentials {
if(!_isReferencePropertiesOauthFlowsClientCredentials(value)) {
return false;
}
return true;
}
function _isReferencePropertiesOauthFlowsClientCredentials(value: unknown): value is unknown {
if(!isDefsOauthFlowsClientCredentials(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/properties/authorizationCode
export function isPropertiesOauthFlowsAuthorizationCode(value: unknown): value is types.PropertiesOauthFlowsAuthorizationCode {
if(!_isReferencePropertiesOauthFlowsAuthorizationCode(value)) {
return false;
}
return true;
}
function _isReferencePropertiesOauthFlowsAuthorizationCode(value: unknown): value is unknown {
if(!isDefsOauthFlowsAuthorizationCode(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement/additionalProperties
export function isSecurityRequirementAdditionalProperties(value: unknown): value is types.SecurityRequirementAdditionalProperties {
if(!_isArraySecurityRequirementAdditionalProperties(value)) {
return false;
}
return true;
}
function _isArraySecurityRequirementAdditionalProperties(value: unknown): value is unknown {
if(!Array.isArray(value)) {
return false;
}
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isSecurityRequirementItems(elementValue)) {
return false;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/specification-extensions/patternProperties/^x-
export function isX(value: unknown): value is types.X {
if(!_isAnyX(value)) {
return false;
}
return true;
}
function _isAnyX(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples/properties/example
export function isExamplesExample(value: unknown): value is types.ExamplesExample {
if(!_isAnyExamplesExample(value)) {
return false;
}
return true;
}
function _isAnyExamplesExample(value: unknown): value is unknown {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples/properties/examples
export function isExamplesExamples(value: unknown): value is types.ExamplesExamples {
if(!_isMapExamplesExamples(value)) {
return false;
}
return true;
}
function _isMapExamplesExamples(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(!isExamplesExamplesAdditionalProperties(propertyValue)) {
return false;
}
continue;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/map-of-strings/additionalProperties
export function isMapOfStringsAdditionalProperties(value: unknown): value is types.MapOfStringsAdditionalProperties {
if(!_isStringMapOfStringsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isStringMapOfStringsAdditionalProperties(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/servers/items
export function isPropertiesServersItems(value: unknown): value is types.PropertiesServersItems {
if(!_isReferencePropertiesServersItems(value)) {
return false;
}
return true;
}
function _isReferencePropertiesServersItems(value: unknown): value is unknown {
if(!isServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/webhooks/additionalProperties
export function isWebhooksAdditionalProperties(value: unknown): value is types.WebhooksAdditionalProperties {
if(!_isReferenceWebhooksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceWebhooksAdditionalProperties(value: unknown): value is unknown {
if(!isPathItemOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/security/items
export function isPropertiesSecurityItems(value: unknown): value is types.PropertiesSecurityItems {
if(!_isReferencePropertiesSecurityItems(value)) {
return false;
}
return true;
}
function _isReferencePropertiesSecurityItems(value: unknown): value is unknown {
if(!isSecurityRequirement(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/properties/tags/items
export function isPropertiesTagsItems(value: unknown): value is types.PropertiesTagsItems {
if(!_isReferencePropertiesTagsItems(value)) {
return false;
}
return true;
}
function _isReferencePropertiesTagsItems(value: unknown): value is unknown {
if(!isTag(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server/properties/variables/additionalProperties
export function isVariablesAdditionalProperties(value: unknown): value is types.VariablesAdditionalProperties {
if(!_isReferenceVariablesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceVariablesAdditionalProperties(value: unknown): value is unknown {
if(!isServerVariable(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/server-variable/properties/enum/items
export function isEnumItems(value: unknown): value is types.EnumItems {
if(!_isStringEnumItems(value)) {
return false;
}
return true;
}
function _isStringEnumItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/schemas/additionalProperties
export function isSchemasAdditionalProperties(value: unknown): value is types.SchemasAdditionalProperties {
if(!_isReferenceSchemasAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceSchemasAdditionalProperties(value: unknown): value is unknown {
if(!isSchema(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/responses/additionalProperties
export function isResponsesAdditionalProperties(value: unknown): value is types.ResponsesAdditionalProperties {
if(!_isReferenceResponsesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceResponsesAdditionalProperties(value: unknown): value is unknown {
if(!isResponseOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/parameters/additionalProperties
export function isParametersAdditionalProperties(value: unknown): value is types.ParametersAdditionalProperties {
if(!_isReferenceParametersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceParametersAdditionalProperties(value: unknown): value is unknown {
if(!isParameterOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/examples/additionalProperties
export function isComponentsExamplesAdditionalProperties(value: unknown): value is types.ComponentsExamplesAdditionalProperties {
if(!_isReferenceComponentsExamplesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceComponentsExamplesAdditionalProperties(value: unknown): value is unknown {
if(!isExampleOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/requestBodies/additionalProperties
export function isRequestBodiesAdditionalProperties(value: unknown): value is types.RequestBodiesAdditionalProperties {
if(!_isReferenceRequestBodiesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceRequestBodiesAdditionalProperties(value: unknown): value is unknown {
if(!isRequestBodyOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/headers/additionalProperties
export function isComponentsHeadersAdditionalProperties(value: unknown): value is types.ComponentsHeadersAdditionalProperties {
if(!_isReferenceComponentsHeadersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceComponentsHeadersAdditionalProperties(value: unknown): value is unknown {
if(!isHeaderOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/securitySchemes/additionalProperties
export function isSecuritySchemesAdditionalProperties(value: unknown): value is types.SecuritySchemesAdditionalProperties {
if(!_isReferenceSecuritySchemesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceSecuritySchemesAdditionalProperties(value: unknown): value is unknown {
if(!isSecuritySchemeOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/links/additionalProperties
export function isComponentsLinksAdditionalProperties(value: unknown): value is types.ComponentsLinksAdditionalProperties {
if(!_isReferenceComponentsLinksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceComponentsLinksAdditionalProperties(value: unknown): value is unknown {
if(!isLinkOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/callbacks/additionalProperties
export function isComponentsCallbacksAdditionalProperties(value: unknown): value is types.ComponentsCallbacksAdditionalProperties {
if(!_isReferenceComponentsCallbacksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceComponentsCallbacksAdditionalProperties(value: unknown): value is unknown {
if(!isCallbacksOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/properties/pathItems/additionalProperties
export function isPathItemsAdditionalProperties(value: unknown): value is types.PathItemsAdditionalProperties {
if(!_isReferencePathItemsAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferencePathItemsAdditionalProperties(value: unknown): value is unknown {
if(!isPathItemOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/components/patternProperties/^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$/propertyNames
export function isSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItemsPropertyNames(value: unknown): value is types.SchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItemsPropertyNames {
if(!_isStringSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItemsPropertyNames(value)) {
return false;
}
return true;
}
function _isStringSchemasResponsesParametersExamplesRequestBodiesHeadersSecuritySchemesLinksCallbacksPathItemsPropertyNames(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^[a-zA-Z0-9._-]+$").test(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/servers/items
export function isPathItemServersItems(value: unknown): value is types.PathItemServersItems {
if(!_isReferencePathItemServersItems(value)) {
return false;
}
return true;
}
function _isReferencePathItemServersItems(value: unknown): value is unknown {
if(!isServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/path-item/properties/parameters/items
export function isPathItemParametersItems(value: unknown): value is types.PathItemParametersItems {
if(!_isReferencePathItemParametersItems(value)) {
return false;
}
return true;
}
function _isReferencePathItemParametersItems(value: unknown): value is unknown {
if(!isParameterOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/tags/items
export function isOperationTagsItems(value: unknown): value is types.OperationTagsItems {
if(!_isStringOperationTagsItems(value)) {
return false;
}
return true;
}
function _isStringOperationTagsItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/parameters/items
export function isOperationParametersItems(value: unknown): value is types.OperationParametersItems {
if(!_isReferenceOperationParametersItems(value)) {
return false;
}
return true;
}
function _isReferenceOperationParametersItems(value: unknown): value is unknown {
if(!isParameterOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/callbacks/additionalProperties
export function isOperationCallbacksAdditionalProperties(value: unknown): value is types.OperationCallbacksAdditionalProperties {
if(!_isReferenceOperationCallbacksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceOperationCallbacksAdditionalProperties(value: unknown): value is unknown {
if(!isCallbacksOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/security/items
export function isOperationSecurityItems(value: unknown): value is types.OperationSecurityItems {
if(!_isReferenceOperationSecurityItems(value)) {
return false;
}
return true;
}
function _isReferenceOperationSecurityItems(value: unknown): value is unknown {
if(!isSecurityRequirement(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/operation/properties/servers/items
export function isOperationServersItems(value: unknown): value is types.OperationServersItems {
if(!_isReferenceOperationServersItems(value)) {
return false;
}
return true;
}
function _isReferenceOperationServersItems(value: unknown): value is unknown {
if(!isServer(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/if/properties/in
export function isIfParameterIn(value: unknown): value is types.IfParameterIn {
if(!_isStringIfParameterIn(value)) {
return false;
}
return true;
}
function _isStringIfParameterIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "query") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/parameter/then/properties/allowEmptyValue
export function isAllowEmptyValue(value: unknown): value is types.AllowEmptyValue {
if(!_isBooleanAllowEmptyValue(value)) {
return false;
}
return true;
}
function _isBooleanAllowEmptyValue(value: unknown): value is unknown {
if(typeof value !== "boolean") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/media-type/properties/encoding/additionalProperties
export function isMediaTypeAdditionalProperties(value: unknown): value is types.MediaTypeAdditionalProperties {
if(!_isReferenceMediaTypeAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceMediaTypeAdditionalProperties(value: unknown): value is unknown {
if(!isEncoding(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/if
export function isExplodeDefaultIf(value: unknown): value is types.ExplodeDefaultIf {
if(!_isMapExplodeDefaultIf(value)) {
return false;
}
return true;
}
function _isMapExplodeDefaultIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("style" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "style":
if(!isExplodeDefaultStyle(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/then
export function isExplodeDefaultThen(value: unknown): value is types.ExplodeDefaultThen {
if(!_isMapExplodeDefaultThen(value)) {
return false;
}
return true;
}
function _isMapExplodeDefaultThen(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "explode":
if(!isEncodingExplodeDefaultExplode(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/else
export function isExplodeDefaultElse(value: unknown): value is types.ExplodeDefaultElse {
if(!_isMapExplodeDefaultElse(value)) {
return false;
}
return true;
}
function _isMapExplodeDefaultElse(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "explode":
if(!isElseExplodeDefaultExplode(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/properties/headers/additionalProperties
export function isEncodingHeadersAdditionalProperties(value: unknown): value is types.EncodingHeadersAdditionalProperties {
if(!_isReferenceEncodingHeadersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceEncodingHeadersAdditionalProperties(value: unknown): value is unknown {
if(!isHeaderOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/headers/additionalProperties
export function isResponseHeadersAdditionalProperties(value: unknown): value is types.ResponseHeadersAdditionalProperties {
if(!_isReferenceResponseHeadersAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceResponseHeadersAdditionalProperties(value: unknown): value is unknown {
if(!isHeaderOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/response/properties/links/additionalProperties
export function isResponseLinksAdditionalProperties(value: unknown): value is types.ResponseLinksAdditionalProperties {
if(!_isReferenceResponseLinksAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceResponseLinksAdditionalProperties(value: unknown): value is unknown {
if(!isLinkOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/if
export function isTypeApikeyIf(value: unknown): value is types.TypeApikeyIf {
if(!_isMapTypeApikeyIf(value)) {
return false;
}
return true;
}
function _isMapTypeApikeyIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isTypeApikeyType(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then
export function isTypeApikeyThen(value: unknown): value is types.TypeApikeyThen {
if(!_isMapTypeApikeyThen(value)) {
return false;
}
return true;
}
function _isMapTypeApikeyThen(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("name" in value)) {
return false;
}
if(!("in" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "name":
if(!isTypeApikeyName(propertyValue)) {
return false;
}
continue;
case "in":
if(!isTypeApikeyIn(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/if
export function isTypeHttpIf(value: unknown): value is types.TypeHttpIf {
if(!_isMapTypeHttpIf(value)) {
return false;
}
return true;
}
function _isMapTypeHttpIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isTypeHttpType(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/then
export function isTypeHttpThen(value: unknown): value is types.TypeHttpThen {
if(!_isMapTypeHttpThen(value)) {
return false;
}
return true;
}
function _isMapTypeHttpThen(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("scheme" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "scheme":
if(!isTypeHttpScheme(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/if
export function isTypeHttpBearerIf(value: unknown): value is types.TypeHttpBearerIf {
if(!_isMapTypeHttpBearerIf(value)) {
return false;
}
return true;
}
function _isMapTypeHttpBearerIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
if(!("scheme" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isTypeHttpBearerType(propertyValue)) {
return false;
}
continue;
case "scheme":
if(!isTypeHttpBearerScheme(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/then
export function isTypeHttpBearerThen(value: unknown): value is types.TypeHttpBearerThen {
if(!_isMapTypeHttpBearerThen(value)) {
return false;
}
return true;
}
function _isMapTypeHttpBearerThen(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "bearerFormat":
if(!isBearerFormat(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/if
export function isTypeOauth2If(value: unknown): value is types.TypeOauth2If {
if(!_isMapTypeOauth2If(value)) {
return false;
}
return true;
}
function _isMapTypeOauth2If(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isTypeOauth2Type(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/then
export function isTypeOauth2Then(value: unknown): value is types.TypeOauth2Then {
if(!_isMapTypeOauth2Then(value)) {
return false;
}
return true;
}
function _isMapTypeOauth2Then(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("flows" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "flows":
if(!isFlows(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/if
export function isTypeOidcIf(value: unknown): value is types.TypeOidcIf {
if(!_isMapTypeOidcIf(value)) {
return false;
}
return true;
}
function _isMapTypeOidcIf(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("type" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "type":
if(!isTypeOidcType(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/then
export function isTypeOidcThen(value: unknown): value is types.TypeOidcThen {
if(!_isMapTypeOidcThen(value)) {
return false;
}
return true;
}
function _isMapTypeOidcThen(value: unknown): value is unknown {
if(typeof value !== "object" || value === null || Array.isArray(value)) {
return false;
}
if(!("openIdConnectUrl" in value)) {
return false;
}
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
switch(propertyName) {
case "openIdConnectUrl":
if(!isOpenIdConnectUrl(propertyValue)) {
return false;
}
continue;
}
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/authorizationUrl
export function isImplicitAuthorizationUrl(value: unknown): value is types.ImplicitAuthorizationUrl {
if(!_isStringImplicitAuthorizationUrl(value)) {
return false;
}
return true;
}
function _isStringImplicitAuthorizationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/refreshUrl
export function isImplicitRefreshUrl(value: unknown): value is types.ImplicitRefreshUrl {
if(!_isStringImplicitRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringImplicitRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/implicit/properties/scopes
export function isImplicitScopes(value: unknown): value is types.ImplicitScopes {
if(!_isReferenceImplicitScopes(value)) {
return false;
}
return true;
}
function _isReferenceImplicitScopes(value: unknown): value is unknown {
if(!isMapOfStrings(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/tokenUrl
export function isPasswordTokenUrl(value: unknown): value is types.PasswordTokenUrl {
if(!_isStringPasswordTokenUrl(value)) {
return false;
}
return true;
}
function _isStringPasswordTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/refreshUrl
export function isPasswordRefreshUrl(value: unknown): value is types.PasswordRefreshUrl {
if(!_isStringPasswordRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringPasswordRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/password/properties/scopes
export function isPasswordScopes(value: unknown): value is types.PasswordScopes {
if(!_isReferencePasswordScopes(value)) {
return false;
}
return true;
}
function _isReferencePasswordScopes(value: unknown): value is unknown {
if(!isMapOfStrings(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/tokenUrl
export function isClientCredentialsTokenUrl(value: unknown): value is types.ClientCredentialsTokenUrl {
if(!_isStringClientCredentialsTokenUrl(value)) {
return false;
}
return true;
}
function _isStringClientCredentialsTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/refreshUrl
export function isClientCredentialsRefreshUrl(value: unknown): value is types.ClientCredentialsRefreshUrl {
if(!_isStringClientCredentialsRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringClientCredentialsRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/client-credentials/properties/scopes
export function isClientCredentialsScopes(value: unknown): value is types.ClientCredentialsScopes {
if(!_isReferenceClientCredentialsScopes(value)) {
return false;
}
return true;
}
function _isReferenceClientCredentialsScopes(value: unknown): value is unknown {
if(!isMapOfStrings(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/authorizationUrl
export function isAuthorizationCodeAuthorizationUrl(value: unknown): value is types.AuthorizationCodeAuthorizationUrl {
if(!_isStringAuthorizationCodeAuthorizationUrl(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeAuthorizationUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/tokenUrl
export function isAuthorizationCodeTokenUrl(value: unknown): value is types.AuthorizationCodeTokenUrl {
if(!_isStringAuthorizationCodeTokenUrl(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeTokenUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/refreshUrl
export function isAuthorizationCodeRefreshUrl(value: unknown): value is types.AuthorizationCodeRefreshUrl {
if(!_isStringAuthorizationCodeRefreshUrl(value)) {
return false;
}
return true;
}
function _isStringAuthorizationCodeRefreshUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/oauth-flows/$defs/authorization-code/properties/scopes
export function isAuthorizationCodeScopes(value: unknown): value is types.AuthorizationCodeScopes {
if(!_isReferenceAuthorizationCodeScopes(value)) {
return false;
}
return true;
}
function _isReferenceAuthorizationCodeScopes(value: unknown): value is unknown {
if(!isMapOfStrings(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-requirement/additionalProperties/items
export function isSecurityRequirementItems(value: unknown): value is types.SecurityRequirementItems {
if(!_isStringSecurityRequirementItems(value)) {
return false;
}
return true;
}
function _isStringSecurityRequirementItems(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/examples/properties/examples/additionalProperties
export function isExamplesExamplesAdditionalProperties(value: unknown): value is types.ExamplesExamplesAdditionalProperties {
if(!_isReferenceExamplesExamplesAdditionalProperties(value)) {
return false;
}
return true;
}
function _isReferenceExamplesExamplesAdditionalProperties(value: unknown): value is unknown {
if(!isExampleOrReference(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/if/properties/style
export function isExplodeDefaultStyle(value: unknown): value is types.ExplodeDefaultStyle {
if(!_isStringExplodeDefaultStyle(value)) {
return false;
}
return true;
}
function _isStringExplodeDefaultStyle(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "form") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/then/properties/explode
export function isEncodingExplodeDefaultExplode(value: unknown): value is types.EncodingExplodeDefaultExplode {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/encoding/$defs/explode-default/else/properties/explode
export function isElseExplodeDefaultExplode(value: unknown): value is types.ElseExplodeDefaultExplode {
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/if/properties/type
export function isTypeApikeyType(value: unknown): value is types.TypeApikeyType {
if(!_isStringTypeApikeyType(value)) {
return false;
}
return true;
}
function _isStringTypeApikeyType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "apiKey") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then/properties/name
export function isTypeApikeyName(value: unknown): value is types.TypeApikeyName {
if(!_isStringTypeApikeyName(value)) {
return false;
}
return true;
}
function _isStringTypeApikeyName(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-apikey/then/properties/in
export function isTypeApikeyIn(value: unknown): value is types.TypeApikeyIn {
if(!_isStringTypeApikeyIn(value)) {
return false;
}
return true;
}
function _isStringTypeApikeyIn(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "query" && value !== "header" && value !== "cookie") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/if/properties/type
export function isTypeHttpType(value: unknown): value is types.TypeHttpType {
if(!_isStringTypeHttpType(value)) {
return false;
}
return true;
}
function _isStringTypeHttpType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "http") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http/then/properties/scheme
export function isTypeHttpScheme(value: unknown): value is types.TypeHttpScheme {
if(!_isStringTypeHttpScheme(value)) {
return false;
}
return true;
}
function _isStringTypeHttpScheme(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/if/properties/type
export function isTypeHttpBearerType(value: unknown): value is types.TypeHttpBearerType {
if(!_isStringTypeHttpBearerType(value)) {
return false;
}
return true;
}
function _isStringTypeHttpBearerType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "http") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/if/properties/scheme
export function isTypeHttpBearerScheme(value: unknown): value is types.TypeHttpBearerScheme {
if(!_isStringTypeHttpBearerScheme(value)) {
return false;
}
return true;
}
function _isStringTypeHttpBearerScheme(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(!new RegExp("^[Bb][Ee][Aa][Rr][Ee][Rr]$").test(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-http-bearer/then/properties/bearerFormat
export function isBearerFormat(value: unknown): value is types.BearerFormat {
if(!_isStringBearerFormat(value)) {
return false;
}
return true;
}
function _isStringBearerFormat(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/if/properties/type
export function isTypeOauth2Type(value: unknown): value is types.TypeOauth2Type {
if(!_isStringTypeOauth2Type(value)) {
return false;
}
return true;
}
function _isStringTypeOauth2Type(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "oauth2") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oauth2/then/properties/flows
export function isFlows(value: unknown): value is types.Flows {
if(!_isReferenceFlows(value)) {
return false;
}
return true;
}
function _isReferenceFlows(value: unknown): value is unknown {
if(!isOauthFlows(value)) {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/if/properties/type
export function isTypeOidcType(value: unknown): value is types.TypeOidcType {
if(!_isStringTypeOidcType(value)) {
return false;
}
return true;
}
function _isStringTypeOidcType(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
if(value !== "openIdConnect") {
return false;
}
return true;
}
// https://spec.openapis.org/oas/3.1/schema/2022-10-07#/$defs/security-scheme/$defs/type-oidc/then/properties/openIdConnectUrl
export function isOpenIdConnectUrl(value: unknown): value is types.OpenIdConnectUrl {
if(!_isStringOpenIdConnectUrl(value)) {
return false;
}
return true;
}
function _isStringOpenIdConnectUrl(value: unknown): value is unknown {
if(typeof value !== "string") {
return false;
}
return true;
}
